// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StatusCommon.proto

#ifndef PROTOBUF_StatusCommon_2eproto__INCLUDED
#define PROTOBUF_StatusCommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace srcinc {
namespace ngi {
namespace data {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_StatusCommon_2eproto();
void protobuf_AssignDesc_StatusCommon_2eproto();
void protobuf_ShutdownFile_StatusCommon_2eproto();


enum Status {
  STATUS_NOT_APPLICABLE = 0,
  STATUS_UNKNOWN = 1,
  STATUS_NORMAL = 2,
  STATUS_DEGRADED = 3,
  STATUS_FAULTED = 4
};
bool Status_IsValid(int value);
const Status Status_MIN = STATUS_NOT_APPLICABLE;
const Status Status_MAX = STATUS_FAULTED;
const int Status_ARRAYSIZE = Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* Status_descriptor();
inline const ::std::string& Status_Name(Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    Status_descriptor(), value);
}
inline bool Status_Parse(
    const ::std::string& name, Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Status>(
    Status_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace data
}  // namespace ngi
}  // namespace srcinc
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::srcinc::ngi::data::Status>() {
  return ::com::srcinc::ngi::data::Status_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_StatusCommon_2eproto__INCLUDED
