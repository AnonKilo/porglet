// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BitStatusMessage.proto

#ifndef PROTOBUF_BitStatusMessage_2eproto__INCLUDED
#define PROTOBUF_BitStatusMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "StatusCommon.pb.h"
#include "ServiceInfrastructureCommon.pb.h"
// @@protoc_insertion_point(includes)

namespace com {
namespace srcinc {
namespace ngi {
namespace data {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_BitStatusMessage_2eproto();
void protobuf_AssignDesc_BitStatusMessage_2eproto();
void protobuf_ShutdownFile_BitStatusMessage_2eproto();

class BitStatus;
class BitStatus_BitEntry;
class BitStatus_BitEntry_RepeatedDoubleType;
class BitStatusTopic;

// ===================================================================

class BitStatus_BitEntry_RepeatedDoubleType : public ::google::protobuf::Message {
 public:
  BitStatus_BitEntry_RepeatedDoubleType();
  virtual ~BitStatus_BitEntry_RepeatedDoubleType();

  BitStatus_BitEntry_RepeatedDoubleType(const BitStatus_BitEntry_RepeatedDoubleType& from);

  inline BitStatus_BitEntry_RepeatedDoubleType& operator=(const BitStatus_BitEntry_RepeatedDoubleType& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BitStatus_BitEntry_RepeatedDoubleType& default_instance();

  void Swap(BitStatus_BitEntry_RepeatedDoubleType* other);

  // implements Message ----------------------------------------------

  BitStatus_BitEntry_RepeatedDoubleType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BitStatus_BitEntry_RepeatedDoubleType& from);
  void MergeFrom(const BitStatus_BitEntry_RepeatedDoubleType& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double value_double = 1;
  inline int value_double_size() const;
  inline void clear_value_double();
  static const int kValueDoubleFieldNumber = 1;
  inline double value_double(int index) const;
  inline void set_value_double(int index, double value);
  inline void add_value_double(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      value_double() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_value_double();

  // @@protoc_insertion_point(class_scope:com.srcinc.ngi.data.BitStatus.BitEntry.RepeatedDoubleType)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< double > value_double_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_BitStatusMessage_2eproto();
  friend void protobuf_AssignDesc_BitStatusMessage_2eproto();
  friend void protobuf_ShutdownFile_BitStatusMessage_2eproto();

  void InitAsDefaultInstance();
  static BitStatus_BitEntry_RepeatedDoubleType* default_instance_;
};
// -------------------------------------------------------------------

class BitStatus_BitEntry : public ::google::protobuf::Message {
 public:
  BitStatus_BitEntry();
  virtual ~BitStatus_BitEntry();

  BitStatus_BitEntry(const BitStatus_BitEntry& from);

  inline BitStatus_BitEntry& operator=(const BitStatus_BitEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BitStatus_BitEntry& default_instance();

  void Swap(BitStatus_BitEntry* other);

  // implements Message ----------------------------------------------

  BitStatus_BitEntry* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BitStatus_BitEntry& from);
  void MergeFrom(const BitStatus_BitEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BitStatus_BitEntry_RepeatedDoubleType RepeatedDoubleType;

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional .com.srcinc.ngi.data.Status status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::com::srcinc::ngi::data::Status status() const;
  inline void set_status(::com::srcinc::ngi::data::Status value);

  // optional bool value_bool = 3;
  inline bool has_value_bool() const;
  inline void clear_value_bool();
  static const int kValueBoolFieldNumber = 3;
  inline bool value_bool() const;
  inline void set_value_bool(bool value);

  // optional int32 value_integer = 4;
  inline bool has_value_integer() const;
  inline void clear_value_integer();
  static const int kValueIntegerFieldNumber = 4;
  inline ::google::protobuf::int32 value_integer() const;
  inline void set_value_integer(::google::protobuf::int32 value);

  // optional double value_double = 5;
  inline bool has_value_double() const;
  inline void clear_value_double();
  static const int kValueDoubleFieldNumber = 5;
  inline double value_double() const;
  inline void set_value_double(double value);

  // optional string value_string = 6;
  inline bool has_value_string() const;
  inline void clear_value_string();
  static const int kValueStringFieldNumber = 6;
  inline const ::std::string& value_string() const;
  inline void set_value_string(const ::std::string& value);
  inline void set_value_string(const char* value);
  inline void set_value_string(const char* value, size_t size);
  inline ::std::string* mutable_value_string();
  inline ::std::string* release_value_string();
  inline void set_allocated_value_string(::std::string* value_string);

  // optional .com.srcinc.ngi.data.BitStatus.BitEntry.RepeatedDoubleType value_double_repeated = 7;
  inline bool has_value_double_repeated() const;
  inline void clear_value_double_repeated();
  static const int kValueDoubleRepeatedFieldNumber = 7;
  inline const ::com::srcinc::ngi::data::BitStatus_BitEntry_RepeatedDoubleType& value_double_repeated() const;
  inline ::com::srcinc::ngi::data::BitStatus_BitEntry_RepeatedDoubleType* mutable_value_double_repeated();
  inline ::com::srcinc::ngi::data::BitStatus_BitEntry_RepeatedDoubleType* release_value_double_repeated();
  inline void set_allocated_value_double_repeated(::com::srcinc::ngi::data::BitStatus_BitEntry_RepeatedDoubleType* value_double_repeated);

  // @@protoc_insertion_point(class_scope:com.srcinc.ngi.data.BitStatus.BitEntry)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_value_bool();
  inline void clear_has_value_bool();
  inline void set_has_value_integer();
  inline void clear_has_value_integer();
  inline void set_has_value_double();
  inline void clear_has_value_double();
  inline void set_has_value_string();
  inline void clear_has_value_string();
  inline void set_has_value_double_repeated();
  inline void clear_has_value_double_repeated();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  int status_;
  bool value_bool_;
  ::google::protobuf::int32 value_integer_;
  double value_double_;
  ::std::string* value_string_;
  ::com::srcinc::ngi::data::BitStatus_BitEntry_RepeatedDoubleType* value_double_repeated_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_BitStatusMessage_2eproto();
  friend void protobuf_AssignDesc_BitStatusMessage_2eproto();
  friend void protobuf_ShutdownFile_BitStatusMessage_2eproto();

  void InitAsDefaultInstance();
  static BitStatus_BitEntry* default_instance_;
};
// -------------------------------------------------------------------

class BitStatus : public ::google::protobuf::Message {
 public:
  BitStatus();
  virtual ~BitStatus();

  BitStatus(const BitStatus& from);

  inline BitStatus& operator=(const BitStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BitStatus& default_instance();

  void Swap(BitStatus* other);

  // implements Message ----------------------------------------------

  BitStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BitStatus& from);
  void MergeFrom(const BitStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BitStatus_BitEntry BitEntry;

  // accessors -------------------------------------------------------

  // repeated .com.srcinc.ngi.data.BitStatus.BitEntry bit_values = 1;
  inline int bit_values_size() const;
  inline void clear_bit_values();
  static const int kBitValuesFieldNumber = 1;
  inline const ::com::srcinc::ngi::data::BitStatus_BitEntry& bit_values(int index) const;
  inline ::com::srcinc::ngi::data::BitStatus_BitEntry* mutable_bit_values(int index);
  inline ::com::srcinc::ngi::data::BitStatus_BitEntry* add_bit_values();
  inline const ::google::protobuf::RepeatedPtrField< ::com::srcinc::ngi::data::BitStatus_BitEntry >&
      bit_values() const;
  inline ::google::protobuf::RepeatedPtrField< ::com::srcinc::ngi::data::BitStatus_BitEntry >*
      mutable_bit_values();

  // @@protoc_insertion_point(class_scope:com.srcinc.ngi.data.BitStatus)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::com::srcinc::ngi::data::BitStatus_BitEntry > bit_values_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_BitStatusMessage_2eproto();
  friend void protobuf_AssignDesc_BitStatusMessage_2eproto();
  friend void protobuf_ShutdownFile_BitStatusMessage_2eproto();

  void InitAsDefaultInstance();
  static BitStatus* default_instance_;
};
// -------------------------------------------------------------------

class BitStatusTopic : public ::google::protobuf::Message {
 public:
  BitStatusTopic();
  virtual ~BitStatusTopic();

  BitStatusTopic(const BitStatusTopic& from);

  inline BitStatusTopic& operator=(const BitStatusTopic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BitStatusTopic& default_instance();

  void Swap(BitStatusTopic* other);

  // implements Message ----------------------------------------------

  BitStatusTopic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BitStatusTopic& from);
  void MergeFrom(const BitStatusTopic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .service_infrastructure.Header header = 100;
  inline bool has_header() const;
  inline void clear_header();
  static const int kHeaderFieldNumber = 100;
  inline const ::service_infrastructure::Header& header() const;
  inline ::service_infrastructure::Header* mutable_header();
  inline ::service_infrastructure::Header* release_header();
  inline void set_allocated_header(::service_infrastructure::Header* header);

  // optional .com.srcinc.ngi.data.BitStatus bit_status = 1;
  inline bool has_bit_status() const;
  inline void clear_bit_status();
  static const int kBitStatusFieldNumber = 1;
  inline const ::com::srcinc::ngi::data::BitStatus& bit_status() const;
  inline ::com::srcinc::ngi::data::BitStatus* mutable_bit_status();
  inline ::com::srcinc::ngi::data::BitStatus* release_bit_status();
  inline void set_allocated_bit_status(::com::srcinc::ngi::data::BitStatus* bit_status);

  // @@protoc_insertion_point(class_scope:com.srcinc.ngi.data.BitStatusTopic)
 private:
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_bit_status();
  inline void clear_has_bit_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::service_infrastructure::Header* header_;
  ::com::srcinc::ngi::data::BitStatus* bit_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_BitStatusMessage_2eproto();
  friend void protobuf_AssignDesc_BitStatusMessage_2eproto();
  friend void protobuf_ShutdownFile_BitStatusMessage_2eproto();

  void InitAsDefaultInstance();
  static BitStatusTopic* default_instance_;
};
// ===================================================================


// ===================================================================

// BitStatus_BitEntry_RepeatedDoubleType

// repeated double value_double = 1;
inline int BitStatus_BitEntry_RepeatedDoubleType::value_double_size() const {
  return value_double_.size();
}
inline void BitStatus_BitEntry_RepeatedDoubleType::clear_value_double() {
  value_double_.Clear();
}
inline double BitStatus_BitEntry_RepeatedDoubleType::value_double(int index) const {
  return value_double_.Get(index);
}
inline void BitStatus_BitEntry_RepeatedDoubleType::set_value_double(int index, double value) {
  value_double_.Set(index, value);
}
inline void BitStatus_BitEntry_RepeatedDoubleType::add_value_double(double value) {
  value_double_.Add(value);
}
inline const ::google::protobuf::RepeatedField< double >&
BitStatus_BitEntry_RepeatedDoubleType::value_double() const {
  return value_double_;
}
inline ::google::protobuf::RepeatedField< double >*
BitStatus_BitEntry_RepeatedDoubleType::mutable_value_double() {
  return &value_double_;
}

// -------------------------------------------------------------------

// BitStatus_BitEntry

// required int32 id = 1;
inline bool BitStatus_BitEntry::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BitStatus_BitEntry::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BitStatus_BitEntry::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BitStatus_BitEntry::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BitStatus_BitEntry::id() const {
  return id_;
}
inline void BitStatus_BitEntry::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional .com.srcinc.ngi.data.Status status = 2;
inline bool BitStatus_BitEntry::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BitStatus_BitEntry::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BitStatus_BitEntry::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BitStatus_BitEntry::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::com::srcinc::ngi::data::Status BitStatus_BitEntry::status() const {
  return static_cast< ::com::srcinc::ngi::data::Status >(status_);
}
inline void BitStatus_BitEntry::set_status(::com::srcinc::ngi::data::Status value) {
  assert(::com::srcinc::ngi::data::Status_IsValid(value));
  set_has_status();
  status_ = value;
}

// optional bool value_bool = 3;
inline bool BitStatus_BitEntry::has_value_bool() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BitStatus_BitEntry::set_has_value_bool() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BitStatus_BitEntry::clear_has_value_bool() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BitStatus_BitEntry::clear_value_bool() {
  value_bool_ = false;
  clear_has_value_bool();
}
inline bool BitStatus_BitEntry::value_bool() const {
  return value_bool_;
}
inline void BitStatus_BitEntry::set_value_bool(bool value) {
  set_has_value_bool();
  value_bool_ = value;
}

// optional int32 value_integer = 4;
inline bool BitStatus_BitEntry::has_value_integer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BitStatus_BitEntry::set_has_value_integer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BitStatus_BitEntry::clear_has_value_integer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BitStatus_BitEntry::clear_value_integer() {
  value_integer_ = 0;
  clear_has_value_integer();
}
inline ::google::protobuf::int32 BitStatus_BitEntry::value_integer() const {
  return value_integer_;
}
inline void BitStatus_BitEntry::set_value_integer(::google::protobuf::int32 value) {
  set_has_value_integer();
  value_integer_ = value;
}

// optional double value_double = 5;
inline bool BitStatus_BitEntry::has_value_double() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BitStatus_BitEntry::set_has_value_double() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BitStatus_BitEntry::clear_has_value_double() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BitStatus_BitEntry::clear_value_double() {
  value_double_ = 0;
  clear_has_value_double();
}
inline double BitStatus_BitEntry::value_double() const {
  return value_double_;
}
inline void BitStatus_BitEntry::set_value_double(double value) {
  set_has_value_double();
  value_double_ = value;
}

// optional string value_string = 6;
inline bool BitStatus_BitEntry::has_value_string() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BitStatus_BitEntry::set_has_value_string() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BitStatus_BitEntry::clear_has_value_string() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BitStatus_BitEntry::clear_value_string() {
  if (value_string_ != &::google::protobuf::internal::kEmptyString) {
    value_string_->clear();
  }
  clear_has_value_string();
}
inline const ::std::string& BitStatus_BitEntry::value_string() const {
  return *value_string_;
}
inline void BitStatus_BitEntry::set_value_string(const ::std::string& value) {
  set_has_value_string();
  if (value_string_ == &::google::protobuf::internal::kEmptyString) {
    value_string_ = new ::std::string;
  }
  value_string_->assign(value);
}
inline void BitStatus_BitEntry::set_value_string(const char* value) {
  set_has_value_string();
  if (value_string_ == &::google::protobuf::internal::kEmptyString) {
    value_string_ = new ::std::string;
  }
  value_string_->assign(value);
}
inline void BitStatus_BitEntry::set_value_string(const char* value, size_t size) {
  set_has_value_string();
  if (value_string_ == &::google::protobuf::internal::kEmptyString) {
    value_string_ = new ::std::string;
  }
  value_string_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BitStatus_BitEntry::mutable_value_string() {
  set_has_value_string();
  if (value_string_ == &::google::protobuf::internal::kEmptyString) {
    value_string_ = new ::std::string;
  }
  return value_string_;
}
inline ::std::string* BitStatus_BitEntry::release_value_string() {
  clear_has_value_string();
  if (value_string_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_string_;
    value_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BitStatus_BitEntry::set_allocated_value_string(::std::string* value_string) {
  if (value_string_ != &::google::protobuf::internal::kEmptyString) {
    delete value_string_;
  }
  if (value_string) {
    set_has_value_string();
    value_string_ = value_string;
  } else {
    clear_has_value_string();
    value_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .com.srcinc.ngi.data.BitStatus.BitEntry.RepeatedDoubleType value_double_repeated = 7;
inline bool BitStatus_BitEntry::has_value_double_repeated() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BitStatus_BitEntry::set_has_value_double_repeated() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BitStatus_BitEntry::clear_has_value_double_repeated() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BitStatus_BitEntry::clear_value_double_repeated() {
  if (value_double_repeated_ != NULL) value_double_repeated_->::com::srcinc::ngi::data::BitStatus_BitEntry_RepeatedDoubleType::Clear();
  clear_has_value_double_repeated();
}
inline const ::com::srcinc::ngi::data::BitStatus_BitEntry_RepeatedDoubleType& BitStatus_BitEntry::value_double_repeated() const {
  return value_double_repeated_ != NULL ? *value_double_repeated_ : *default_instance_->value_double_repeated_;
}
inline ::com::srcinc::ngi::data::BitStatus_BitEntry_RepeatedDoubleType* BitStatus_BitEntry::mutable_value_double_repeated() {
  set_has_value_double_repeated();
  if (value_double_repeated_ == NULL) value_double_repeated_ = new ::com::srcinc::ngi::data::BitStatus_BitEntry_RepeatedDoubleType;
  return value_double_repeated_;
}
inline ::com::srcinc::ngi::data::BitStatus_BitEntry_RepeatedDoubleType* BitStatus_BitEntry::release_value_double_repeated() {
  clear_has_value_double_repeated();
  ::com::srcinc::ngi::data::BitStatus_BitEntry_RepeatedDoubleType* temp = value_double_repeated_;
  value_double_repeated_ = NULL;
  return temp;
}
inline void BitStatus_BitEntry::set_allocated_value_double_repeated(::com::srcinc::ngi::data::BitStatus_BitEntry_RepeatedDoubleType* value_double_repeated) {
  delete value_double_repeated_;
  value_double_repeated_ = value_double_repeated;
  if (value_double_repeated) {
    set_has_value_double_repeated();
  } else {
    clear_has_value_double_repeated();
  }
}

// -------------------------------------------------------------------

// BitStatus

// repeated .com.srcinc.ngi.data.BitStatus.BitEntry bit_values = 1;
inline int BitStatus::bit_values_size() const {
  return bit_values_.size();
}
inline void BitStatus::clear_bit_values() {
  bit_values_.Clear();
}
inline const ::com::srcinc::ngi::data::BitStatus_BitEntry& BitStatus::bit_values(int index) const {
  return bit_values_.Get(index);
}
inline ::com::srcinc::ngi::data::BitStatus_BitEntry* BitStatus::mutable_bit_values(int index) {
  return bit_values_.Mutable(index);
}
inline ::com::srcinc::ngi::data::BitStatus_BitEntry* BitStatus::add_bit_values() {
  return bit_values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::com::srcinc::ngi::data::BitStatus_BitEntry >&
BitStatus::bit_values() const {
  return bit_values_;
}
inline ::google::protobuf::RepeatedPtrField< ::com::srcinc::ngi::data::BitStatus_BitEntry >*
BitStatus::mutable_bit_values() {
  return &bit_values_;
}

// -------------------------------------------------------------------

// BitStatusTopic

// optional .service_infrastructure.Header header = 100;
inline bool BitStatusTopic::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BitStatusTopic::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BitStatusTopic::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BitStatusTopic::clear_header() {
  if (header_ != NULL) header_->::service_infrastructure::Header::Clear();
  clear_has_header();
}
inline const ::service_infrastructure::Header& BitStatusTopic::header() const {
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::service_infrastructure::Header* BitStatusTopic::mutable_header() {
  set_has_header();
  if (header_ == NULL) header_ = new ::service_infrastructure::Header;
  return header_;
}
inline ::service_infrastructure::Header* BitStatusTopic::release_header() {
  clear_has_header();
  ::service_infrastructure::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline void BitStatusTopic::set_allocated_header(::service_infrastructure::Header* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
}

// optional .com.srcinc.ngi.data.BitStatus bit_status = 1;
inline bool BitStatusTopic::has_bit_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BitStatusTopic::set_has_bit_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BitStatusTopic::clear_has_bit_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BitStatusTopic::clear_bit_status() {
  if (bit_status_ != NULL) bit_status_->::com::srcinc::ngi::data::BitStatus::Clear();
  clear_has_bit_status();
}
inline const ::com::srcinc::ngi::data::BitStatus& BitStatusTopic::bit_status() const {
  return bit_status_ != NULL ? *bit_status_ : *default_instance_->bit_status_;
}
inline ::com::srcinc::ngi::data::BitStatus* BitStatusTopic::mutable_bit_status() {
  set_has_bit_status();
  if (bit_status_ == NULL) bit_status_ = new ::com::srcinc::ngi::data::BitStatus;
  return bit_status_;
}
inline ::com::srcinc::ngi::data::BitStatus* BitStatusTopic::release_bit_status() {
  clear_has_bit_status();
  ::com::srcinc::ngi::data::BitStatus* temp = bit_status_;
  bit_status_ = NULL;
  return temp;
}
inline void BitStatusTopic::set_allocated_bit_status(::com::srcinc::ngi::data::BitStatus* bit_status) {
  delete bit_status_;
  bit_status_ = bit_status;
  if (bit_status) {
    set_has_bit_status();
  } else {
    clear_has_bit_status();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace data
}  // namespace ngi
}  // namespace srcinc
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_BitStatusMessage_2eproto__INCLUDED
