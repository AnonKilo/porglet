// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BitStatusMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "BitStatusMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace srcinc {
namespace ngi {
namespace data {

namespace {

const ::google::protobuf::Descriptor* BitStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BitStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* BitStatus_BitEntry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BitStatus_BitEntry_reflection_ = NULL;
const ::google::protobuf::Descriptor* BitStatus_BitEntry_RepeatedDoubleType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BitStatus_BitEntry_RepeatedDoubleType_reflection_ = NULL;
const ::google::protobuf::Descriptor* BitStatusTopic_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BitStatusTopic_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_BitStatusMessage_2eproto() {
  protobuf_AddDesc_BitStatusMessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "BitStatusMessage.proto");
  GOOGLE_CHECK(file != NULL);
  BitStatus_descriptor_ = file->message_type(0);
  static const int BitStatus_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BitStatus, bit_values_),
  };
  BitStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BitStatus_descriptor_,
      BitStatus::default_instance_,
      BitStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BitStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BitStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BitStatus));
  BitStatus_BitEntry_descriptor_ = BitStatus_descriptor_->nested_type(0);
  static const int BitStatus_BitEntry_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BitStatus_BitEntry, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BitStatus_BitEntry, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BitStatus_BitEntry, value_bool_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BitStatus_BitEntry, value_integer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BitStatus_BitEntry, value_double_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BitStatus_BitEntry, value_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BitStatus_BitEntry, value_double_repeated_),
  };
  BitStatus_BitEntry_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BitStatus_BitEntry_descriptor_,
      BitStatus_BitEntry::default_instance_,
      BitStatus_BitEntry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BitStatus_BitEntry, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BitStatus_BitEntry, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BitStatus_BitEntry));
  BitStatus_BitEntry_RepeatedDoubleType_descriptor_ = BitStatus_BitEntry_descriptor_->nested_type(0);
  static const int BitStatus_BitEntry_RepeatedDoubleType_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BitStatus_BitEntry_RepeatedDoubleType, value_double_),
  };
  BitStatus_BitEntry_RepeatedDoubleType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BitStatus_BitEntry_RepeatedDoubleType_descriptor_,
      BitStatus_BitEntry_RepeatedDoubleType::default_instance_,
      BitStatus_BitEntry_RepeatedDoubleType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BitStatus_BitEntry_RepeatedDoubleType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BitStatus_BitEntry_RepeatedDoubleType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BitStatus_BitEntry_RepeatedDoubleType));
  BitStatusTopic_descriptor_ = file->message_type(1);
  static const int BitStatusTopic_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BitStatusTopic, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BitStatusTopic, bit_status_),
  };
  BitStatusTopic_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BitStatusTopic_descriptor_,
      BitStatusTopic::default_instance_,
      BitStatusTopic_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BitStatusTopic, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BitStatusTopic, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BitStatusTopic));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_BitStatusMessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BitStatus_descriptor_, &BitStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BitStatus_BitEntry_descriptor_, &BitStatus_BitEntry::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BitStatus_BitEntry_RepeatedDoubleType_descriptor_, &BitStatus_BitEntry_RepeatedDoubleType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BitStatusTopic_descriptor_, &BitStatusTopic::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_BitStatusMessage_2eproto() {
  delete BitStatus::default_instance_;
  delete BitStatus_reflection_;
  delete BitStatus_BitEntry::default_instance_;
  delete BitStatus_BitEntry_reflection_;
  delete BitStatus_BitEntry_RepeatedDoubleType::default_instance_;
  delete BitStatus_BitEntry_RepeatedDoubleType_reflection_;
  delete BitStatusTopic::default_instance_;
  delete BitStatusTopic_reflection_;
}

void protobuf_AddDesc_BitStatusMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::com::srcinc::ngi::data::protobuf_AddDesc_StatusCommon_2eproto();
  ::service_infrastructure::protobuf_AddDesc_ServiceInfrastructureCommon_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026BitStatusMessage.proto\022\023com.srcinc.ngi"
    ".data\032\022StatusCommon.proto\032!ServiceInfras"
    "tructureCommon.proto\"\354\002\n\tBitStatus\022;\n\nbi"
    "t_values\030\001 \003(\0132\'.com.srcinc.ngi.data.Bit"
    "Status.BitEntry\032\241\002\n\010BitEntry\022\n\n\002id\030\001 \002(\005"
    "\022+\n\006status\030\002 \001(\0162\033.com.srcinc.ngi.data.S"
    "tatus\022\022\n\nvalue_bool\030\003 \001(\010\022\025\n\rvalue_integ"
    "er\030\004 \001(\005\022\024\n\014value_double\030\005 \001(\001\022\024\n\014value_"
    "string\030\006 \001(\t\022Y\n\025value_double_repeated\030\007 "
    "\001(\0132:.com.srcinc.ngi.data.BitStatus.BitE"
    "ntry.RepeatedDoubleType\032*\n\022RepeatedDoubl"
    "eType\022\024\n\014value_double\030\001 \003(\001\"t\n\016BitStatus"
    "Topic\022.\n\006header\030d \001(\0132\036.service_infrastr"
    "ucture.Header\0222\n\nbit_status\030\001 \001(\0132\036.com."
    "srcinc.ngi.data.BitStatus", 585);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BitStatusMessage.proto", &protobuf_RegisterTypes);
  BitStatus::default_instance_ = new BitStatus();
  BitStatus_BitEntry::default_instance_ = new BitStatus_BitEntry();
  BitStatus_BitEntry_RepeatedDoubleType::default_instance_ = new BitStatus_BitEntry_RepeatedDoubleType();
  BitStatusTopic::default_instance_ = new BitStatusTopic();
  BitStatus::default_instance_->InitAsDefaultInstance();
  BitStatus_BitEntry::default_instance_->InitAsDefaultInstance();
  BitStatus_BitEntry_RepeatedDoubleType::default_instance_->InitAsDefaultInstance();
  BitStatusTopic::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_BitStatusMessage_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_BitStatusMessage_2eproto {
  StaticDescriptorInitializer_BitStatusMessage_2eproto() {
    protobuf_AddDesc_BitStatusMessage_2eproto();
  }
} static_descriptor_initializer_BitStatusMessage_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BitStatus_BitEntry_RepeatedDoubleType::kValueDoubleFieldNumber;
#endif  // !_MSC_VER

BitStatus_BitEntry_RepeatedDoubleType::BitStatus_BitEntry_RepeatedDoubleType()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BitStatus_BitEntry_RepeatedDoubleType::InitAsDefaultInstance() {
}

BitStatus_BitEntry_RepeatedDoubleType::BitStatus_BitEntry_RepeatedDoubleType(const BitStatus_BitEntry_RepeatedDoubleType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BitStatus_BitEntry_RepeatedDoubleType::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BitStatus_BitEntry_RepeatedDoubleType::~BitStatus_BitEntry_RepeatedDoubleType() {
  SharedDtor();
}

void BitStatus_BitEntry_RepeatedDoubleType::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BitStatus_BitEntry_RepeatedDoubleType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BitStatus_BitEntry_RepeatedDoubleType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BitStatus_BitEntry_RepeatedDoubleType_descriptor_;
}

const BitStatus_BitEntry_RepeatedDoubleType& BitStatus_BitEntry_RepeatedDoubleType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BitStatusMessage_2eproto();
  return *default_instance_;
}

BitStatus_BitEntry_RepeatedDoubleType* BitStatus_BitEntry_RepeatedDoubleType::default_instance_ = NULL;

BitStatus_BitEntry_RepeatedDoubleType* BitStatus_BitEntry_RepeatedDoubleType::New() const {
  return new BitStatus_BitEntry_RepeatedDoubleType;
}

void BitStatus_BitEntry_RepeatedDoubleType::Clear() {
  value_double_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BitStatus_BitEntry_RepeatedDoubleType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double value_double = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_value_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 9, input, this->mutable_value_double())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_value_double())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(9)) goto parse_value_double;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BitStatus_BitEntry_RepeatedDoubleType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated double value_double = 1;
  for (int i = 0; i < this->value_double_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      1, this->value_double(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BitStatus_BitEntry_RepeatedDoubleType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated double value_double = 1;
  for (int i = 0; i < this->value_double_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(1, this->value_double(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BitStatus_BitEntry_RepeatedDoubleType::ByteSize() const {
  int total_size = 0;

  // repeated double value_double = 1;
  {
    int data_size = 0;
    data_size = 8 * this->value_double_size();
    total_size += 1 * this->value_double_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BitStatus_BitEntry_RepeatedDoubleType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BitStatus_BitEntry_RepeatedDoubleType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BitStatus_BitEntry_RepeatedDoubleType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BitStatus_BitEntry_RepeatedDoubleType::MergeFrom(const BitStatus_BitEntry_RepeatedDoubleType& from) {
  GOOGLE_CHECK_NE(&from, this);
  value_double_.MergeFrom(from.value_double_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BitStatus_BitEntry_RepeatedDoubleType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BitStatus_BitEntry_RepeatedDoubleType::CopyFrom(const BitStatus_BitEntry_RepeatedDoubleType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BitStatus_BitEntry_RepeatedDoubleType::IsInitialized() const {

  return true;
}

void BitStatus_BitEntry_RepeatedDoubleType::Swap(BitStatus_BitEntry_RepeatedDoubleType* other) {
  if (other != this) {
    value_double_.Swap(&other->value_double_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BitStatus_BitEntry_RepeatedDoubleType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BitStatus_BitEntry_RepeatedDoubleType_descriptor_;
  metadata.reflection = BitStatus_BitEntry_RepeatedDoubleType_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BitStatus_BitEntry::kIdFieldNumber;
const int BitStatus_BitEntry::kStatusFieldNumber;
const int BitStatus_BitEntry::kValueBoolFieldNumber;
const int BitStatus_BitEntry::kValueIntegerFieldNumber;
const int BitStatus_BitEntry::kValueDoubleFieldNumber;
const int BitStatus_BitEntry::kValueStringFieldNumber;
const int BitStatus_BitEntry::kValueDoubleRepeatedFieldNumber;
#endif  // !_MSC_VER

BitStatus_BitEntry::BitStatus_BitEntry()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BitStatus_BitEntry::InitAsDefaultInstance() {
  value_double_repeated_ = const_cast< ::com::srcinc::ngi::data::BitStatus_BitEntry_RepeatedDoubleType*>(&::com::srcinc::ngi::data::BitStatus_BitEntry_RepeatedDoubleType::default_instance());
}

BitStatus_BitEntry::BitStatus_BitEntry(const BitStatus_BitEntry& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BitStatus_BitEntry::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  status_ = 0;
  value_bool_ = false;
  value_integer_ = 0;
  value_double_ = 0;
  value_string_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  value_double_repeated_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BitStatus_BitEntry::~BitStatus_BitEntry() {
  SharedDtor();
}

void BitStatus_BitEntry::SharedDtor() {
  if (value_string_ != &::google::protobuf::internal::kEmptyString) {
    delete value_string_;
  }
  if (this != default_instance_) {
    delete value_double_repeated_;
  }
}

void BitStatus_BitEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BitStatus_BitEntry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BitStatus_BitEntry_descriptor_;
}

const BitStatus_BitEntry& BitStatus_BitEntry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BitStatusMessage_2eproto();
  return *default_instance_;
}

BitStatus_BitEntry* BitStatus_BitEntry::default_instance_ = NULL;

BitStatus_BitEntry* BitStatus_BitEntry::New() const {
  return new BitStatus_BitEntry;
}

void BitStatus_BitEntry::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    status_ = 0;
    value_bool_ = false;
    value_integer_ = 0;
    value_double_ = 0;
    if (has_value_string()) {
      if (value_string_ != &::google::protobuf::internal::kEmptyString) {
        value_string_->clear();
      }
    }
    if (has_value_double_repeated()) {
      if (value_double_repeated_ != NULL) value_double_repeated_->::com::srcinc::ngi::data::BitStatus_BitEntry_RepeatedDoubleType::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BitStatus_BitEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // optional .com.srcinc.ngi.data.Status status = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::srcinc::ngi::data::Status_IsValid(value)) {
            set_status(static_cast< ::com::srcinc::ngi::data::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_value_bool;
        break;
      }

      // optional bool value_bool = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value_bool:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_bool_)));
          set_has_value_bool();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_value_integer;
        break;
      }

      // optional int32 value_integer = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value_integer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_integer_)));
          set_has_value_integer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(41)) goto parse_value_double;
        break;
      }

      // optional double value_double = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_value_double:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_double_)));
          set_has_value_double();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_value_string;
        break;
      }

      // optional string value_string = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_value_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->value_string().data(), this->value_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_value_double_repeated;
        break;
      }

      // optional .com.srcinc.ngi.data.BitStatus.BitEntry.RepeatedDoubleType value_double_repeated = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_value_double_repeated:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value_double_repeated()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BitStatus_BitEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional .com.srcinc.ngi.data.Status status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  // optional bool value_bool = 3;
  if (has_value_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->value_bool(), output);
  }

  // optional int32 value_integer = 4;
  if (has_value_integer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->value_integer(), output);
  }

  // optional double value_double = 5;
  if (has_value_double()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->value_double(), output);
  }

  // optional string value_string = 6;
  if (has_value_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value_string().data(), this->value_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->value_string(), output);
  }

  // optional .com.srcinc.ngi.data.BitStatus.BitEntry.RepeatedDoubleType value_double_repeated = 7;
  if (has_value_double_repeated()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->value_double_repeated(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BitStatus_BitEntry::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional .com.srcinc.ngi.data.Status status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  // optional bool value_bool = 3;
  if (has_value_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->value_bool(), target);
  }

  // optional int32 value_integer = 4;
  if (has_value_integer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->value_integer(), target);
  }

  // optional double value_double = 5;
  if (has_value_double()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->value_double(), target);
  }

  // optional string value_string = 6;
  if (has_value_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value_string().data(), this->value_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->value_string(), target);
  }

  // optional .com.srcinc.ngi.data.BitStatus.BitEntry.RepeatedDoubleType value_double_repeated = 7;
  if (has_value_double_repeated()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->value_double_repeated(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BitStatus_BitEntry::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional .com.srcinc.ngi.data.Status status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional bool value_bool = 3;
    if (has_value_bool()) {
      total_size += 1 + 1;
    }

    // optional int32 value_integer = 4;
    if (has_value_integer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value_integer());
    }

    // optional double value_double = 5;
    if (has_value_double()) {
      total_size += 1 + 8;
    }

    // optional string value_string = 6;
    if (has_value_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value_string());
    }

    // optional .com.srcinc.ngi.data.BitStatus.BitEntry.RepeatedDoubleType value_double_repeated = 7;
    if (has_value_double_repeated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->value_double_repeated());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BitStatus_BitEntry::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BitStatus_BitEntry* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BitStatus_BitEntry*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BitStatus_BitEntry::MergeFrom(const BitStatus_BitEntry& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_value_bool()) {
      set_value_bool(from.value_bool());
    }
    if (from.has_value_integer()) {
      set_value_integer(from.value_integer());
    }
    if (from.has_value_double()) {
      set_value_double(from.value_double());
    }
    if (from.has_value_string()) {
      set_value_string(from.value_string());
    }
    if (from.has_value_double_repeated()) {
      mutable_value_double_repeated()->::com::srcinc::ngi::data::BitStatus_BitEntry_RepeatedDoubleType::MergeFrom(from.value_double_repeated());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BitStatus_BitEntry::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BitStatus_BitEntry::CopyFrom(const BitStatus_BitEntry& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BitStatus_BitEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BitStatus_BitEntry::Swap(BitStatus_BitEntry* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(status_, other->status_);
    std::swap(value_bool_, other->value_bool_);
    std::swap(value_integer_, other->value_integer_);
    std::swap(value_double_, other->value_double_);
    std::swap(value_string_, other->value_string_);
    std::swap(value_double_repeated_, other->value_double_repeated_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BitStatus_BitEntry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BitStatus_BitEntry_descriptor_;
  metadata.reflection = BitStatus_BitEntry_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int BitStatus::kBitValuesFieldNumber;
#endif  // !_MSC_VER

BitStatus::BitStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BitStatus::InitAsDefaultInstance() {
}

BitStatus::BitStatus(const BitStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BitStatus::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BitStatus::~BitStatus() {
  SharedDtor();
}

void BitStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BitStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BitStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BitStatus_descriptor_;
}

const BitStatus& BitStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BitStatusMessage_2eproto();
  return *default_instance_;
}

BitStatus* BitStatus::default_instance_ = NULL;

BitStatus* BitStatus::New() const {
  return new BitStatus;
}

void BitStatus::Clear() {
  bit_values_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BitStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .com.srcinc.ngi.data.BitStatus.BitEntry bit_values = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bit_values:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bit_values()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_bit_values;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BitStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .com.srcinc.ngi.data.BitStatus.BitEntry bit_values = 1;
  for (int i = 0; i < this->bit_values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bit_values(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BitStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .com.srcinc.ngi.data.BitStatus.BitEntry bit_values = 1;
  for (int i = 0; i < this->bit_values_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->bit_values(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BitStatus::ByteSize() const {
  int total_size = 0;

  // repeated .com.srcinc.ngi.data.BitStatus.BitEntry bit_values = 1;
  total_size += 1 * this->bit_values_size();
  for (int i = 0; i < this->bit_values_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bit_values(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BitStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BitStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BitStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BitStatus::MergeFrom(const BitStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  bit_values_.MergeFrom(from.bit_values_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BitStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BitStatus::CopyFrom(const BitStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BitStatus::IsInitialized() const {

  for (int i = 0; i < bit_values_size(); i++) {
    if (!this->bit_values(i).IsInitialized()) return false;
  }
  return true;
}

void BitStatus::Swap(BitStatus* other) {
  if (other != this) {
    bit_values_.Swap(&other->bit_values_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BitStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BitStatus_descriptor_;
  metadata.reflection = BitStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BitStatusTopic::kHeaderFieldNumber;
const int BitStatusTopic::kBitStatusFieldNumber;
#endif  // !_MSC_VER

BitStatusTopic::BitStatusTopic()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BitStatusTopic::InitAsDefaultInstance() {
  header_ = const_cast< ::service_infrastructure::Header*>(&::service_infrastructure::Header::default_instance());
  bit_status_ = const_cast< ::com::srcinc::ngi::data::BitStatus*>(&::com::srcinc::ngi::data::BitStatus::default_instance());
}

BitStatusTopic::BitStatusTopic(const BitStatusTopic& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BitStatusTopic::SharedCtor() {
  _cached_size_ = 0;
  header_ = NULL;
  bit_status_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BitStatusTopic::~BitStatusTopic() {
  SharedDtor();
}

void BitStatusTopic::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
    delete bit_status_;
  }
}

void BitStatusTopic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BitStatusTopic::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BitStatusTopic_descriptor_;
}

const BitStatusTopic& BitStatusTopic::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_BitStatusMessage_2eproto();
  return *default_instance_;
}

BitStatusTopic* BitStatusTopic::default_instance_ = NULL;

BitStatusTopic* BitStatusTopic::New() const {
  return new BitStatusTopic;
}

void BitStatusTopic::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_header()) {
      if (header_ != NULL) header_->::service_infrastructure::Header::Clear();
    }
    if (has_bit_status()) {
      if (bit_status_ != NULL) bit_status_->::com::srcinc::ngi::data::BitStatus::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BitStatusTopic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.srcinc.ngi.data.BitStatus bit_status = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bit_status()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(802)) goto parse_header;
        break;
      }

      // optional .service_infrastructure.Header header = 100;
      case 100: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_header:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BitStatusTopic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .com.srcinc.ngi.data.BitStatus bit_status = 1;
  if (has_bit_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bit_status(), output);
  }

  // optional .service_infrastructure.Header header = 100;
  if (has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100, this->header(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BitStatusTopic::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .com.srcinc.ngi.data.BitStatus bit_status = 1;
  if (has_bit_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->bit_status(), target);
  }

  // optional .service_infrastructure.Header header = 100;
  if (has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        100, this->header(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BitStatusTopic::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .service_infrastructure.Header header = 100;
    if (has_header()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->header());
    }

    // optional .com.srcinc.ngi.data.BitStatus bit_status = 1;
    if (has_bit_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bit_status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BitStatusTopic::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BitStatusTopic* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BitStatusTopic*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BitStatusTopic::MergeFrom(const BitStatusTopic& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_header()) {
      mutable_header()->::service_infrastructure::Header::MergeFrom(from.header());
    }
    if (from.has_bit_status()) {
      mutable_bit_status()->::com::srcinc::ngi::data::BitStatus::MergeFrom(from.bit_status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BitStatusTopic::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BitStatusTopic::CopyFrom(const BitStatusTopic& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BitStatusTopic::IsInitialized() const {

  if (has_bit_status()) {
    if (!this->bit_status().IsInitialized()) return false;
  }
  return true;
}

void BitStatusTopic::Swap(BitStatusTopic* other) {
  if (other != this) {
    std::swap(header_, other->header_);
    std::swap(bit_status_, other->bit_status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BitStatusTopic::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BitStatusTopic_descriptor_;
  metadata.reflection = BitStatusTopic_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace data
}  // namespace ngi
}  // namespace srcinc
}  // namespace com

// @@protoc_insertion_point(global_scope)
