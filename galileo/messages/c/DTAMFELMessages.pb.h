// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DTAMFELMessages.proto

#ifndef PROTOBUF_DTAMFELMessages_2eproto__INCLUDED
#define PROTOBUF_DTAMFELMessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "ThunderbirdMessages.pb.h"
#include "ServiceInfrastructureCommon.pb.h"
#include "ServiceInfrastructureExclusive.pb.h"
#include "BitMessages.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_DTAMFELMessages_2eproto();
void protobuf_AssignDesc_DTAMFELMessages_2eproto();
void protobuf_ShutdownFile_DTAMFELMessages_2eproto();

class RunMode;
class StandbyMode;
class ShutdownSystem;
class GetSystemStatus;
class GetTrackList;
class GetTrackReport;
class GetTrackPDWs;
class ACK;
class SystemStatus;
class SystemInfo;
class DtaResponseTopic;
class DtaBitReport;
class DtaBitResponse;
class DtaTrackReport;
class DtaSystemStatus;
class DtaSystemInfo;

enum DtaBitReport_ResultEnum {
  DtaBitReport_ResultEnum_NOERROR = 0,
  DtaBitReport_ResultEnum_UNKNOWN = 1
};
bool DtaBitReport_ResultEnum_IsValid(int value);
const DtaBitReport_ResultEnum DtaBitReport_ResultEnum_ResultEnum_MIN = DtaBitReport_ResultEnum_NOERROR;
const DtaBitReport_ResultEnum DtaBitReport_ResultEnum_ResultEnum_MAX = DtaBitReport_ResultEnum_UNKNOWN;
const int DtaBitReport_ResultEnum_ResultEnum_ARRAYSIZE = DtaBitReport_ResultEnum_ResultEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* DtaBitReport_ResultEnum_descriptor();
inline const ::std::string& DtaBitReport_ResultEnum_Name(DtaBitReport_ResultEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    DtaBitReport_ResultEnum_descriptor(), value);
}
inline bool DtaBitReport_ResultEnum_Parse(
    const ::std::string& name, DtaBitReport_ResultEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DtaBitReport_ResultEnum>(
    DtaBitReport_ResultEnum_descriptor(), name, value);
}
enum DtaBitReport_StateEnum {
  DtaBitReport_StateEnum_STANDBY = 0,
  DtaBitReport_StateEnum_RUN = 1,
  DtaBitReport_StateEnum_GOOD = 2
};
bool DtaBitReport_StateEnum_IsValid(int value);
const DtaBitReport_StateEnum DtaBitReport_StateEnum_StateEnum_MIN = DtaBitReport_StateEnum_STANDBY;
const DtaBitReport_StateEnum DtaBitReport_StateEnum_StateEnum_MAX = DtaBitReport_StateEnum_GOOD;
const int DtaBitReport_StateEnum_StateEnum_ARRAYSIZE = DtaBitReport_StateEnum_StateEnum_MAX + 1;

const ::google::protobuf::EnumDescriptor* DtaBitReport_StateEnum_descriptor();
inline const ::std::string& DtaBitReport_StateEnum_Name(DtaBitReport_StateEnum value) {
  return ::google::protobuf::internal::NameOfEnum(
    DtaBitReport_StateEnum_descriptor(), value);
}
inline bool DtaBitReport_StateEnum_Parse(
    const ::std::string& name, DtaBitReport_StateEnum* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DtaBitReport_StateEnum>(
    DtaBitReport_StateEnum_descriptor(), name, value);
}
// ===================================================================

class RunMode : public ::google::protobuf::Message {
 public:
  RunMode();
  virtual ~RunMode();

  RunMode(const RunMode& from);

  inline RunMode& operator=(const RunMode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunMode& default_instance();

  void Swap(RunMode* other);

  // implements Message ----------------------------------------------

  RunMode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RunMode& from);
  void MergeFrom(const RunMode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:RunMode)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_DTAMFELMessages_2eproto();
  friend void protobuf_AssignDesc_DTAMFELMessages_2eproto();
  friend void protobuf_ShutdownFile_DTAMFELMessages_2eproto();

  void InitAsDefaultInstance();
  static RunMode* default_instance_;
};
// -------------------------------------------------------------------

class StandbyMode : public ::google::protobuf::Message {
 public:
  StandbyMode();
  virtual ~StandbyMode();

  StandbyMode(const StandbyMode& from);

  inline StandbyMode& operator=(const StandbyMode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StandbyMode& default_instance();

  void Swap(StandbyMode* other);

  // implements Message ----------------------------------------------

  StandbyMode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StandbyMode& from);
  void MergeFrom(const StandbyMode& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:StandbyMode)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_DTAMFELMessages_2eproto();
  friend void protobuf_AssignDesc_DTAMFELMessages_2eproto();
  friend void protobuf_ShutdownFile_DTAMFELMessages_2eproto();

  void InitAsDefaultInstance();
  static StandbyMode* default_instance_;
};
// -------------------------------------------------------------------

class ShutdownSystem : public ::google::protobuf::Message {
 public:
  ShutdownSystem();
  virtual ~ShutdownSystem();

  ShutdownSystem(const ShutdownSystem& from);

  inline ShutdownSystem& operator=(const ShutdownSystem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShutdownSystem& default_instance();

  void Swap(ShutdownSystem* other);

  // implements Message ----------------------------------------------

  ShutdownSystem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShutdownSystem& from);
  void MergeFrom(const ShutdownSystem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ShutdownSystem)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_DTAMFELMessages_2eproto();
  friend void protobuf_AssignDesc_DTAMFELMessages_2eproto();
  friend void protobuf_ShutdownFile_DTAMFELMessages_2eproto();

  void InitAsDefaultInstance();
  static ShutdownSystem* default_instance_;
};
// -------------------------------------------------------------------

class GetSystemStatus : public ::google::protobuf::Message {
 public:
  GetSystemStatus();
  virtual ~GetSystemStatus();

  GetSystemStatus(const GetSystemStatus& from);

  inline GetSystemStatus& operator=(const GetSystemStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSystemStatus& default_instance();

  void Swap(GetSystemStatus* other);

  // implements Message ----------------------------------------------

  GetSystemStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetSystemStatus& from);
  void MergeFrom(const GetSystemStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GetSystemStatus)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_DTAMFELMessages_2eproto();
  friend void protobuf_AssignDesc_DTAMFELMessages_2eproto();
  friend void protobuf_ShutdownFile_DTAMFELMessages_2eproto();

  void InitAsDefaultInstance();
  static GetSystemStatus* default_instance_;
};
// -------------------------------------------------------------------

class GetTrackList : public ::google::protobuf::Message {
 public:
  GetTrackList();
  virtual ~GetTrackList();

  GetTrackList(const GetTrackList& from);

  inline GetTrackList& operator=(const GetTrackList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTrackList& default_instance();

  void Swap(GetTrackList* other);

  // implements Message ----------------------------------------------

  GetTrackList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTrackList& from);
  void MergeFrom(const GetTrackList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GetTrackList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_DTAMFELMessages_2eproto();
  friend void protobuf_AssignDesc_DTAMFELMessages_2eproto();
  friend void protobuf_ShutdownFile_DTAMFELMessages_2eproto();

  void InitAsDefaultInstance();
  static GetTrackList* default_instance_;
};
// -------------------------------------------------------------------

class GetTrackReport : public ::google::protobuf::Message {
 public:
  GetTrackReport();
  virtual ~GetTrackReport();

  GetTrackReport(const GetTrackReport& from);

  inline GetTrackReport& operator=(const GetTrackReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTrackReport& default_instance();

  void Swap(GetTrackReport* other);

  // implements Message ----------------------------------------------

  GetTrackReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTrackReport& from);
  void MergeFrom(const GetTrackReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GetTrackReport)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_DTAMFELMessages_2eproto();
  friend void protobuf_AssignDesc_DTAMFELMessages_2eproto();
  friend void protobuf_ShutdownFile_DTAMFELMessages_2eproto();

  void InitAsDefaultInstance();
  static GetTrackReport* default_instance_;
};
// -------------------------------------------------------------------

class GetTrackPDWs : public ::google::protobuf::Message {
 public:
  GetTrackPDWs();
  virtual ~GetTrackPDWs();

  GetTrackPDWs(const GetTrackPDWs& from);

  inline GetTrackPDWs& operator=(const GetTrackPDWs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTrackPDWs& default_instance();

  void Swap(GetTrackPDWs* other);

  // implements Message ----------------------------------------------

  GetTrackPDWs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTrackPDWs& from);
  void MergeFrom(const GetTrackPDWs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GetTrackPDWs)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_DTAMFELMessages_2eproto();
  friend void protobuf_AssignDesc_DTAMFELMessages_2eproto();
  friend void protobuf_ShutdownFile_DTAMFELMessages_2eproto();

  void InitAsDefaultInstance();
  static GetTrackPDWs* default_instance_;
};
// -------------------------------------------------------------------

class ACK : public ::google::protobuf::Message {
 public:
  ACK();
  virtual ~ACK();

  ACK(const ACK& from);

  inline ACK& operator=(const ACK& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ACK& default_instance();

  void Swap(ACK* other);

  // implements Message ----------------------------------------------

  ACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ACK& from);
  void MergeFrom(const ACK& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ACK)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_DTAMFELMessages_2eproto();
  friend void protobuf_AssignDesc_DTAMFELMessages_2eproto();
  friend void protobuf_ShutdownFile_DTAMFELMessages_2eproto();

  void InitAsDefaultInstance();
  static ACK* default_instance_;
};
// -------------------------------------------------------------------

class SystemStatus : public ::google::protobuf::Message {
 public:
  SystemStatus();
  virtual ~SystemStatus();

  SystemStatus(const SystemStatus& from);

  inline SystemStatus& operator=(const SystemStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemStatus& default_instance();

  void Swap(SystemStatus* other);

  // implements Message ----------------------------------------------

  SystemStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SystemStatus& from);
  void MergeFrom(const SystemStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SystemStatus)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_DTAMFELMessages_2eproto();
  friend void protobuf_AssignDesc_DTAMFELMessages_2eproto();
  friend void protobuf_ShutdownFile_DTAMFELMessages_2eproto();

  void InitAsDefaultInstance();
  static SystemStatus* default_instance_;
};
// -------------------------------------------------------------------

class SystemInfo : public ::google::protobuf::Message {
 public:
  SystemInfo();
  virtual ~SystemInfo();

  SystemInfo(const SystemInfo& from);

  inline SystemInfo& operator=(const SystemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemInfo& default_instance();

  void Swap(SystemInfo* other);

  // implements Message ----------------------------------------------

  SystemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SystemInfo& from);
  void MergeFrom(const SystemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:SystemInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_DTAMFELMessages_2eproto();
  friend void protobuf_AssignDesc_DTAMFELMessages_2eproto();
  friend void protobuf_ShutdownFile_DTAMFELMessages_2eproto();

  void InitAsDefaultInstance();
  static SystemInfo* default_instance_;
};
// -------------------------------------------------------------------

class DtaResponseTopic : public ::google::protobuf::Message {
 public:
  DtaResponseTopic();
  virtual ~DtaResponseTopic();

  DtaResponseTopic(const DtaResponseTopic& from);

  inline DtaResponseTopic& operator=(const DtaResponseTopic& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DtaResponseTopic& default_instance();

  void Swap(DtaResponseTopic* other);

  // implements Message ----------------------------------------------

  DtaResponseTopic* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DtaResponseTopic& from);
  void MergeFrom(const DtaResponseTopic& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .service_infrastructure.Header header = 100;
  inline bool has_header() const;
  inline void clear_header();
  static const int kHeaderFieldNumber = 100;
  inline const ::service_infrastructure::Header& header() const;
  inline ::service_infrastructure::Header* mutable_header();
  inline ::service_infrastructure::Header* release_header();
  inline void set_allocated_header(::service_infrastructure::Header* header);

  // optional .DtaBitResponse dta_bit_response = 1;
  inline bool has_dta_bit_response() const;
  inline void clear_dta_bit_response();
  static const int kDtaBitResponseFieldNumber = 1;
  inline const ::DtaBitResponse& dta_bit_response() const;
  inline ::DtaBitResponse* mutable_dta_bit_response();
  inline ::DtaBitResponse* release_dta_bit_response();
  inline void set_allocated_dta_bit_response(::DtaBitResponse* dta_bit_response);

  // optional .DtaTrackReport dta_track_report = 2;
  inline bool has_dta_track_report() const;
  inline void clear_dta_track_report();
  static const int kDtaTrackReportFieldNumber = 2;
  inline const ::DtaTrackReport& dta_track_report() const;
  inline ::DtaTrackReport* mutable_dta_track_report();
  inline ::DtaTrackReport* release_dta_track_report();
  inline void set_allocated_dta_track_report(::DtaTrackReport* dta_track_report);

  // optional .DtaSystemInfo dta_system_info = 3;
  inline bool has_dta_system_info() const;
  inline void clear_dta_system_info();
  static const int kDtaSystemInfoFieldNumber = 3;
  inline const ::DtaSystemInfo& dta_system_info() const;
  inline ::DtaSystemInfo* mutable_dta_system_info();
  inline ::DtaSystemInfo* release_dta_system_info();
  inline void set_allocated_dta_system_info(::DtaSystemInfo* dta_system_info);

  // optional .DtaSystemStatus dta_system_status = 4;
  inline bool has_dta_system_status() const;
  inline void clear_dta_system_status();
  static const int kDtaSystemStatusFieldNumber = 4;
  inline const ::DtaSystemStatus& dta_system_status() const;
  inline ::DtaSystemStatus* mutable_dta_system_status();
  inline ::DtaSystemStatus* release_dta_system_status();
  inline void set_allocated_dta_system_status(::DtaSystemStatus* dta_system_status);

  // @@protoc_insertion_point(class_scope:DtaResponseTopic)
 private:
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_dta_bit_response();
  inline void clear_has_dta_bit_response();
  inline void set_has_dta_track_report();
  inline void clear_has_dta_track_report();
  inline void set_has_dta_system_info();
  inline void clear_has_dta_system_info();
  inline void set_has_dta_system_status();
  inline void clear_has_dta_system_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::service_infrastructure::Header* header_;
  ::DtaBitResponse* dta_bit_response_;
  ::DtaTrackReport* dta_track_report_;
  ::DtaSystemInfo* dta_system_info_;
  ::DtaSystemStatus* dta_system_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_DTAMFELMessages_2eproto();
  friend void protobuf_AssignDesc_DTAMFELMessages_2eproto();
  friend void protobuf_ShutdownFile_DTAMFELMessages_2eproto();

  void InitAsDefaultInstance();
  static DtaResponseTopic* default_instance_;
};
// -------------------------------------------------------------------

class DtaBitReport : public ::google::protobuf::Message {
 public:
  DtaBitReport();
  virtual ~DtaBitReport();

  DtaBitReport(const DtaBitReport& from);

  inline DtaBitReport& operator=(const DtaBitReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DtaBitReport& default_instance();

  void Swap(DtaBitReport* other);

  // implements Message ----------------------------------------------

  DtaBitReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DtaBitReport& from);
  void MergeFrom(const DtaBitReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef DtaBitReport_ResultEnum ResultEnum;
  static const ResultEnum NOERROR = DtaBitReport_ResultEnum_NOERROR;
  static const ResultEnum UNKNOWN = DtaBitReport_ResultEnum_UNKNOWN;
  static inline bool ResultEnum_IsValid(int value) {
    return DtaBitReport_ResultEnum_IsValid(value);
  }
  static const ResultEnum ResultEnum_MIN =
    DtaBitReport_ResultEnum_ResultEnum_MIN;
  static const ResultEnum ResultEnum_MAX =
    DtaBitReport_ResultEnum_ResultEnum_MAX;
  static const int ResultEnum_ARRAYSIZE =
    DtaBitReport_ResultEnum_ResultEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResultEnum_descriptor() {
    return DtaBitReport_ResultEnum_descriptor();
  }
  static inline const ::std::string& ResultEnum_Name(ResultEnum value) {
    return DtaBitReport_ResultEnum_Name(value);
  }
  static inline bool ResultEnum_Parse(const ::std::string& name,
      ResultEnum* value) {
    return DtaBitReport_ResultEnum_Parse(name, value);
  }

  typedef DtaBitReport_StateEnum StateEnum;
  static const StateEnum STANDBY = DtaBitReport_StateEnum_STANDBY;
  static const StateEnum RUN = DtaBitReport_StateEnum_RUN;
  static const StateEnum GOOD = DtaBitReport_StateEnum_GOOD;
  static inline bool StateEnum_IsValid(int value) {
    return DtaBitReport_StateEnum_IsValid(value);
  }
  static const StateEnum StateEnum_MIN =
    DtaBitReport_StateEnum_StateEnum_MIN;
  static const StateEnum StateEnum_MAX =
    DtaBitReport_StateEnum_StateEnum_MAX;
  static const int StateEnum_ARRAYSIZE =
    DtaBitReport_StateEnum_StateEnum_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  StateEnum_descriptor() {
    return DtaBitReport_StateEnum_descriptor();
  }
  static inline const ::std::string& StateEnum_Name(StateEnum value) {
    return DtaBitReport_StateEnum_Name(value);
  }
  static inline bool StateEnum_Parse(const ::std::string& name,
      StateEnum* value) {
    return DtaBitReport_StateEnum_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string test_name = 1;
  inline bool has_test_name() const;
  inline void clear_test_name();
  static const int kTestNameFieldNumber = 1;
  inline const ::std::string& test_name() const;
  inline void set_test_name(const ::std::string& value);
  inline void set_test_name(const char* value);
  inline void set_test_name(const char* value, size_t size);
  inline ::std::string* mutable_test_name();
  inline ::std::string* release_test_name();
  inline void set_allocated_test_name(::std::string* test_name);

  // optional .DtaBitReport.ResultEnum result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::DtaBitReport_ResultEnum result() const;
  inline void set_result(::DtaBitReport_ResultEnum value);

  // optional .DtaBitReport.StateEnum state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::DtaBitReport_StateEnum state() const;
  inline void set_state(::DtaBitReport_StateEnum value);

  // optional string notes = 4 [default = "None"];
  inline bool has_notes() const;
  inline void clear_notes();
  static const int kNotesFieldNumber = 4;
  inline const ::std::string& notes() const;
  inline void set_notes(const ::std::string& value);
  inline void set_notes(const char* value);
  inline void set_notes(const char* value, size_t size);
  inline ::std::string* mutable_notes();
  inline ::std::string* release_notes();
  inline void set_allocated_notes(::std::string* notes);

  // @@protoc_insertion_point(class_scope:DtaBitReport)
 private:
  inline void set_has_test_name();
  inline void clear_has_test_name();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_notes();
  inline void clear_has_notes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* test_name_;
  int result_;
  int state_;
  ::std::string* notes_;
  static ::std::string* _default_notes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_DTAMFELMessages_2eproto();
  friend void protobuf_AssignDesc_DTAMFELMessages_2eproto();
  friend void protobuf_ShutdownFile_DTAMFELMessages_2eproto();

  void InitAsDefaultInstance();
  static DtaBitReport* default_instance_;
};
// -------------------------------------------------------------------

class DtaBitResponse : public ::google::protobuf::Message {
 public:
  DtaBitResponse();
  virtual ~DtaBitResponse();

  DtaBitResponse(const DtaBitResponse& from);

  inline DtaBitResponse& operator=(const DtaBitResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DtaBitResponse& default_instance();

  void Swap(DtaBitResponse* other);

  // implements Message ----------------------------------------------

  DtaBitResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DtaBitResponse& from);
  void MergeFrom(const DtaBitResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DtaBitReport dta_bit_reports = 1;
  inline int dta_bit_reports_size() const;
  inline void clear_dta_bit_reports();
  static const int kDtaBitReportsFieldNumber = 1;
  inline const ::DtaBitReport& dta_bit_reports(int index) const;
  inline ::DtaBitReport* mutable_dta_bit_reports(int index);
  inline ::DtaBitReport* add_dta_bit_reports();
  inline const ::google::protobuf::RepeatedPtrField< ::DtaBitReport >&
      dta_bit_reports() const;
  inline ::google::protobuf::RepeatedPtrField< ::DtaBitReport >*
      mutable_dta_bit_reports();

  // @@protoc_insertion_point(class_scope:DtaBitResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DtaBitReport > dta_bit_reports_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DTAMFELMessages_2eproto();
  friend void protobuf_AssignDesc_DTAMFELMessages_2eproto();
  friend void protobuf_ShutdownFile_DTAMFELMessages_2eproto();

  void InitAsDefaultInstance();
  static DtaBitResponse* default_instance_;
};
// -------------------------------------------------------------------

class DtaTrackReport : public ::google::protobuf::Message {
 public:
  DtaTrackReport();
  virtual ~DtaTrackReport();

  DtaTrackReport(const DtaTrackReport& from);

  inline DtaTrackReport& operator=(const DtaTrackReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DtaTrackReport& default_instance();

  void Swap(DtaTrackReport* other);

  // implements Message ----------------------------------------------

  DtaTrackReport* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DtaTrackReport& from);
  void MergeFrom(const DtaTrackReport& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 empty = 1 [default = 0];
  inline bool has_empty() const;
  inline void clear_empty();
  static const int kEmptyFieldNumber = 1;
  inline ::google::protobuf::int32 empty() const;
  inline void set_empty(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DtaTrackReport)
 private:
  inline void set_has_empty();
  inline void clear_has_empty();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 empty_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DTAMFELMessages_2eproto();
  friend void protobuf_AssignDesc_DTAMFELMessages_2eproto();
  friend void protobuf_ShutdownFile_DTAMFELMessages_2eproto();

  void InitAsDefaultInstance();
  static DtaTrackReport* default_instance_;
};
// -------------------------------------------------------------------

class DtaSystemStatus : public ::google::protobuf::Message {
 public:
  DtaSystemStatus();
  virtual ~DtaSystemStatus();

  DtaSystemStatus(const DtaSystemStatus& from);

  inline DtaSystemStatus& operator=(const DtaSystemStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DtaSystemStatus& default_instance();

  void Swap(DtaSystemStatus* other);

  // implements Message ----------------------------------------------

  DtaSystemStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DtaSystemStatus& from);
  void MergeFrom(const DtaSystemStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 empty = 1 [default = 0];
  inline bool has_empty() const;
  inline void clear_empty();
  static const int kEmptyFieldNumber = 1;
  inline ::google::protobuf::int32 empty() const;
  inline void set_empty(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DtaSystemStatus)
 private:
  inline void set_has_empty();
  inline void clear_has_empty();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 empty_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DTAMFELMessages_2eproto();
  friend void protobuf_AssignDesc_DTAMFELMessages_2eproto();
  friend void protobuf_ShutdownFile_DTAMFELMessages_2eproto();

  void InitAsDefaultInstance();
  static DtaSystemStatus* default_instance_;
};
// -------------------------------------------------------------------

class DtaSystemInfo : public ::google::protobuf::Message {
 public:
  DtaSystemInfo();
  virtual ~DtaSystemInfo();

  DtaSystemInfo(const DtaSystemInfo& from);

  inline DtaSystemInfo& operator=(const DtaSystemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DtaSystemInfo& default_instance();

  void Swap(DtaSystemInfo* other);

  // implements Message ----------------------------------------------

  DtaSystemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DtaSystemInfo& from);
  void MergeFrom(const DtaSystemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 empty = 1 [default = 0];
  inline bool has_empty() const;
  inline void clear_empty();
  static const int kEmptyFieldNumber = 1;
  inline ::google::protobuf::int32 empty() const;
  inline void set_empty(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:DtaSystemInfo)
 private:
  inline void set_has_empty();
  inline void clear_has_empty();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 empty_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_DTAMFELMessages_2eproto();
  friend void protobuf_AssignDesc_DTAMFELMessages_2eproto();
  friend void protobuf_ShutdownFile_DTAMFELMessages_2eproto();

  void InitAsDefaultInstance();
  static DtaSystemInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// RunMode

// -------------------------------------------------------------------

// StandbyMode

// -------------------------------------------------------------------

// ShutdownSystem

// -------------------------------------------------------------------

// GetSystemStatus

// -------------------------------------------------------------------

// GetTrackList

// -------------------------------------------------------------------

// GetTrackReport

// -------------------------------------------------------------------

// GetTrackPDWs

// -------------------------------------------------------------------

// ACK

// -------------------------------------------------------------------

// SystemStatus

// -------------------------------------------------------------------

// SystemInfo

// -------------------------------------------------------------------

// DtaResponseTopic

// optional .service_infrastructure.Header header = 100;
inline bool DtaResponseTopic::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DtaResponseTopic::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DtaResponseTopic::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DtaResponseTopic::clear_header() {
  if (header_ != NULL) header_->::service_infrastructure::Header::Clear();
  clear_has_header();
}
inline const ::service_infrastructure::Header& DtaResponseTopic::header() const {
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::service_infrastructure::Header* DtaResponseTopic::mutable_header() {
  set_has_header();
  if (header_ == NULL) header_ = new ::service_infrastructure::Header;
  return header_;
}
inline ::service_infrastructure::Header* DtaResponseTopic::release_header() {
  clear_has_header();
  ::service_infrastructure::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DtaResponseTopic::set_allocated_header(::service_infrastructure::Header* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
}

// optional .DtaBitResponse dta_bit_response = 1;
inline bool DtaResponseTopic::has_dta_bit_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DtaResponseTopic::set_has_dta_bit_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DtaResponseTopic::clear_has_dta_bit_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DtaResponseTopic::clear_dta_bit_response() {
  if (dta_bit_response_ != NULL) dta_bit_response_->::DtaBitResponse::Clear();
  clear_has_dta_bit_response();
}
inline const ::DtaBitResponse& DtaResponseTopic::dta_bit_response() const {
  return dta_bit_response_ != NULL ? *dta_bit_response_ : *default_instance_->dta_bit_response_;
}
inline ::DtaBitResponse* DtaResponseTopic::mutable_dta_bit_response() {
  set_has_dta_bit_response();
  if (dta_bit_response_ == NULL) dta_bit_response_ = new ::DtaBitResponse;
  return dta_bit_response_;
}
inline ::DtaBitResponse* DtaResponseTopic::release_dta_bit_response() {
  clear_has_dta_bit_response();
  ::DtaBitResponse* temp = dta_bit_response_;
  dta_bit_response_ = NULL;
  return temp;
}
inline void DtaResponseTopic::set_allocated_dta_bit_response(::DtaBitResponse* dta_bit_response) {
  delete dta_bit_response_;
  dta_bit_response_ = dta_bit_response;
  if (dta_bit_response) {
    set_has_dta_bit_response();
  } else {
    clear_has_dta_bit_response();
  }
}

// optional .DtaTrackReport dta_track_report = 2;
inline bool DtaResponseTopic::has_dta_track_report() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DtaResponseTopic::set_has_dta_track_report() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DtaResponseTopic::clear_has_dta_track_report() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DtaResponseTopic::clear_dta_track_report() {
  if (dta_track_report_ != NULL) dta_track_report_->::DtaTrackReport::Clear();
  clear_has_dta_track_report();
}
inline const ::DtaTrackReport& DtaResponseTopic::dta_track_report() const {
  return dta_track_report_ != NULL ? *dta_track_report_ : *default_instance_->dta_track_report_;
}
inline ::DtaTrackReport* DtaResponseTopic::mutable_dta_track_report() {
  set_has_dta_track_report();
  if (dta_track_report_ == NULL) dta_track_report_ = new ::DtaTrackReport;
  return dta_track_report_;
}
inline ::DtaTrackReport* DtaResponseTopic::release_dta_track_report() {
  clear_has_dta_track_report();
  ::DtaTrackReport* temp = dta_track_report_;
  dta_track_report_ = NULL;
  return temp;
}
inline void DtaResponseTopic::set_allocated_dta_track_report(::DtaTrackReport* dta_track_report) {
  delete dta_track_report_;
  dta_track_report_ = dta_track_report;
  if (dta_track_report) {
    set_has_dta_track_report();
  } else {
    clear_has_dta_track_report();
  }
}

// optional .DtaSystemInfo dta_system_info = 3;
inline bool DtaResponseTopic::has_dta_system_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DtaResponseTopic::set_has_dta_system_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DtaResponseTopic::clear_has_dta_system_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DtaResponseTopic::clear_dta_system_info() {
  if (dta_system_info_ != NULL) dta_system_info_->::DtaSystemInfo::Clear();
  clear_has_dta_system_info();
}
inline const ::DtaSystemInfo& DtaResponseTopic::dta_system_info() const {
  return dta_system_info_ != NULL ? *dta_system_info_ : *default_instance_->dta_system_info_;
}
inline ::DtaSystemInfo* DtaResponseTopic::mutable_dta_system_info() {
  set_has_dta_system_info();
  if (dta_system_info_ == NULL) dta_system_info_ = new ::DtaSystemInfo;
  return dta_system_info_;
}
inline ::DtaSystemInfo* DtaResponseTopic::release_dta_system_info() {
  clear_has_dta_system_info();
  ::DtaSystemInfo* temp = dta_system_info_;
  dta_system_info_ = NULL;
  return temp;
}
inline void DtaResponseTopic::set_allocated_dta_system_info(::DtaSystemInfo* dta_system_info) {
  delete dta_system_info_;
  dta_system_info_ = dta_system_info;
  if (dta_system_info) {
    set_has_dta_system_info();
  } else {
    clear_has_dta_system_info();
  }
}

// optional .DtaSystemStatus dta_system_status = 4;
inline bool DtaResponseTopic::has_dta_system_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DtaResponseTopic::set_has_dta_system_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DtaResponseTopic::clear_has_dta_system_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DtaResponseTopic::clear_dta_system_status() {
  if (dta_system_status_ != NULL) dta_system_status_->::DtaSystemStatus::Clear();
  clear_has_dta_system_status();
}
inline const ::DtaSystemStatus& DtaResponseTopic::dta_system_status() const {
  return dta_system_status_ != NULL ? *dta_system_status_ : *default_instance_->dta_system_status_;
}
inline ::DtaSystemStatus* DtaResponseTopic::mutable_dta_system_status() {
  set_has_dta_system_status();
  if (dta_system_status_ == NULL) dta_system_status_ = new ::DtaSystemStatus;
  return dta_system_status_;
}
inline ::DtaSystemStatus* DtaResponseTopic::release_dta_system_status() {
  clear_has_dta_system_status();
  ::DtaSystemStatus* temp = dta_system_status_;
  dta_system_status_ = NULL;
  return temp;
}
inline void DtaResponseTopic::set_allocated_dta_system_status(::DtaSystemStatus* dta_system_status) {
  delete dta_system_status_;
  dta_system_status_ = dta_system_status;
  if (dta_system_status) {
    set_has_dta_system_status();
  } else {
    clear_has_dta_system_status();
  }
}

// -------------------------------------------------------------------

// DtaBitReport

// optional string test_name = 1;
inline bool DtaBitReport::has_test_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DtaBitReport::set_has_test_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DtaBitReport::clear_has_test_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DtaBitReport::clear_test_name() {
  if (test_name_ != &::google::protobuf::internal::kEmptyString) {
    test_name_->clear();
  }
  clear_has_test_name();
}
inline const ::std::string& DtaBitReport::test_name() const {
  return *test_name_;
}
inline void DtaBitReport::set_test_name(const ::std::string& value) {
  set_has_test_name();
  if (test_name_ == &::google::protobuf::internal::kEmptyString) {
    test_name_ = new ::std::string;
  }
  test_name_->assign(value);
}
inline void DtaBitReport::set_test_name(const char* value) {
  set_has_test_name();
  if (test_name_ == &::google::protobuf::internal::kEmptyString) {
    test_name_ = new ::std::string;
  }
  test_name_->assign(value);
}
inline void DtaBitReport::set_test_name(const char* value, size_t size) {
  set_has_test_name();
  if (test_name_ == &::google::protobuf::internal::kEmptyString) {
    test_name_ = new ::std::string;
  }
  test_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DtaBitReport::mutable_test_name() {
  set_has_test_name();
  if (test_name_ == &::google::protobuf::internal::kEmptyString) {
    test_name_ = new ::std::string;
  }
  return test_name_;
}
inline ::std::string* DtaBitReport::release_test_name() {
  clear_has_test_name();
  if (test_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = test_name_;
    test_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DtaBitReport::set_allocated_test_name(::std::string* test_name) {
  if (test_name_ != &::google::protobuf::internal::kEmptyString) {
    delete test_name_;
  }
  if (test_name) {
    set_has_test_name();
    test_name_ = test_name;
  } else {
    clear_has_test_name();
    test_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .DtaBitReport.ResultEnum result = 2;
inline bool DtaBitReport::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DtaBitReport::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DtaBitReport::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DtaBitReport::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::DtaBitReport_ResultEnum DtaBitReport::result() const {
  return static_cast< ::DtaBitReport_ResultEnum >(result_);
}
inline void DtaBitReport::set_result(::DtaBitReport_ResultEnum value) {
  assert(::DtaBitReport_ResultEnum_IsValid(value));
  set_has_result();
  result_ = value;
}

// optional .DtaBitReport.StateEnum state = 3;
inline bool DtaBitReport::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DtaBitReport::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DtaBitReport::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DtaBitReport::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::DtaBitReport_StateEnum DtaBitReport::state() const {
  return static_cast< ::DtaBitReport_StateEnum >(state_);
}
inline void DtaBitReport::set_state(::DtaBitReport_StateEnum value) {
  assert(::DtaBitReport_StateEnum_IsValid(value));
  set_has_state();
  state_ = value;
}

// optional string notes = 4 [default = "None"];
inline bool DtaBitReport::has_notes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DtaBitReport::set_has_notes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DtaBitReport::clear_has_notes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DtaBitReport::clear_notes() {
  if (notes_ != _default_notes_) {
    notes_->assign(*_default_notes_);
  }
  clear_has_notes();
}
inline const ::std::string& DtaBitReport::notes() const {
  return *notes_;
}
inline void DtaBitReport::set_notes(const ::std::string& value) {
  set_has_notes();
  if (notes_ == _default_notes_) {
    notes_ = new ::std::string;
  }
  notes_->assign(value);
}
inline void DtaBitReport::set_notes(const char* value) {
  set_has_notes();
  if (notes_ == _default_notes_) {
    notes_ = new ::std::string;
  }
  notes_->assign(value);
}
inline void DtaBitReport::set_notes(const char* value, size_t size) {
  set_has_notes();
  if (notes_ == _default_notes_) {
    notes_ = new ::std::string;
  }
  notes_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DtaBitReport::mutable_notes() {
  set_has_notes();
  if (notes_ == _default_notes_) {
    notes_ = new ::std::string(*_default_notes_);
  }
  return notes_;
}
inline ::std::string* DtaBitReport::release_notes() {
  clear_has_notes();
  if (notes_ == _default_notes_) {
    return NULL;
  } else {
    ::std::string* temp = notes_;
    notes_ = const_cast< ::std::string*>(_default_notes_);
    return temp;
  }
}
inline void DtaBitReport::set_allocated_notes(::std::string* notes) {
  if (notes_ != _default_notes_) {
    delete notes_;
  }
  if (notes) {
    set_has_notes();
    notes_ = notes;
  } else {
    clear_has_notes();
    notes_ = const_cast< ::std::string*>(_default_notes_);
  }
}

// -------------------------------------------------------------------

// DtaBitResponse

// repeated .DtaBitReport dta_bit_reports = 1;
inline int DtaBitResponse::dta_bit_reports_size() const {
  return dta_bit_reports_.size();
}
inline void DtaBitResponse::clear_dta_bit_reports() {
  dta_bit_reports_.Clear();
}
inline const ::DtaBitReport& DtaBitResponse::dta_bit_reports(int index) const {
  return dta_bit_reports_.Get(index);
}
inline ::DtaBitReport* DtaBitResponse::mutable_dta_bit_reports(int index) {
  return dta_bit_reports_.Mutable(index);
}
inline ::DtaBitReport* DtaBitResponse::add_dta_bit_reports() {
  return dta_bit_reports_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DtaBitReport >&
DtaBitResponse::dta_bit_reports() const {
  return dta_bit_reports_;
}
inline ::google::protobuf::RepeatedPtrField< ::DtaBitReport >*
DtaBitResponse::mutable_dta_bit_reports() {
  return &dta_bit_reports_;
}

// -------------------------------------------------------------------

// DtaTrackReport

// optional int32 empty = 1 [default = 0];
inline bool DtaTrackReport::has_empty() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DtaTrackReport::set_has_empty() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DtaTrackReport::clear_has_empty() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DtaTrackReport::clear_empty() {
  empty_ = 0;
  clear_has_empty();
}
inline ::google::protobuf::int32 DtaTrackReport::empty() const {
  return empty_;
}
inline void DtaTrackReport::set_empty(::google::protobuf::int32 value) {
  set_has_empty();
  empty_ = value;
}

// -------------------------------------------------------------------

// DtaSystemStatus

// optional int32 empty = 1 [default = 0];
inline bool DtaSystemStatus::has_empty() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DtaSystemStatus::set_has_empty() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DtaSystemStatus::clear_has_empty() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DtaSystemStatus::clear_empty() {
  empty_ = 0;
  clear_has_empty();
}
inline ::google::protobuf::int32 DtaSystemStatus::empty() const {
  return empty_;
}
inline void DtaSystemStatus::set_empty(::google::protobuf::int32 value) {
  set_has_empty();
  empty_ = value;
}

// -------------------------------------------------------------------

// DtaSystemInfo

// optional int32 empty = 1 [default = 0];
inline bool DtaSystemInfo::has_empty() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DtaSystemInfo::set_has_empty() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DtaSystemInfo::clear_has_empty() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DtaSystemInfo::clear_empty() {
  empty_ = 0;
  clear_has_empty();
}
inline ::google::protobuf::int32 DtaSystemInfo::empty() const {
  return empty_;
}
inline void DtaSystemInfo::set_empty(::google::protobuf::int32 value) {
  set_has_empty();
  empty_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DtaBitReport_ResultEnum>() {
  return ::DtaBitReport_ResultEnum_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::DtaBitReport_StateEnum>() {
  return ::DtaBitReport_StateEnum_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DTAMFELMessages_2eproto__INCLUDED
