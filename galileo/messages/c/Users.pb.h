// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Users.proto

#ifndef PROTOBUF_Users_2eproto__INCLUDED
#define PROTOBUF_Users_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace srcinc {
namespace ngi {
namespace common {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Users_2eproto();
void protobuf_AssignDesc_Users_2eproto();
void protobuf_ShutdownFile_Users_2eproto();


enum UserLevel {
  USER_LEVEL_0 = 0,
  USER_LEVEL_1 = 1,
  USER_LEVEL_2 = 2,
  USER_LEVEL_3 = 3,
  USER_LEVEL_4 = 4
};
bool UserLevel_IsValid(int value);
const UserLevel UserLevel_MIN = USER_LEVEL_0;
const UserLevel UserLevel_MAX = USER_LEVEL_4;
const int UserLevel_ARRAYSIZE = UserLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserLevel_descriptor();
inline const ::std::string& UserLevel_Name(UserLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserLevel_descriptor(), value);
}
inline bool UserLevel_Parse(
    const ::std::string& name, UserLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserLevel>(
    UserLevel_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace ngi
}  // namespace srcinc
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::com::srcinc::ngi::common::UserLevel>() {
  return ::com::srcinc::ngi::common::UserLevel_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Users_2eproto__INCLUDED
