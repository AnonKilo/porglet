syntax = "proto2";

package fv.tb.protos.PMProtos;

// When compiling specify the --proto_path option to the root of the project

option java_package = "fv.pm.protos";
option java_outer_classname = "PMProtos";

////
// PRO MACHINA MESSAGES
////

////
// This message contains a frame of ProMachina data. It also has some header
// information in it for follow-on message reads
//
// msgName: PMFRAME, used to identify the message
// toAddress: The address of the recipient
// fromAddress: The address of the sender
// countValue: The value of the current frame counter
// frameFormatID: The type of frame being sent as a string
// trackID: The ID of the track as a string
// trackType: The type of track as a string
// posX: X-Position in Cartesian Coordinates
// posY: Y-Position in Cartesian Coordinates
// posZ: Z-Position in Cartesian Coordinates
// velX: change in X-Position in Cartesian Coordinates
// velY: change in Y-Position in Cartesian Coordinates
// velZ: change in Z-Position in Cartesian Coordinates
// wholeSeconds: the J1950 Whole Seconds of the start of the frame
// fractionalSeconds: the J1950 fractional second
// frame: the byte-packed frame of binary data
// uuid: the string containing the SoI Event's uuid
message PMFrame {
    optional string msgName = 1 [default = "PMFRAME"];
    optional int32 toAddress = 2;
    optional int32 fromAddress = 3;
    optional int32 countValue = 4;
    optional string frameFormatID = 5;
    optional string trackID = 6;
    optional string trackType = 7;
    optional double posX = 8;
    optional double posY = 9;
    optional double posZ = 10;
    optional double velX = 11;
    optional double velY = 12;
    optional double velZ = 13;
    optional double wholeSeconds = 14;
    optional double fractionalSeconds = 15;
    optional int32 frameLength = 16 [default = 0];
    optional bytes frame = 17;
    optional string uuid = 18;
}
