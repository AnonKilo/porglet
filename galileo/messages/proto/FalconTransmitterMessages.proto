syntax = "proto2";

// This is the package where the java source code will be placed. 
option java_package = "fv.protos.kepsvisor";

////
// Messages used in the falcon package to control and communicated with
// RF transmitter resources.
//
// In every message, always add the first parameter as:
//    optional string msgName = 1 [default = "MSG_NAME"];
//
// Package used in c and java; python ignores
package falcon_transmitter_msg;

////
// This message is sent to the transmitter to set a standard property or request 
// its value.  If an app is not a controller, SET requests will fail.  If the
// app is not at least a user, GET requests will fail.
//
// msgName: TRANSMITTER_REQUEST, used to identify the message
// resID: Unique identifier of the resource to control
// appID: Integer identifier of the requesting application
// action: Action to perform (SET or GET property)
// property: Type of property to get or set
// value: New value of the property, ignored if GET
message TransmitterRequest
{
  enum Action
  {
    SET = 0;
    GET = 1;
  }
  
  enum Property
  {
    FREQUENCY = 0;
    BANDWIDTH = 1;
    GAIN = 2;
    REF = 3;
  };
  
  optional string   msgName  = 1 [default = "TRANSMITTER_REQUEST"];
  optional string   resID    = 2;
  optional int32    appID    = 3;
  optional Action   action   = 4;
  optional Property property = 5;
  optional float    value    = 6;
}

////
// This message is sent to the app from the transmitter in response to a request.
//
// msgName: TRANSMITTER_RESPONSE, used to identify the message
// resID: Unique identifier of the resource to control
// appID: Integer identifier of the requesting application
// status: Whether the command was successful, SUCCESS or FAIL.  If a property
//         cannot be retrieved, then set to DISCONNECTED.  If permissions fail
//         then set to PERMISSIONS.
// property: Type of property to get or set
// value: Value of the property, to be ignored if failed GET action
message TransmitterResponse
{
  enum Status
  {
    SUCCESS = 0;
    FAIL = 1;
    DISCONNECTED = 2;
    PERMISSIONS = 3;
  }
  
  optional string   msgName  = 1 [default = "TRANSMITTER_RESPONSE"];
  optional string   resID    = 2;
  optional int32    appID    = 3;
  optional Status   status   = 4;
  optional TransmitterRequest.Property property = 5;
  optional float    value    = 6;
}

////
// This message is sent to the transmitter to get or set the URXID
//
// msgName: UNIQUE_TXID_REQUEST, used to identify the message
// resID: Unique identifier of the resource to control
// action: Action to perform (SET or GET property)
// value: New value of the property, ignored if GET
message UniqueTXIDRequest
{
  enum Action
  {
    SET = 0;
    GET = 1;
  }
  
  optional string   msgName  = 1 [default = "UNIQUE_TXID_REQUEST"];
  optional string   resID    = 2;
  optional Action   action   = 3 [default = GET];
  optional string   value    = 4;
}

////
// This message is sent to the app from the transmitter in response to a request.
//
// msgName: UNIQUE_RXID_RESPONSE, used to identify the message
// resID: Unique identifier of the resource to control
// value: Value of the property
message UniqueTXIDResponse
{
  optional string   msgName  = 1 [default = "UNIQUE_TXID_RESPONSE"];
  optional string   resID    = 2;
  optional string   value    = 3;
}

////
// This message is sent to the transmitter to request information
//
// msgName: TRANSMITTER_INFO_REQUEST, used to identify the message
message TransmitterInfoRequest
{
  optional string   msgName    = 1 [default = "TRANSMITTER_INFO_REQUEST"];
}

////
// This message is sent to the health app from the transmitter with information
//
// msgName: TRANSMIITER_INFO_RESPONSE, used to identify the message
// resID: Unique identifier of the resource
message TransmitterInfoResponse
{
  optional string   msgName  = 1 [default = "TRANSMITTER_INFO_RESPONSE"];
  optional string   resID    = 2;
  optional string   ntp      = 3;
  optional string   ref      = 4;
  optional string   pps      = 5;
  optional string   comms    = 6;
  optional string   ping     = 7;
  optional string   raid     = 8;
}

