// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SigFrameMessages.proto

package fv.sf.protos;

public final class SFProtos {
  private SFProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SIGFrameOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "SIGFRAME"];
    /**
     * <code>optional string msgName = 1 [default = "SIGFRAME"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "SIGFRAME"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "SIGFRAME"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional string signal_id = 2;
    /**
     * <code>optional string signal_id = 2;</code>
     */
    boolean hasSignalId();
    /**
     * <code>optional string signal_id = 2;</code>
     */
    java.lang.String getSignalId();
    /**
     * <code>optional string signal_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getSignalIdBytes();

    // optional double wholeSeconds = 3;
    /**
     * <code>optional double wholeSeconds = 3;</code>
     */
    boolean hasWholeSeconds();
    /**
     * <code>optional double wholeSeconds = 3;</code>
     */
    double getWholeSeconds();

    // optional double fractionalSeconds = 4;
    /**
     * <code>optional double fractionalSeconds = 4;</code>
     */
    boolean hasFractionalSeconds();
    /**
     * <code>optional double fractionalSeconds = 4;</code>
     */
    double getFractionalSeconds();

    // optional double duration = 5;
    /**
     * <code>optional double duration = 5;</code>
     */
    boolean hasDuration();
    /**
     * <code>optional double duration = 5;</code>
     */
    double getDuration();

    // optional double center_frequency = 6;
    /**
     * <code>optional double center_frequency = 6;</code>
     */
    boolean hasCenterFrequency();
    /**
     * <code>optional double center_frequency = 6;</code>
     */
    double getCenterFrequency();

    // optional double center_freq_offset = 7;
    /**
     * <code>optional double center_freq_offset = 7;</code>
     */
    boolean hasCenterFreqOffset();
    /**
     * <code>optional double center_freq_offset = 7;</code>
     */
    double getCenterFreqOffset();

    // optional double sample_rate = 8;
    /**
     * <code>optional double sample_rate = 8;</code>
     */
    boolean hasSampleRate();
    /**
     * <code>optional double sample_rate = 8;</code>
     */
    double getSampleRate();

    // optional double bandwidth = 9;
    /**
     * <code>optional double bandwidth = 9;</code>
     */
    boolean hasBandwidth();
    /**
     * <code>optional double bandwidth = 9;</code>
     */
    double getBandwidth();

    // optional double power = 10;
    /**
     * <code>optional double power = 10;</code>
     */
    boolean hasPower();
    /**
     * <code>optional double power = 10;</code>
     */
    double getPower();

    // optional double ber = 11;
    /**
     * <code>optional double ber = 11;</code>
     */
    boolean hasBer();
    /**
     * <code>optional double ber = 11;</code>
     */
    double getBer();

    // optional int32 frame_length = 12 [default = 0];
    /**
     * <code>optional int32 frame_length = 12 [default = 0];</code>
     */
    boolean hasFrameLength();
    /**
     * <code>optional int32 frame_length = 12 [default = 0];</code>
     */
    int getFrameLength();

    // optional bytes frame = 13;
    /**
     * <code>optional bytes frame = 13;</code>
     */
    boolean hasFrame();
    /**
     * <code>optional bytes frame = 13;</code>
     */
    com.google.protobuf.ByteString getFrame();

    // optional int32 tail_id = 14;
    /**
     * <code>optional int32 tail_id = 14;</code>
     */
    boolean hasTailId();
    /**
     * <code>optional int32 tail_id = 14;</code>
     */
    int getTailId();

    // optional string sensorName = 15 [default = ""];
    /**
     * <code>optional string sensorName = 15 [default = ""];</code>
     */
    boolean hasSensorName();
    /**
     * <code>optional string sensorName = 15 [default = ""];</code>
     */
    java.lang.String getSensorName();
    /**
     * <code>optional string sensorName = 15 [default = ""];</code>
     */
    com.google.protobuf.ByteString
        getSensorNameBytes();

    // optional string uuid = 16;
    /**
     * <code>optional string uuid = 16;</code>
     */
    boolean hasUuid();
    /**
     * <code>optional string uuid = 16;</code>
     */
    java.lang.String getUuid();
    /**
     * <code>optional string uuid = 16;</code>
     */
    com.google.protobuf.ByteString
        getUuidBytes();
  }
  /**
   * Protobuf type {@code fv.sf.protos.SFProtos.SIGFrame}
   *
   * <pre>
   *&#47;/
   * This message contains a frame of processed data. It also has some header
   * information in it for follow-on message reads
   *
   * msgName: SIGFRAME, used to identify the message
   * signal_id: The signal ID of the frame
   * wholeSeconds: the J1950 Whole Seconds of the start of the frame
   * fractionalSeconds: the J1950 fractional second
   * duration: The duration in seconds of the frame
   * center_frequency: The center freq of the frame (in Hz)
   * center_freq_offset: An offset from the above center_freq (in Hz)
   * sample_rate: The sample rate prior to bit synch
   * bandwidth: The bandwidth of the signal prior to demod
   * power: The power of the frame prior to demod
   * ber: The Bit Error Rate of the frame if available
   * frame_length: The length of the frame in bytes
   * frame: the byte-packed frame of binary data
   * tail_id: if available, a pseudo-id for the SoI
   * sensor_name: the name of the sensor that demodulated the data
   * uuid: the string containing the SoI Event's uuid
   * </pre>
   */
  public static final class SIGFrame extends
      com.google.protobuf.GeneratedMessage
      implements SIGFrameOrBuilder {
    // Use SIGFrame.newBuilder() to construct.
    private SIGFrame(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SIGFrame(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SIGFrame defaultInstance;
    public static SIGFrame getDefaultInstance() {
      return defaultInstance;
    }

    public SIGFrame getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SIGFrame(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              signalId_ = input.readBytes();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              wholeSeconds_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              fractionalSeconds_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              duration_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              centerFrequency_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              centerFreqOffset_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              sampleRate_ = input.readDouble();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              bandwidth_ = input.readDouble();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              power_ = input.readDouble();
              break;
            }
            case 89: {
              bitField0_ |= 0x00000400;
              ber_ = input.readDouble();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              frameLength_ = input.readInt32();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              frame_ = input.readBytes();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              tailId_ = input.readInt32();
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              sensorName_ = input.readBytes();
              break;
            }
            case 130: {
              bitField0_ |= 0x00008000;
              uuid_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.sf.protos.SFProtos.internal_static_fv_sf_protos_SFProtos_SIGFrame_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.sf.protos.SFProtos.internal_static_fv_sf_protos_SFProtos_SIGFrame_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.sf.protos.SFProtos.SIGFrame.class, fv.sf.protos.SFProtos.SIGFrame.Builder.class);
    }

    public static com.google.protobuf.Parser<SIGFrame> PARSER =
        new com.google.protobuf.AbstractParser<SIGFrame>() {
      public SIGFrame parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SIGFrame(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SIGFrame> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "SIGFRAME"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "SIGFRAME"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "SIGFRAME"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "SIGFRAME"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string signal_id = 2;
    public static final int SIGNAL_ID_FIELD_NUMBER = 2;
    private java.lang.Object signalId_;
    /**
     * <code>optional string signal_id = 2;</code>
     */
    public boolean hasSignalId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string signal_id = 2;</code>
     */
    public java.lang.String getSignalId() {
      java.lang.Object ref = signalId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          signalId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string signal_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSignalIdBytes() {
      java.lang.Object ref = signalId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        signalId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional double wholeSeconds = 3;
    public static final int WHOLESECONDS_FIELD_NUMBER = 3;
    private double wholeSeconds_;
    /**
     * <code>optional double wholeSeconds = 3;</code>
     */
    public boolean hasWholeSeconds() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional double wholeSeconds = 3;</code>
     */
    public double getWholeSeconds() {
      return wholeSeconds_;
    }

    // optional double fractionalSeconds = 4;
    public static final int FRACTIONALSECONDS_FIELD_NUMBER = 4;
    private double fractionalSeconds_;
    /**
     * <code>optional double fractionalSeconds = 4;</code>
     */
    public boolean hasFractionalSeconds() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional double fractionalSeconds = 4;</code>
     */
    public double getFractionalSeconds() {
      return fractionalSeconds_;
    }

    // optional double duration = 5;
    public static final int DURATION_FIELD_NUMBER = 5;
    private double duration_;
    /**
     * <code>optional double duration = 5;</code>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional double duration = 5;</code>
     */
    public double getDuration() {
      return duration_;
    }

    // optional double center_frequency = 6;
    public static final int CENTER_FREQUENCY_FIELD_NUMBER = 6;
    private double centerFrequency_;
    /**
     * <code>optional double center_frequency = 6;</code>
     */
    public boolean hasCenterFrequency() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional double center_frequency = 6;</code>
     */
    public double getCenterFrequency() {
      return centerFrequency_;
    }

    // optional double center_freq_offset = 7;
    public static final int CENTER_FREQ_OFFSET_FIELD_NUMBER = 7;
    private double centerFreqOffset_;
    /**
     * <code>optional double center_freq_offset = 7;</code>
     */
    public boolean hasCenterFreqOffset() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional double center_freq_offset = 7;</code>
     */
    public double getCenterFreqOffset() {
      return centerFreqOffset_;
    }

    // optional double sample_rate = 8;
    public static final int SAMPLE_RATE_FIELD_NUMBER = 8;
    private double sampleRate_;
    /**
     * <code>optional double sample_rate = 8;</code>
     */
    public boolean hasSampleRate() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional double sample_rate = 8;</code>
     */
    public double getSampleRate() {
      return sampleRate_;
    }

    // optional double bandwidth = 9;
    public static final int BANDWIDTH_FIELD_NUMBER = 9;
    private double bandwidth_;
    /**
     * <code>optional double bandwidth = 9;</code>
     */
    public boolean hasBandwidth() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional double bandwidth = 9;</code>
     */
    public double getBandwidth() {
      return bandwidth_;
    }

    // optional double power = 10;
    public static final int POWER_FIELD_NUMBER = 10;
    private double power_;
    /**
     * <code>optional double power = 10;</code>
     */
    public boolean hasPower() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional double power = 10;</code>
     */
    public double getPower() {
      return power_;
    }

    // optional double ber = 11;
    public static final int BER_FIELD_NUMBER = 11;
    private double ber_;
    /**
     * <code>optional double ber = 11;</code>
     */
    public boolean hasBer() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional double ber = 11;</code>
     */
    public double getBer() {
      return ber_;
    }

    // optional int32 frame_length = 12 [default = 0];
    public static final int FRAME_LENGTH_FIELD_NUMBER = 12;
    private int frameLength_;
    /**
     * <code>optional int32 frame_length = 12 [default = 0];</code>
     */
    public boolean hasFrameLength() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 frame_length = 12 [default = 0];</code>
     */
    public int getFrameLength() {
      return frameLength_;
    }

    // optional bytes frame = 13;
    public static final int FRAME_FIELD_NUMBER = 13;
    private com.google.protobuf.ByteString frame_;
    /**
     * <code>optional bytes frame = 13;</code>
     */
    public boolean hasFrame() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional bytes frame = 13;</code>
     */
    public com.google.protobuf.ByteString getFrame() {
      return frame_;
    }

    // optional int32 tail_id = 14;
    public static final int TAIL_ID_FIELD_NUMBER = 14;
    private int tailId_;
    /**
     * <code>optional int32 tail_id = 14;</code>
     */
    public boolean hasTailId() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 tail_id = 14;</code>
     */
    public int getTailId() {
      return tailId_;
    }

    // optional string sensorName = 15 [default = ""];
    public static final int SENSORNAME_FIELD_NUMBER = 15;
    private java.lang.Object sensorName_;
    /**
     * <code>optional string sensorName = 15 [default = ""];</code>
     */
    public boolean hasSensorName() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string sensorName = 15 [default = ""];</code>
     */
    public java.lang.String getSensorName() {
      java.lang.Object ref = sensorName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sensorName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sensorName = 15 [default = ""];</code>
     */
    public com.google.protobuf.ByteString
        getSensorNameBytes() {
      java.lang.Object ref = sensorName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sensorName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string uuid = 16;
    public static final int UUID_FIELD_NUMBER = 16;
    private java.lang.Object uuid_;
    /**
     * <code>optional string uuid = 16;</code>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional string uuid = 16;</code>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uuid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uuid = 16;</code>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      msgName_ = "SIGFRAME";
      signalId_ = "";
      wholeSeconds_ = 0D;
      fractionalSeconds_ = 0D;
      duration_ = 0D;
      centerFrequency_ = 0D;
      centerFreqOffset_ = 0D;
      sampleRate_ = 0D;
      bandwidth_ = 0D;
      power_ = 0D;
      ber_ = 0D;
      frameLength_ = 0;
      frame_ = com.google.protobuf.ByteString.EMPTY;
      tailId_ = 0;
      sensorName_ = "";
      uuid_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getSignalIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, wholeSeconds_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, fractionalSeconds_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, duration_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, centerFrequency_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, centerFreqOffset_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, sampleRate_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeDouble(9, bandwidth_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeDouble(10, power_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeDouble(11, ber_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, frameLength_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, frame_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, tailId_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, getSensorNameBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBytes(16, getUuidBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSignalIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, wholeSeconds_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, fractionalSeconds_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, duration_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, centerFrequency_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, centerFreqOffset_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, sampleRate_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, bandwidth_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, power_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, ber_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, frameLength_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, frame_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, tailId_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getSensorNameBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(16, getUuidBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.sf.protos.SFProtos.SIGFrame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.sf.protos.SFProtos.SIGFrame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.sf.protos.SFProtos.SIGFrame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.sf.protos.SFProtos.SIGFrame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.sf.protos.SFProtos.SIGFrame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.sf.protos.SFProtos.SIGFrame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.sf.protos.SFProtos.SIGFrame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.sf.protos.SFProtos.SIGFrame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.sf.protos.SFProtos.SIGFrame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.sf.protos.SFProtos.SIGFrame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.sf.protos.SFProtos.SIGFrame prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fv.sf.protos.SFProtos.SIGFrame}
     *
     * <pre>
     *&#47;/
     * This message contains a frame of processed data. It also has some header
     * information in it for follow-on message reads
     *
     * msgName: SIGFRAME, used to identify the message
     * signal_id: The signal ID of the frame
     * wholeSeconds: the J1950 Whole Seconds of the start of the frame
     * fractionalSeconds: the J1950 fractional second
     * duration: The duration in seconds of the frame
     * center_frequency: The center freq of the frame (in Hz)
     * center_freq_offset: An offset from the above center_freq (in Hz)
     * sample_rate: The sample rate prior to bit synch
     * bandwidth: The bandwidth of the signal prior to demod
     * power: The power of the frame prior to demod
     * ber: The Bit Error Rate of the frame if available
     * frame_length: The length of the frame in bytes
     * frame: the byte-packed frame of binary data
     * tail_id: if available, a pseudo-id for the SoI
     * sensor_name: the name of the sensor that demodulated the data
     * uuid: the string containing the SoI Event's uuid
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.sf.protos.SFProtos.SIGFrameOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.sf.protos.SFProtos.internal_static_fv_sf_protos_SFProtos_SIGFrame_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.sf.protos.SFProtos.internal_static_fv_sf_protos_SFProtos_SIGFrame_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.sf.protos.SFProtos.SIGFrame.class, fv.sf.protos.SFProtos.SIGFrame.Builder.class);
      }

      // Construct using fv.sf.protos.SFProtos.SIGFrame.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "SIGFRAME";
        bitField0_ = (bitField0_ & ~0x00000001);
        signalId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        wholeSeconds_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        fractionalSeconds_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        duration_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        centerFrequency_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        centerFreqOffset_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        sampleRate_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        bandwidth_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        power_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000200);
        ber_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        frameLength_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        frame_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00001000);
        tailId_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        sensorName_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        uuid_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.sf.protos.SFProtos.internal_static_fv_sf_protos_SFProtos_SIGFrame_descriptor;
      }

      public fv.sf.protos.SFProtos.SIGFrame getDefaultInstanceForType() {
        return fv.sf.protos.SFProtos.SIGFrame.getDefaultInstance();
      }

      public fv.sf.protos.SFProtos.SIGFrame build() {
        fv.sf.protos.SFProtos.SIGFrame result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.sf.protos.SFProtos.SIGFrame buildPartial() {
        fv.sf.protos.SFProtos.SIGFrame result = new fv.sf.protos.SFProtos.SIGFrame(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.signalId_ = signalId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.wholeSeconds_ = wholeSeconds_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fractionalSeconds_ = fractionalSeconds_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.duration_ = duration_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.centerFrequency_ = centerFrequency_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.centerFreqOffset_ = centerFreqOffset_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.sampleRate_ = sampleRate_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.bandwidth_ = bandwidth_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.power_ = power_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.ber_ = ber_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.frameLength_ = frameLength_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.frame_ = frame_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.tailId_ = tailId_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.sensorName_ = sensorName_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.uuid_ = uuid_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.sf.protos.SFProtos.SIGFrame) {
          return mergeFrom((fv.sf.protos.SFProtos.SIGFrame)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.sf.protos.SFProtos.SIGFrame other) {
        if (other == fv.sf.protos.SFProtos.SIGFrame.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasSignalId()) {
          bitField0_ |= 0x00000002;
          signalId_ = other.signalId_;
          onChanged();
        }
        if (other.hasWholeSeconds()) {
          setWholeSeconds(other.getWholeSeconds());
        }
        if (other.hasFractionalSeconds()) {
          setFractionalSeconds(other.getFractionalSeconds());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        if (other.hasCenterFrequency()) {
          setCenterFrequency(other.getCenterFrequency());
        }
        if (other.hasCenterFreqOffset()) {
          setCenterFreqOffset(other.getCenterFreqOffset());
        }
        if (other.hasSampleRate()) {
          setSampleRate(other.getSampleRate());
        }
        if (other.hasBandwidth()) {
          setBandwidth(other.getBandwidth());
        }
        if (other.hasPower()) {
          setPower(other.getPower());
        }
        if (other.hasBer()) {
          setBer(other.getBer());
        }
        if (other.hasFrameLength()) {
          setFrameLength(other.getFrameLength());
        }
        if (other.hasFrame()) {
          setFrame(other.getFrame());
        }
        if (other.hasTailId()) {
          setTailId(other.getTailId());
        }
        if (other.hasSensorName()) {
          bitField0_ |= 0x00004000;
          sensorName_ = other.sensorName_;
          onChanged();
        }
        if (other.hasUuid()) {
          bitField0_ |= 0x00008000;
          uuid_ = other.uuid_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.sf.protos.SFProtos.SIGFrame parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.sf.protos.SFProtos.SIGFrame) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "SIGFRAME"];
      private java.lang.Object msgName_ = "SIGFRAME";
      /**
       * <code>optional string msgName = 1 [default = "SIGFRAME"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "SIGFRAME"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "SIGFRAME"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "SIGFRAME"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "SIGFRAME"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "SIGFRAME"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional string signal_id = 2;
      private java.lang.Object signalId_ = "";
      /**
       * <code>optional string signal_id = 2;</code>
       */
      public boolean hasSignalId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string signal_id = 2;</code>
       */
      public java.lang.String getSignalId() {
        java.lang.Object ref = signalId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          signalId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string signal_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSignalIdBytes() {
        java.lang.Object ref = signalId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          signalId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string signal_id = 2;</code>
       */
      public Builder setSignalId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        signalId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string signal_id = 2;</code>
       */
      public Builder clearSignalId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        signalId_ = getDefaultInstance().getSignalId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string signal_id = 2;</code>
       */
      public Builder setSignalIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        signalId_ = value;
        onChanged();
        return this;
      }

      // optional double wholeSeconds = 3;
      private double wholeSeconds_ ;
      /**
       * <code>optional double wholeSeconds = 3;</code>
       */
      public boolean hasWholeSeconds() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double wholeSeconds = 3;</code>
       */
      public double getWholeSeconds() {
        return wholeSeconds_;
      }
      /**
       * <code>optional double wholeSeconds = 3;</code>
       */
      public Builder setWholeSeconds(double value) {
        bitField0_ |= 0x00000004;
        wholeSeconds_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double wholeSeconds = 3;</code>
       */
      public Builder clearWholeSeconds() {
        bitField0_ = (bitField0_ & ~0x00000004);
        wholeSeconds_ = 0D;
        onChanged();
        return this;
      }

      // optional double fractionalSeconds = 4;
      private double fractionalSeconds_ ;
      /**
       * <code>optional double fractionalSeconds = 4;</code>
       */
      public boolean hasFractionalSeconds() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional double fractionalSeconds = 4;</code>
       */
      public double getFractionalSeconds() {
        return fractionalSeconds_;
      }
      /**
       * <code>optional double fractionalSeconds = 4;</code>
       */
      public Builder setFractionalSeconds(double value) {
        bitField0_ |= 0x00000008;
        fractionalSeconds_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double fractionalSeconds = 4;</code>
       */
      public Builder clearFractionalSeconds() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fractionalSeconds_ = 0D;
        onChanged();
        return this;
      }

      // optional double duration = 5;
      private double duration_ ;
      /**
       * <code>optional double duration = 5;</code>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional double duration = 5;</code>
       */
      public double getDuration() {
        return duration_;
      }
      /**
       * <code>optional double duration = 5;</code>
       */
      public Builder setDuration(double value) {
        bitField0_ |= 0x00000010;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double duration = 5;</code>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000010);
        duration_ = 0D;
        onChanged();
        return this;
      }

      // optional double center_frequency = 6;
      private double centerFrequency_ ;
      /**
       * <code>optional double center_frequency = 6;</code>
       */
      public boolean hasCenterFrequency() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional double center_frequency = 6;</code>
       */
      public double getCenterFrequency() {
        return centerFrequency_;
      }
      /**
       * <code>optional double center_frequency = 6;</code>
       */
      public Builder setCenterFrequency(double value) {
        bitField0_ |= 0x00000020;
        centerFrequency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double center_frequency = 6;</code>
       */
      public Builder clearCenterFrequency() {
        bitField0_ = (bitField0_ & ~0x00000020);
        centerFrequency_ = 0D;
        onChanged();
        return this;
      }

      // optional double center_freq_offset = 7;
      private double centerFreqOffset_ ;
      /**
       * <code>optional double center_freq_offset = 7;</code>
       */
      public boolean hasCenterFreqOffset() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional double center_freq_offset = 7;</code>
       */
      public double getCenterFreqOffset() {
        return centerFreqOffset_;
      }
      /**
       * <code>optional double center_freq_offset = 7;</code>
       */
      public Builder setCenterFreqOffset(double value) {
        bitField0_ |= 0x00000040;
        centerFreqOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double center_freq_offset = 7;</code>
       */
      public Builder clearCenterFreqOffset() {
        bitField0_ = (bitField0_ & ~0x00000040);
        centerFreqOffset_ = 0D;
        onChanged();
        return this;
      }

      // optional double sample_rate = 8;
      private double sampleRate_ ;
      /**
       * <code>optional double sample_rate = 8;</code>
       */
      public boolean hasSampleRate() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional double sample_rate = 8;</code>
       */
      public double getSampleRate() {
        return sampleRate_;
      }
      /**
       * <code>optional double sample_rate = 8;</code>
       */
      public Builder setSampleRate(double value) {
        bitField0_ |= 0x00000080;
        sampleRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double sample_rate = 8;</code>
       */
      public Builder clearSampleRate() {
        bitField0_ = (bitField0_ & ~0x00000080);
        sampleRate_ = 0D;
        onChanged();
        return this;
      }

      // optional double bandwidth = 9;
      private double bandwidth_ ;
      /**
       * <code>optional double bandwidth = 9;</code>
       */
      public boolean hasBandwidth() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional double bandwidth = 9;</code>
       */
      public double getBandwidth() {
        return bandwidth_;
      }
      /**
       * <code>optional double bandwidth = 9;</code>
       */
      public Builder setBandwidth(double value) {
        bitField0_ |= 0x00000100;
        bandwidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double bandwidth = 9;</code>
       */
      public Builder clearBandwidth() {
        bitField0_ = (bitField0_ & ~0x00000100);
        bandwidth_ = 0D;
        onChanged();
        return this;
      }

      // optional double power = 10;
      private double power_ ;
      /**
       * <code>optional double power = 10;</code>
       */
      public boolean hasPower() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional double power = 10;</code>
       */
      public double getPower() {
        return power_;
      }
      /**
       * <code>optional double power = 10;</code>
       */
      public Builder setPower(double value) {
        bitField0_ |= 0x00000200;
        power_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double power = 10;</code>
       */
      public Builder clearPower() {
        bitField0_ = (bitField0_ & ~0x00000200);
        power_ = 0D;
        onChanged();
        return this;
      }

      // optional double ber = 11;
      private double ber_ ;
      /**
       * <code>optional double ber = 11;</code>
       */
      public boolean hasBer() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional double ber = 11;</code>
       */
      public double getBer() {
        return ber_;
      }
      /**
       * <code>optional double ber = 11;</code>
       */
      public Builder setBer(double value) {
        bitField0_ |= 0x00000400;
        ber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double ber = 11;</code>
       */
      public Builder clearBer() {
        bitField0_ = (bitField0_ & ~0x00000400);
        ber_ = 0D;
        onChanged();
        return this;
      }

      // optional int32 frame_length = 12 [default = 0];
      private int frameLength_ ;
      /**
       * <code>optional int32 frame_length = 12 [default = 0];</code>
       */
      public boolean hasFrameLength() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 frame_length = 12 [default = 0];</code>
       */
      public int getFrameLength() {
        return frameLength_;
      }
      /**
       * <code>optional int32 frame_length = 12 [default = 0];</code>
       */
      public Builder setFrameLength(int value) {
        bitField0_ |= 0x00000800;
        frameLength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 frame_length = 12 [default = 0];</code>
       */
      public Builder clearFrameLength() {
        bitField0_ = (bitField0_ & ~0x00000800);
        frameLength_ = 0;
        onChanged();
        return this;
      }

      // optional bytes frame = 13;
      private com.google.protobuf.ByteString frame_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes frame = 13;</code>
       */
      public boolean hasFrame() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional bytes frame = 13;</code>
       */
      public com.google.protobuf.ByteString getFrame() {
        return frame_;
      }
      /**
       * <code>optional bytes frame = 13;</code>
       */
      public Builder setFrame(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        frame_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes frame = 13;</code>
       */
      public Builder clearFrame() {
        bitField0_ = (bitField0_ & ~0x00001000);
        frame_ = getDefaultInstance().getFrame();
        onChanged();
        return this;
      }

      // optional int32 tail_id = 14;
      private int tailId_ ;
      /**
       * <code>optional int32 tail_id = 14;</code>
       */
      public boolean hasTailId() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 tail_id = 14;</code>
       */
      public int getTailId() {
        return tailId_;
      }
      /**
       * <code>optional int32 tail_id = 14;</code>
       */
      public Builder setTailId(int value) {
        bitField0_ |= 0x00002000;
        tailId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tail_id = 14;</code>
       */
      public Builder clearTailId() {
        bitField0_ = (bitField0_ & ~0x00002000);
        tailId_ = 0;
        onChanged();
        return this;
      }

      // optional string sensorName = 15 [default = ""];
      private java.lang.Object sensorName_ = "";
      /**
       * <code>optional string sensorName = 15 [default = ""];</code>
       */
      public boolean hasSensorName() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional string sensorName = 15 [default = ""];</code>
       */
      public java.lang.String getSensorName() {
        java.lang.Object ref = sensorName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          sensorName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sensorName = 15 [default = ""];</code>
       */
      public com.google.protobuf.ByteString
          getSensorNameBytes() {
        java.lang.Object ref = sensorName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sensorName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sensorName = 15 [default = ""];</code>
       */
      public Builder setSensorName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        sensorName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sensorName = 15 [default = ""];</code>
       */
      public Builder clearSensorName() {
        bitField0_ = (bitField0_ & ~0x00004000);
        sensorName_ = getDefaultInstance().getSensorName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sensorName = 15 [default = ""];</code>
       */
      public Builder setSensorNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        sensorName_ = value;
        onChanged();
        return this;
      }

      // optional string uuid = 16;
      private java.lang.Object uuid_ = "";
      /**
       * <code>optional string uuid = 16;</code>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional string uuid = 16;</code>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uuid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uuid = 16;</code>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uuid = 16;</code>
       */
      public Builder setUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uuid = 16;</code>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00008000);
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uuid = 16;</code>
       */
      public Builder setUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        uuid_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fv.sf.protos.SFProtos.SIGFrame)
    }

    static {
      defaultInstance = new SIGFrame(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fv.sf.protos.SFProtos.SIGFrame)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_fv_sf_protos_SFProtos_SIGFrame_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fv_sf_protos_SFProtos_SIGFrame_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026SigFrameMessages.proto\022\025fv.sf.protos.S" +
      "FProtos\"\322\002\n\010SIGFrame\022\031\n\007msgName\030\001 \001(\t:\010S" +
      "IGFRAME\022\021\n\tsignal_id\030\002 \001(\t\022\024\n\014wholeSecon" +
      "ds\030\003 \001(\001\022\031\n\021fractionalSeconds\030\004 \001(\001\022\020\n\010d" +
      "uration\030\005 \001(\001\022\030\n\020center_frequency\030\006 \001(\001\022" +
      "\032\n\022center_freq_offset\030\007 \001(\001\022\023\n\013sample_ra" +
      "te\030\010 \001(\001\022\021\n\tbandwidth\030\t \001(\001\022\r\n\005power\030\n \001" +
      "(\001\022\013\n\003ber\030\013 \001(\001\022\027\n\014frame_length\030\014 \001(\005:\0010" +
      "\022\r\n\005frame\030\r \001(\014\022\017\n\007tail_id\030\016 \001(\005\022\024\n\nsens" +
      "orName\030\017 \001(\t:\000\022\014\n\004uuid\030\020 \001(\tB\030\n\014fv.sf.pr",
      "otosB\010SFProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_fv_sf_protos_SFProtos_SIGFrame_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_fv_sf_protos_SFProtos_SIGFrame_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_fv_sf_protos_SFProtos_SIGFrame_descriptor,
              new java.lang.String[] { "MsgName", "SignalId", "WholeSeconds", "FractionalSeconds", "Duration", "CenterFrequency", "CenterFreqOffset", "SampleRate", "Bandwidth", "Power", "Ber", "FrameLength", "Frame", "TailId", "SensorName", "Uuid", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
