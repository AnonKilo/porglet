// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SpectrumMessages.proto

package fv.spectrums.protos;

public final class SpectrumProtos {
  private SpectrumProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface SpectrumTopicOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .service_infrastructure.Header header = 100;
    /**
     * <code>optional .service_infrastructure.Header header = 100;</code>
     */
    boolean hasHeader();
    /**
     * <code>optional .service_infrastructure.Header header = 100;</code>
     */
    fv.protos.kepsvisor.ServiceInfrastructureCommon.Header getHeader();
    /**
     * <code>optional .service_infrastructure.Header header = 100;</code>
     */
    fv.protos.kepsvisor.ServiceInfrastructureCommon.HeaderOrBuilder getHeaderOrBuilder();

    // optional .fv.spectrums.protos.SpectrumsProtos.Spectrum spectrum = 1;
    /**
     * <code>optional .fv.spectrums.protos.SpectrumsProtos.Spectrum spectrum = 1;</code>
     */
    boolean hasSpectrum();
    /**
     * <code>optional .fv.spectrums.protos.SpectrumsProtos.Spectrum spectrum = 1;</code>
     */
    fv.spectrums.protos.SpectrumProtos.Spectrum getSpectrum();
    /**
     * <code>optional .fv.spectrums.protos.SpectrumsProtos.Spectrum spectrum = 1;</code>
     */
    fv.spectrums.protos.SpectrumProtos.SpectrumOrBuilder getSpectrumOrBuilder();
  }
  /**
   * Protobuf type {@code fv.spectrums.protos.SpectrumsProtos.SpectrumTopic}
   *
   * <pre>
   * Topic envelope for spectrum messages
   * </pre>
   */
  public static final class SpectrumTopic extends
      com.google.protobuf.GeneratedMessage
      implements SpectrumTopicOrBuilder {
    // Use SpectrumTopic.newBuilder() to construct.
    private SpectrumTopic(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SpectrumTopic(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SpectrumTopic defaultInstance;
    public static SpectrumTopic getDefaultInstance() {
      return defaultInstance;
    }

    public SpectrumTopic getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SpectrumTopic(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              fv.spectrums.protos.SpectrumProtos.Spectrum.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = spectrum_.toBuilder();
              }
              spectrum_ = input.readMessage(fv.spectrums.protos.SpectrumProtos.Spectrum.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(spectrum_);
                spectrum_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 802: {
              fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.spectrums.protos.SpectrumProtos.internal_static_fv_spectrums_protos_SpectrumsProtos_SpectrumTopic_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.spectrums.protos.SpectrumProtos.internal_static_fv_spectrums_protos_SpectrumsProtos_SpectrumTopic_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.spectrums.protos.SpectrumProtos.SpectrumTopic.class, fv.spectrums.protos.SpectrumProtos.SpectrumTopic.Builder.class);
    }

    public static com.google.protobuf.Parser<SpectrumTopic> PARSER =
        new com.google.protobuf.AbstractParser<SpectrumTopic>() {
      public SpectrumTopic parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SpectrumTopic(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SpectrumTopic> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .service_infrastructure.Header header = 100;
    public static final int HEADER_FIELD_NUMBER = 100;
    private fv.protos.kepsvisor.ServiceInfrastructureCommon.Header header_;
    /**
     * <code>optional .service_infrastructure.Header header = 100;</code>
     */
    public boolean hasHeader() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .service_infrastructure.Header header = 100;</code>
     */
    public fv.protos.kepsvisor.ServiceInfrastructureCommon.Header getHeader() {
      return header_;
    }
    /**
     * <code>optional .service_infrastructure.Header header = 100;</code>
     */
    public fv.protos.kepsvisor.ServiceInfrastructureCommon.HeaderOrBuilder getHeaderOrBuilder() {
      return header_;
    }

    // optional .fv.spectrums.protos.SpectrumsProtos.Spectrum spectrum = 1;
    public static final int SPECTRUM_FIELD_NUMBER = 1;
    private fv.spectrums.protos.SpectrumProtos.Spectrum spectrum_;
    /**
     * <code>optional .fv.spectrums.protos.SpectrumsProtos.Spectrum spectrum = 1;</code>
     */
    public boolean hasSpectrum() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .fv.spectrums.protos.SpectrumsProtos.Spectrum spectrum = 1;</code>
     */
    public fv.spectrums.protos.SpectrumProtos.Spectrum getSpectrum() {
      return spectrum_;
    }
    /**
     * <code>optional .fv.spectrums.protos.SpectrumsProtos.Spectrum spectrum = 1;</code>
     */
    public fv.spectrums.protos.SpectrumProtos.SpectrumOrBuilder getSpectrumOrBuilder() {
      return spectrum_;
    }

    private void initFields() {
      header_ = fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.getDefaultInstance();
      spectrum_ = fv.spectrums.protos.SpectrumProtos.Spectrum.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(1, spectrum_);
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(100, header_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, spectrum_);
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(100, header_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.spectrums.protos.SpectrumProtos.SpectrumTopic parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.spectrums.protos.SpectrumProtos.SpectrumTopic parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.spectrums.protos.SpectrumProtos.SpectrumTopic parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.spectrums.protos.SpectrumProtos.SpectrumTopic parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.spectrums.protos.SpectrumProtos.SpectrumTopic parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.spectrums.protos.SpectrumProtos.SpectrumTopic parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.spectrums.protos.SpectrumProtos.SpectrumTopic parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.spectrums.protos.SpectrumProtos.SpectrumTopic parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.spectrums.protos.SpectrumProtos.SpectrumTopic parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.spectrums.protos.SpectrumProtos.SpectrumTopic parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.spectrums.protos.SpectrumProtos.SpectrumTopic prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fv.spectrums.protos.SpectrumsProtos.SpectrumTopic}
     *
     * <pre>
     * Topic envelope for spectrum messages
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.spectrums.protos.SpectrumProtos.SpectrumTopicOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.spectrums.protos.SpectrumProtos.internal_static_fv_spectrums_protos_SpectrumsProtos_SpectrumTopic_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.spectrums.protos.SpectrumProtos.internal_static_fv_spectrums_protos_SpectrumsProtos_SpectrumTopic_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.spectrums.protos.SpectrumProtos.SpectrumTopic.class, fv.spectrums.protos.SpectrumProtos.SpectrumTopic.Builder.class);
      }

      // Construct using fv.spectrums.protos.SpectrumProtos.SpectrumTopic.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHeaderFieldBuilder();
          getSpectrumFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.getDefaultInstance();
        } else {
          headerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (spectrumBuilder_ == null) {
          spectrum_ = fv.spectrums.protos.SpectrumProtos.Spectrum.getDefaultInstance();
        } else {
          spectrumBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.spectrums.protos.SpectrumProtos.internal_static_fv_spectrums_protos_SpectrumsProtos_SpectrumTopic_descriptor;
      }

      public fv.spectrums.protos.SpectrumProtos.SpectrumTopic getDefaultInstanceForType() {
        return fv.spectrums.protos.SpectrumProtos.SpectrumTopic.getDefaultInstance();
      }

      public fv.spectrums.protos.SpectrumProtos.SpectrumTopic build() {
        fv.spectrums.protos.SpectrumProtos.SpectrumTopic result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.spectrums.protos.SpectrumProtos.SpectrumTopic buildPartial() {
        fv.spectrums.protos.SpectrumProtos.SpectrumTopic result = new fv.spectrums.protos.SpectrumProtos.SpectrumTopic(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (spectrumBuilder_ == null) {
          result.spectrum_ = spectrum_;
        } else {
          result.spectrum_ = spectrumBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.spectrums.protos.SpectrumProtos.SpectrumTopic) {
          return mergeFrom((fv.spectrums.protos.SpectrumProtos.SpectrumTopic)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.spectrums.protos.SpectrumProtos.SpectrumTopic other) {
        if (other == fv.spectrums.protos.SpectrumProtos.SpectrumTopic.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasSpectrum()) {
          mergeSpectrum(other.getSpectrum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.spectrums.protos.SpectrumProtos.SpectrumTopic parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.spectrums.protos.SpectrumProtos.SpectrumTopic) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .service_infrastructure.Header header = 100;
      private fv.protos.kepsvisor.ServiceInfrastructureCommon.Header header_ = fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          fv.protos.kepsvisor.ServiceInfrastructureCommon.Header, fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.Builder, fv.protos.kepsvisor.ServiceInfrastructureCommon.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>optional .service_infrastructure.Header header = 100;</code>
       */
      public boolean hasHeader() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .service_infrastructure.Header header = 100;</code>
       */
      public fv.protos.kepsvisor.ServiceInfrastructureCommon.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .service_infrastructure.Header header = 100;</code>
       */
      public Builder setHeader(fv.protos.kepsvisor.ServiceInfrastructureCommon.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .service_infrastructure.Header header = 100;</code>
       */
      public Builder setHeader(
          fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .service_infrastructure.Header header = 100;</code>
       */
      public Builder mergeHeader(fv.protos.kepsvisor.ServiceInfrastructureCommon.Header value) {
        if (headerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              header_ != fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.getDefaultInstance()) {
            header_ =
              fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .service_infrastructure.Header header = 100;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.getDefaultInstance();
          onChanged();
        } else {
          headerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .service_infrastructure.Header header = 100;</code>
       */
      public fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.Builder getHeaderBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .service_infrastructure.Header header = 100;</code>
       */
      public fv.protos.kepsvisor.ServiceInfrastructureCommon.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_;
        }
      }
      /**
       * <code>optional .service_infrastructure.Header header = 100;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          fv.protos.kepsvisor.ServiceInfrastructureCommon.Header, fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.Builder, fv.protos.kepsvisor.ServiceInfrastructureCommon.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              fv.protos.kepsvisor.ServiceInfrastructureCommon.Header, fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.Builder, fv.protos.kepsvisor.ServiceInfrastructureCommon.HeaderOrBuilder>(
                  header_,
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      // optional .fv.spectrums.protos.SpectrumsProtos.Spectrum spectrum = 1;
      private fv.spectrums.protos.SpectrumProtos.Spectrum spectrum_ = fv.spectrums.protos.SpectrumProtos.Spectrum.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          fv.spectrums.protos.SpectrumProtos.Spectrum, fv.spectrums.protos.SpectrumProtos.Spectrum.Builder, fv.spectrums.protos.SpectrumProtos.SpectrumOrBuilder> spectrumBuilder_;
      /**
       * <code>optional .fv.spectrums.protos.SpectrumsProtos.Spectrum spectrum = 1;</code>
       */
      public boolean hasSpectrum() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .fv.spectrums.protos.SpectrumsProtos.Spectrum spectrum = 1;</code>
       */
      public fv.spectrums.protos.SpectrumProtos.Spectrum getSpectrum() {
        if (spectrumBuilder_ == null) {
          return spectrum_;
        } else {
          return spectrumBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .fv.spectrums.protos.SpectrumsProtos.Spectrum spectrum = 1;</code>
       */
      public Builder setSpectrum(fv.spectrums.protos.SpectrumProtos.Spectrum value) {
        if (spectrumBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spectrum_ = value;
          onChanged();
        } else {
          spectrumBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .fv.spectrums.protos.SpectrumsProtos.Spectrum spectrum = 1;</code>
       */
      public Builder setSpectrum(
          fv.spectrums.protos.SpectrumProtos.Spectrum.Builder builderForValue) {
        if (spectrumBuilder_ == null) {
          spectrum_ = builderForValue.build();
          onChanged();
        } else {
          spectrumBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .fv.spectrums.protos.SpectrumsProtos.Spectrum spectrum = 1;</code>
       */
      public Builder mergeSpectrum(fv.spectrums.protos.SpectrumProtos.Spectrum value) {
        if (spectrumBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              spectrum_ != fv.spectrums.protos.SpectrumProtos.Spectrum.getDefaultInstance()) {
            spectrum_ =
              fv.spectrums.protos.SpectrumProtos.Spectrum.newBuilder(spectrum_).mergeFrom(value).buildPartial();
          } else {
            spectrum_ = value;
          }
          onChanged();
        } else {
          spectrumBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .fv.spectrums.protos.SpectrumsProtos.Spectrum spectrum = 1;</code>
       */
      public Builder clearSpectrum() {
        if (spectrumBuilder_ == null) {
          spectrum_ = fv.spectrums.protos.SpectrumProtos.Spectrum.getDefaultInstance();
          onChanged();
        } else {
          spectrumBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .fv.spectrums.protos.SpectrumsProtos.Spectrum spectrum = 1;</code>
       */
      public fv.spectrums.protos.SpectrumProtos.Spectrum.Builder getSpectrumBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSpectrumFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .fv.spectrums.protos.SpectrumsProtos.Spectrum spectrum = 1;</code>
       */
      public fv.spectrums.protos.SpectrumProtos.SpectrumOrBuilder getSpectrumOrBuilder() {
        if (spectrumBuilder_ != null) {
          return spectrumBuilder_.getMessageOrBuilder();
        } else {
          return spectrum_;
        }
      }
      /**
       * <code>optional .fv.spectrums.protos.SpectrumsProtos.Spectrum spectrum = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          fv.spectrums.protos.SpectrumProtos.Spectrum, fv.spectrums.protos.SpectrumProtos.Spectrum.Builder, fv.spectrums.protos.SpectrumProtos.SpectrumOrBuilder> 
          getSpectrumFieldBuilder() {
        if (spectrumBuilder_ == null) {
          spectrumBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              fv.spectrums.protos.SpectrumProtos.Spectrum, fv.spectrums.protos.SpectrumProtos.Spectrum.Builder, fv.spectrums.protos.SpectrumProtos.SpectrumOrBuilder>(
                  spectrum_,
                  getParentForChildren(),
                  isClean());
          spectrum_ = null;
        }
        return spectrumBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:fv.spectrums.protos.SpectrumsProtos.SpectrumTopic)
    }

    static {
      defaultInstance = new SpectrumTopic(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fv.spectrums.protos.SpectrumsProtos.SpectrumTopic)
  }

  public interface SpectrumOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "SPECTRUM"];
    /**
     * <code>optional string msgName = 1 [default = "SPECTRUM"];</code>
     *
     * <pre>
     * Message Name
     * </pre>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "SPECTRUM"];</code>
     *
     * <pre>
     * Message Name
     * </pre>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "SPECTRUM"];</code>
     *
     * <pre>
     * Message Name
     * </pre>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional string hostname = 2 [default = "localhost"];
    /**
     * <code>optional string hostname = 2 [default = "localhost"];</code>
     *
     * <pre>
     * Source Host Name
     * </pre>
     */
    boolean hasHostname();
    /**
     * <code>optional string hostname = 2 [default = "localhost"];</code>
     *
     * <pre>
     * Source Host Name
     * </pre>
     */
    java.lang.String getHostname();
    /**
     * <code>optional string hostname = 2 [default = "localhost"];</code>
     *
     * <pre>
     * Source Host Name
     * </pre>
     */
    com.google.protobuf.ByteString
        getHostnameBytes();

    // optional float wholesec = 3 [default = 0];
    /**
     * <code>optional float wholesec = 3 [default = 0];</code>
     *
     * <pre>
     * Spectrum Whole Seconds
     * </pre>
     */
    boolean hasWholesec();
    /**
     * <code>optional float wholesec = 3 [default = 0];</code>
     *
     * <pre>
     * Spectrum Whole Seconds
     * </pre>
     */
    float getWholesec();

    // optional float fracsec = 4 [default = 0];
    /**
     * <code>optional float fracsec = 4 [default = 0];</code>
     *
     * <pre>
     * Spectrum Fractional Seconds
     * </pre>
     */
    boolean hasFracsec();
    /**
     * <code>optional float fracsec = 4 [default = 0];</code>
     *
     * <pre>
     * Spectrum Fractional Seconds
     * </pre>
     */
    float getFracsec();

    // optional int32 framelength = 5 [default = 2048];
    /**
     * <code>optional int32 framelength = 5 [default = 2048];</code>
     *
     * <pre>
     * Elements in the Spectrum
     * </pre>
     */
    boolean hasFramelength();
    /**
     * <code>optional int32 framelength = 5 [default = 2048];</code>
     *
     * <pre>
     * Elements in the Spectrum
     * </pre>
     */
    int getFramelength();

    // optional float minfreq = 6;
    /**
     * <code>optional float minfreq = 6;</code>
     *
     * <pre>
     * Start Freq Hz (The Left-Most Bin)
     * </pre>
     */
    boolean hasMinfreq();
    /**
     * <code>optional float minfreq = 6;</code>
     *
     * <pre>
     * Start Freq Hz (The Left-Most Bin)
     * </pre>
     */
    float getMinfreq();

    // optional float binres = 7;
    /**
     * <code>optional float binres = 7;</code>
     *
     * <pre>
     * Bin Resolution (Hz / Bin)
     * </pre>
     */
    boolean hasBinres();
    /**
     * <code>optional float binres = 7;</code>
     *
     * <pre>
     * Bin Resolution (Hz / Bin)
     * </pre>
     */
    float getBinres();

    // optional int32 channel = 8;
    /**
     * <code>optional int32 channel = 8;</code>
     *
     * <pre>
     * The channel that the data came from
     * </pre>
     */
    boolean hasChannel();
    /**
     * <code>optional int32 channel = 8;</code>
     *
     * <pre>
     * The channel that the data came from
     * </pre>
     */
    int getChannel();

    // repeated float binvalue = 9;
    /**
     * <code>repeated float binvalue = 9;</code>
     *
     * <pre>
     * The Actual Data. There will typically be 2048, 4096, 8192, etc values
     * </pre>
     */
    java.util.List<java.lang.Float> getBinvalueList();
    /**
     * <code>repeated float binvalue = 9;</code>
     *
     * <pre>
     * The Actual Data. There will typically be 2048, 4096, 8192, etc values
     * </pre>
     */
    int getBinvalueCount();
    /**
     * <code>repeated float binvalue = 9;</code>
     *
     * <pre>
     * The Actual Data. There will typically be 2048, 4096, 8192, etc values
     * </pre>
     */
    float getBinvalue(int index);
  }
  /**
   * Protobuf type {@code fv.spectrums.protos.SpectrumsProtos.Spectrum}
   */
  public static final class Spectrum extends
      com.google.protobuf.GeneratedMessage
      implements SpectrumOrBuilder {
    // Use Spectrum.newBuilder() to construct.
    private Spectrum(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Spectrum(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Spectrum defaultInstance;
    public static Spectrum getDefaultInstance() {
      return defaultInstance;
    }

    public Spectrum getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Spectrum(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              hostname_ = input.readBytes();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              wholesec_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              fracsec_ = input.readFloat();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              framelength_ = input.readInt32();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              minfreq_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              binres_ = input.readFloat();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              channel_ = input.readInt32();
              break;
            }
            case 77: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                binvalue_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000100;
              }
              binvalue_.add(input.readFloat());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                binvalue_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                binvalue_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          binvalue_ = java.util.Collections.unmodifiableList(binvalue_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.spectrums.protos.SpectrumProtos.internal_static_fv_spectrums_protos_SpectrumsProtos_Spectrum_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.spectrums.protos.SpectrumProtos.internal_static_fv_spectrums_protos_SpectrumsProtos_Spectrum_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.spectrums.protos.SpectrumProtos.Spectrum.class, fv.spectrums.protos.SpectrumProtos.Spectrum.Builder.class);
    }

    public static com.google.protobuf.Parser<Spectrum> PARSER =
        new com.google.protobuf.AbstractParser<Spectrum>() {
      public Spectrum parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Spectrum(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Spectrum> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "SPECTRUM"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "SPECTRUM"];</code>
     *
     * <pre>
     * Message Name
     * </pre>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "SPECTRUM"];</code>
     *
     * <pre>
     * Message Name
     * </pre>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "SPECTRUM"];</code>
     *
     * <pre>
     * Message Name
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string hostname = 2 [default = "localhost"];
    public static final int HOSTNAME_FIELD_NUMBER = 2;
    private java.lang.Object hostname_;
    /**
     * <code>optional string hostname = 2 [default = "localhost"];</code>
     *
     * <pre>
     * Source Host Name
     * </pre>
     */
    public boolean hasHostname() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string hostname = 2 [default = "localhost"];</code>
     *
     * <pre>
     * Source Host Name
     * </pre>
     */
    public java.lang.String getHostname() {
      java.lang.Object ref = hostname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hostname_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string hostname = 2 [default = "localhost"];</code>
     *
     * <pre>
     * Source Host Name
     * </pre>
     */
    public com.google.protobuf.ByteString
        getHostnameBytes() {
      java.lang.Object ref = hostname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hostname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional float wholesec = 3 [default = 0];
    public static final int WHOLESEC_FIELD_NUMBER = 3;
    private float wholesec_;
    /**
     * <code>optional float wholesec = 3 [default = 0];</code>
     *
     * <pre>
     * Spectrum Whole Seconds
     * </pre>
     */
    public boolean hasWholesec() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float wholesec = 3 [default = 0];</code>
     *
     * <pre>
     * Spectrum Whole Seconds
     * </pre>
     */
    public float getWholesec() {
      return wholesec_;
    }

    // optional float fracsec = 4 [default = 0];
    public static final int FRACSEC_FIELD_NUMBER = 4;
    private float fracsec_;
    /**
     * <code>optional float fracsec = 4 [default = 0];</code>
     *
     * <pre>
     * Spectrum Fractional Seconds
     * </pre>
     */
    public boolean hasFracsec() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float fracsec = 4 [default = 0];</code>
     *
     * <pre>
     * Spectrum Fractional Seconds
     * </pre>
     */
    public float getFracsec() {
      return fracsec_;
    }

    // optional int32 framelength = 5 [default = 2048];
    public static final int FRAMELENGTH_FIELD_NUMBER = 5;
    private int framelength_;
    /**
     * <code>optional int32 framelength = 5 [default = 2048];</code>
     *
     * <pre>
     * Elements in the Spectrum
     * </pre>
     */
    public boolean hasFramelength() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 framelength = 5 [default = 2048];</code>
     *
     * <pre>
     * Elements in the Spectrum
     * </pre>
     */
    public int getFramelength() {
      return framelength_;
    }

    // optional float minfreq = 6;
    public static final int MINFREQ_FIELD_NUMBER = 6;
    private float minfreq_;
    /**
     * <code>optional float minfreq = 6;</code>
     *
     * <pre>
     * Start Freq Hz (The Left-Most Bin)
     * </pre>
     */
    public boolean hasMinfreq() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float minfreq = 6;</code>
     *
     * <pre>
     * Start Freq Hz (The Left-Most Bin)
     * </pre>
     */
    public float getMinfreq() {
      return minfreq_;
    }

    // optional float binres = 7;
    public static final int BINRES_FIELD_NUMBER = 7;
    private float binres_;
    /**
     * <code>optional float binres = 7;</code>
     *
     * <pre>
     * Bin Resolution (Hz / Bin)
     * </pre>
     */
    public boolean hasBinres() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float binres = 7;</code>
     *
     * <pre>
     * Bin Resolution (Hz / Bin)
     * </pre>
     */
    public float getBinres() {
      return binres_;
    }

    // optional int32 channel = 8;
    public static final int CHANNEL_FIELD_NUMBER = 8;
    private int channel_;
    /**
     * <code>optional int32 channel = 8;</code>
     *
     * <pre>
     * The channel that the data came from
     * </pre>
     */
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 channel = 8;</code>
     *
     * <pre>
     * The channel that the data came from
     * </pre>
     */
    public int getChannel() {
      return channel_;
    }

    // repeated float binvalue = 9;
    public static final int BINVALUE_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Float> binvalue_;
    /**
     * <code>repeated float binvalue = 9;</code>
     *
     * <pre>
     * The Actual Data. There will typically be 2048, 4096, 8192, etc values
     * </pre>
     */
    public java.util.List<java.lang.Float>
        getBinvalueList() {
      return binvalue_;
    }
    /**
     * <code>repeated float binvalue = 9;</code>
     *
     * <pre>
     * The Actual Data. There will typically be 2048, 4096, 8192, etc values
     * </pre>
     */
    public int getBinvalueCount() {
      return binvalue_.size();
    }
    /**
     * <code>repeated float binvalue = 9;</code>
     *
     * <pre>
     * The Actual Data. There will typically be 2048, 4096, 8192, etc values
     * </pre>
     */
    public float getBinvalue(int index) {
      return binvalue_.get(index);
    }

    private void initFields() {
      msgName_ = "SPECTRUM";
      hostname_ = "localhost";
      wholesec_ = 0F;
      fracsec_ = 0F;
      framelength_ = 2048;
      minfreq_ = 0F;
      binres_ = 0F;
      channel_ = 0;
      binvalue_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getHostnameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, wholesec_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, fracsec_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, framelength_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, minfreq_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, binres_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, channel_);
      }
      for (int i = 0; i < binvalue_.size(); i++) {
        output.writeFloat(9, binvalue_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getHostnameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, wholesec_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, fracsec_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, framelength_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, minfreq_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, binres_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, channel_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getBinvalueList().size();
        size += dataSize;
        size += 1 * getBinvalueList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.spectrums.protos.SpectrumProtos.Spectrum parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.spectrums.protos.SpectrumProtos.Spectrum parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.spectrums.protos.SpectrumProtos.Spectrum parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.spectrums.protos.SpectrumProtos.Spectrum parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.spectrums.protos.SpectrumProtos.Spectrum parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.spectrums.protos.SpectrumProtos.Spectrum parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.spectrums.protos.SpectrumProtos.Spectrum parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.spectrums.protos.SpectrumProtos.Spectrum parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.spectrums.protos.SpectrumProtos.Spectrum parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.spectrums.protos.SpectrumProtos.Spectrum parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.spectrums.protos.SpectrumProtos.Spectrum prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code fv.spectrums.protos.SpectrumsProtos.Spectrum}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.spectrums.protos.SpectrumProtos.SpectrumOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.spectrums.protos.SpectrumProtos.internal_static_fv_spectrums_protos_SpectrumsProtos_Spectrum_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.spectrums.protos.SpectrumProtos.internal_static_fv_spectrums_protos_SpectrumsProtos_Spectrum_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.spectrums.protos.SpectrumProtos.Spectrum.class, fv.spectrums.protos.SpectrumProtos.Spectrum.Builder.class);
      }

      // Construct using fv.spectrums.protos.SpectrumProtos.Spectrum.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "SPECTRUM";
        bitField0_ = (bitField0_ & ~0x00000001);
        hostname_ = "localhost";
        bitField0_ = (bitField0_ & ~0x00000002);
        wholesec_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        fracsec_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        framelength_ = 2048;
        bitField0_ = (bitField0_ & ~0x00000010);
        minfreq_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        binres_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        channel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        binvalue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.spectrums.protos.SpectrumProtos.internal_static_fv_spectrums_protos_SpectrumsProtos_Spectrum_descriptor;
      }

      public fv.spectrums.protos.SpectrumProtos.Spectrum getDefaultInstanceForType() {
        return fv.spectrums.protos.SpectrumProtos.Spectrum.getDefaultInstance();
      }

      public fv.spectrums.protos.SpectrumProtos.Spectrum build() {
        fv.spectrums.protos.SpectrumProtos.Spectrum result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.spectrums.protos.SpectrumProtos.Spectrum buildPartial() {
        fv.spectrums.protos.SpectrumProtos.Spectrum result = new fv.spectrums.protos.SpectrumProtos.Spectrum(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.hostname_ = hostname_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.wholesec_ = wholesec_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fracsec_ = fracsec_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.framelength_ = framelength_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.minfreq_ = minfreq_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.binres_ = binres_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.channel_ = channel_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          binvalue_ = java.util.Collections.unmodifiableList(binvalue_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.binvalue_ = binvalue_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.spectrums.protos.SpectrumProtos.Spectrum) {
          return mergeFrom((fv.spectrums.protos.SpectrumProtos.Spectrum)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.spectrums.protos.SpectrumProtos.Spectrum other) {
        if (other == fv.spectrums.protos.SpectrumProtos.Spectrum.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasHostname()) {
          bitField0_ |= 0x00000002;
          hostname_ = other.hostname_;
          onChanged();
        }
        if (other.hasWholesec()) {
          setWholesec(other.getWholesec());
        }
        if (other.hasFracsec()) {
          setFracsec(other.getFracsec());
        }
        if (other.hasFramelength()) {
          setFramelength(other.getFramelength());
        }
        if (other.hasMinfreq()) {
          setMinfreq(other.getMinfreq());
        }
        if (other.hasBinres()) {
          setBinres(other.getBinres());
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        if (!other.binvalue_.isEmpty()) {
          if (binvalue_.isEmpty()) {
            binvalue_ = other.binvalue_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureBinvalueIsMutable();
            binvalue_.addAll(other.binvalue_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.spectrums.protos.SpectrumProtos.Spectrum parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.spectrums.protos.SpectrumProtos.Spectrum) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "SPECTRUM"];
      private java.lang.Object msgName_ = "SPECTRUM";
      /**
       * <code>optional string msgName = 1 [default = "SPECTRUM"];</code>
       *
       * <pre>
       * Message Name
       * </pre>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "SPECTRUM"];</code>
       *
       * <pre>
       * Message Name
       * </pre>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "SPECTRUM"];</code>
       *
       * <pre>
       * Message Name
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "SPECTRUM"];</code>
       *
       * <pre>
       * Message Name
       * </pre>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "SPECTRUM"];</code>
       *
       * <pre>
       * Message Name
       * </pre>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "SPECTRUM"];</code>
       *
       * <pre>
       * Message Name
       * </pre>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional string hostname = 2 [default = "localhost"];
      private java.lang.Object hostname_ = "localhost";
      /**
       * <code>optional string hostname = 2 [default = "localhost"];</code>
       *
       * <pre>
       * Source Host Name
       * </pre>
       */
      public boolean hasHostname() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string hostname = 2 [default = "localhost"];</code>
       *
       * <pre>
       * Source Host Name
       * </pre>
       */
      public java.lang.String getHostname() {
        java.lang.Object ref = hostname_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          hostname_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string hostname = 2 [default = "localhost"];</code>
       *
       * <pre>
       * Source Host Name
       * </pre>
       */
      public com.google.protobuf.ByteString
          getHostnameBytes() {
        java.lang.Object ref = hostname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hostname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string hostname = 2 [default = "localhost"];</code>
       *
       * <pre>
       * Source Host Name
       * </pre>
       */
      public Builder setHostname(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        hostname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string hostname = 2 [default = "localhost"];</code>
       *
       * <pre>
       * Source Host Name
       * </pre>
       */
      public Builder clearHostname() {
        bitField0_ = (bitField0_ & ~0x00000002);
        hostname_ = getDefaultInstance().getHostname();
        onChanged();
        return this;
      }
      /**
       * <code>optional string hostname = 2 [default = "localhost"];</code>
       *
       * <pre>
       * Source Host Name
       * </pre>
       */
      public Builder setHostnameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        hostname_ = value;
        onChanged();
        return this;
      }

      // optional float wholesec = 3 [default = 0];
      private float wholesec_ ;
      /**
       * <code>optional float wholesec = 3 [default = 0];</code>
       *
       * <pre>
       * Spectrum Whole Seconds
       * </pre>
       */
      public boolean hasWholesec() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float wholesec = 3 [default = 0];</code>
       *
       * <pre>
       * Spectrum Whole Seconds
       * </pre>
       */
      public float getWholesec() {
        return wholesec_;
      }
      /**
       * <code>optional float wholesec = 3 [default = 0];</code>
       *
       * <pre>
       * Spectrum Whole Seconds
       * </pre>
       */
      public Builder setWholesec(float value) {
        bitField0_ |= 0x00000004;
        wholesec_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float wholesec = 3 [default = 0];</code>
       *
       * <pre>
       * Spectrum Whole Seconds
       * </pre>
       */
      public Builder clearWholesec() {
        bitField0_ = (bitField0_ & ~0x00000004);
        wholesec_ = 0F;
        onChanged();
        return this;
      }

      // optional float fracsec = 4 [default = 0];
      private float fracsec_ ;
      /**
       * <code>optional float fracsec = 4 [default = 0];</code>
       *
       * <pre>
       * Spectrum Fractional Seconds
       * </pre>
       */
      public boolean hasFracsec() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float fracsec = 4 [default = 0];</code>
       *
       * <pre>
       * Spectrum Fractional Seconds
       * </pre>
       */
      public float getFracsec() {
        return fracsec_;
      }
      /**
       * <code>optional float fracsec = 4 [default = 0];</code>
       *
       * <pre>
       * Spectrum Fractional Seconds
       * </pre>
       */
      public Builder setFracsec(float value) {
        bitField0_ |= 0x00000008;
        fracsec_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float fracsec = 4 [default = 0];</code>
       *
       * <pre>
       * Spectrum Fractional Seconds
       * </pre>
       */
      public Builder clearFracsec() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fracsec_ = 0F;
        onChanged();
        return this;
      }

      // optional int32 framelength = 5 [default = 2048];
      private int framelength_ = 2048;
      /**
       * <code>optional int32 framelength = 5 [default = 2048];</code>
       *
       * <pre>
       * Elements in the Spectrum
       * </pre>
       */
      public boolean hasFramelength() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 framelength = 5 [default = 2048];</code>
       *
       * <pre>
       * Elements in the Spectrum
       * </pre>
       */
      public int getFramelength() {
        return framelength_;
      }
      /**
       * <code>optional int32 framelength = 5 [default = 2048];</code>
       *
       * <pre>
       * Elements in the Spectrum
       * </pre>
       */
      public Builder setFramelength(int value) {
        bitField0_ |= 0x00000010;
        framelength_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 framelength = 5 [default = 2048];</code>
       *
       * <pre>
       * Elements in the Spectrum
       * </pre>
       */
      public Builder clearFramelength() {
        bitField0_ = (bitField0_ & ~0x00000010);
        framelength_ = 2048;
        onChanged();
        return this;
      }

      // optional float minfreq = 6;
      private float minfreq_ ;
      /**
       * <code>optional float minfreq = 6;</code>
       *
       * <pre>
       * Start Freq Hz (The Left-Most Bin)
       * </pre>
       */
      public boolean hasMinfreq() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float minfreq = 6;</code>
       *
       * <pre>
       * Start Freq Hz (The Left-Most Bin)
       * </pre>
       */
      public float getMinfreq() {
        return minfreq_;
      }
      /**
       * <code>optional float minfreq = 6;</code>
       *
       * <pre>
       * Start Freq Hz (The Left-Most Bin)
       * </pre>
       */
      public Builder setMinfreq(float value) {
        bitField0_ |= 0x00000020;
        minfreq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float minfreq = 6;</code>
       *
       * <pre>
       * Start Freq Hz (The Left-Most Bin)
       * </pre>
       */
      public Builder clearMinfreq() {
        bitField0_ = (bitField0_ & ~0x00000020);
        minfreq_ = 0F;
        onChanged();
        return this;
      }

      // optional float binres = 7;
      private float binres_ ;
      /**
       * <code>optional float binres = 7;</code>
       *
       * <pre>
       * Bin Resolution (Hz / Bin)
       * </pre>
       */
      public boolean hasBinres() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float binres = 7;</code>
       *
       * <pre>
       * Bin Resolution (Hz / Bin)
       * </pre>
       */
      public float getBinres() {
        return binres_;
      }
      /**
       * <code>optional float binres = 7;</code>
       *
       * <pre>
       * Bin Resolution (Hz / Bin)
       * </pre>
       */
      public Builder setBinres(float value) {
        bitField0_ |= 0x00000040;
        binres_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float binres = 7;</code>
       *
       * <pre>
       * Bin Resolution (Hz / Bin)
       * </pre>
       */
      public Builder clearBinres() {
        bitField0_ = (bitField0_ & ~0x00000040);
        binres_ = 0F;
        onChanged();
        return this;
      }

      // optional int32 channel = 8;
      private int channel_ ;
      /**
       * <code>optional int32 channel = 8;</code>
       *
       * <pre>
       * The channel that the data came from
       * </pre>
       */
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 channel = 8;</code>
       *
       * <pre>
       * The channel that the data came from
       * </pre>
       */
      public int getChannel() {
        return channel_;
      }
      /**
       * <code>optional int32 channel = 8;</code>
       *
       * <pre>
       * The channel that the data came from
       * </pre>
       */
      public Builder setChannel(int value) {
        bitField0_ |= 0x00000080;
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 channel = 8;</code>
       *
       * <pre>
       * The channel that the data came from
       * </pre>
       */
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000080);
        channel_ = 0;
        onChanged();
        return this;
      }

      // repeated float binvalue = 9;
      private java.util.List<java.lang.Float> binvalue_ = java.util.Collections.emptyList();
      private void ensureBinvalueIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          binvalue_ = new java.util.ArrayList<java.lang.Float>(binvalue_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated float binvalue = 9;</code>
       *
       * <pre>
       * The Actual Data. There will typically be 2048, 4096, 8192, etc values
       * </pre>
       */
      public java.util.List<java.lang.Float>
          getBinvalueList() {
        return java.util.Collections.unmodifiableList(binvalue_);
      }
      /**
       * <code>repeated float binvalue = 9;</code>
       *
       * <pre>
       * The Actual Data. There will typically be 2048, 4096, 8192, etc values
       * </pre>
       */
      public int getBinvalueCount() {
        return binvalue_.size();
      }
      /**
       * <code>repeated float binvalue = 9;</code>
       *
       * <pre>
       * The Actual Data. There will typically be 2048, 4096, 8192, etc values
       * </pre>
       */
      public float getBinvalue(int index) {
        return binvalue_.get(index);
      }
      /**
       * <code>repeated float binvalue = 9;</code>
       *
       * <pre>
       * The Actual Data. There will typically be 2048, 4096, 8192, etc values
       * </pre>
       */
      public Builder setBinvalue(
          int index, float value) {
        ensureBinvalueIsMutable();
        binvalue_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float binvalue = 9;</code>
       *
       * <pre>
       * The Actual Data. There will typically be 2048, 4096, 8192, etc values
       * </pre>
       */
      public Builder addBinvalue(float value) {
        ensureBinvalueIsMutable();
        binvalue_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float binvalue = 9;</code>
       *
       * <pre>
       * The Actual Data. There will typically be 2048, 4096, 8192, etc values
       * </pre>
       */
      public Builder addAllBinvalue(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureBinvalueIsMutable();
        super.addAll(values, binvalue_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float binvalue = 9;</code>
       *
       * <pre>
       * The Actual Data. There will typically be 2048, 4096, 8192, etc values
       * </pre>
       */
      public Builder clearBinvalue() {
        binvalue_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fv.spectrums.protos.SpectrumsProtos.Spectrum)
    }

    static {
      defaultInstance = new Spectrum(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:fv.spectrums.protos.SpectrumsProtos.Spectrum)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_fv_spectrums_protos_SpectrumsProtos_SpectrumTopic_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fv_spectrums_protos_SpectrumsProtos_SpectrumTopic_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_fv_spectrums_protos_SpectrumsProtos_Spectrum_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_fv_spectrums_protos_SpectrumsProtos_Spectrum_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026SpectrumMessages.proto\022#fv.spectrums.p" +
      "rotos.SpectrumsProtos\032!ServiceInfrastruc" +
      "tureCommon.proto\"\200\001\n\rSpectrumTopic\022.\n\006he" +
      "ader\030d \001(\0132\036.service_infrastructure.Head" +
      "er\022?\n\010spectrum\030\001 \001(\0132-.fv.spectrums.prot" +
      "os.SpectrumsProtos.Spectrum\"\312\001\n\010Spectrum" +
      "\022\031\n\007msgName\030\001 \001(\t:\010SPECTRUM\022\033\n\010hostname\030" +
      "\002 \001(\t:\tlocalhost\022\023\n\010wholesec\030\003 \001(\002:\0010\022\022\n" +
      "\007fracsec\030\004 \001(\002:\0010\022\031\n\013framelength\030\005 \001(\005:\004" +
      "2048\022\017\n\007minfreq\030\006 \001(\002\022\016\n\006binres\030\007 \001(\002\022\017\n",
      "\007channel\030\010 \001(\005\022\020\n\010binvalue\030\t \003(\002B%\n\023fv.s" +
      "pectrums.protosB\016SpectrumProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_fv_spectrums_protos_SpectrumsProtos_SpectrumTopic_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_fv_spectrums_protos_SpectrumsProtos_SpectrumTopic_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_fv_spectrums_protos_SpectrumsProtos_SpectrumTopic_descriptor,
              new java.lang.String[] { "Header", "Spectrum", });
          internal_static_fv_spectrums_protos_SpectrumsProtos_Spectrum_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_fv_spectrums_protos_SpectrumsProtos_Spectrum_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_fv_spectrums_protos_SpectrumsProtos_Spectrum_descriptor,
              new java.lang.String[] { "MsgName", "Hostname", "Wholesec", "Fracsec", "Framelength", "Minfreq", "Binres", "Channel", "Binvalue", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          fv.protos.kepsvisor.ServiceInfrastructureCommon.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
