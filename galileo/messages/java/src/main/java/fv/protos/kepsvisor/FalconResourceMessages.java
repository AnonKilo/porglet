// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FalconResourceMessages.proto

package fv.protos.kepsvisor;

public final class FalconResourceMessages {
  private FalconResourceMessages() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface DummyRcvConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "DUMMYRCV_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "DUMMYRCV_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "DUMMYRCV_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "DUMMYRCV_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional int32 channel = 2;
    /**
     * <code>optional int32 channel = 2;</code>
     */
    boolean hasChannel();
    /**
     * <code>optional int32 channel = 2;</code>
     */
    int getChannel();

    // optional int32 baseAux = 3;
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    boolean hasBaseAux();
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    int getBaseAux();

    // optional string rx = 4;
    /**
     * <code>optional string rx = 4;</code>
     */
    boolean hasRx();
    /**
     * <code>optional string rx = 4;</code>
     */
    java.lang.String getRx();
    /**
     * <code>optional string rx = 4;</code>
     */
    com.google.protobuf.ByteString
        getRxBytes();

    // optional string host = 5 [default = "local"];
    /**
     * <code>optional string host = 5 [default = "local"];</code>
     */
    boolean hasHost();
    /**
     * <code>optional string host = 5 [default = "local"];</code>
     */
    java.lang.String getHost();
    /**
     * <code>optional string host = 5 [default = "local"];</code>
     */
    com.google.protobuf.ByteString
        getHostBytes();

    // optional float fs = 6 [default = 1e+08];
    /**
     * <code>optional float fs = 6 [default = 1e+08];</code>
     */
    boolean hasFs();
    /**
     * <code>optional float fs = 6 [default = 1e+08];</code>
     */
    float getFs();

    // optional float minRF = 7 [default = 2e+07];
    /**
     * <code>optional float minRF = 7 [default = 2e+07];</code>
     */
    boolean hasMinRF();
    /**
     * <code>optional float minRF = 7 [default = 2e+07];</code>
     */
    float getMinRF();

    // optional float maxRF = 8 [default = 3e+09];
    /**
     * <code>optional float maxRF = 8 [default = 3e+09];</code>
     */
    boolean hasMaxRF();
    /**
     * <code>optional float maxRF = 8 [default = 3e+09];</code>
     */
    float getMaxRF();

    // optional string uniqRXID = 9 [default = "999"];
    /**
     * <code>optional string uniqRXID = 9 [default = "999"];</code>
     */
    boolean hasUniqRXID();
    /**
     * <code>optional string uniqRXID = 9 [default = "999"];</code>
     */
    java.lang.String getUniqRXID();
    /**
     * <code>optional string uniqRXID = 9 [default = "999"];</code>
     */
    com.google.protobuf.ByteString
        getUniqRXIDBytes();

    // optional int32 pair = 10;
    /**
     * <code>optional int32 pair = 10;</code>
     */
    boolean hasPair();
    /**
     * <code>optional int32 pair = 10;</code>
     */
    int getPair();

    // optional int32 testDur = 11;
    /**
     * <code>optional int32 testDur = 11;</code>
     */
    boolean hasTestDur();
    /**
     * <code>optional int32 testDur = 11;</code>
     */
    int getTestDur();
  }
  /**
   * Protobuf type {@code falcon_res_msg.DummyRcvConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the DummyReceiver resource.  These are populated
   * by DummyReceiver.configureMessage() and from resources.xml.
   *
   * msgName: DUMMYRCV_CONFIG, used to identify the message
   * channel: Channel number to use (legacy)
   * baseAux: Aux number used as the base for the channel
   * rx: Receiver string (e.g. RCV1 or RCV2)
   * host: Hostname to use for the receiver
   * fs: Sample rate of the receiver
   * minRF: Minimum RF used for receiving
   * maxRF: Maximum RF used for receiving
   * uniqRXID: Set to 999 to lookup, or channel number to use
   * </pre>
   */
  public static final class DummyRcvConfig extends
      com.google.protobuf.GeneratedMessage
      implements DummyRcvConfigOrBuilder {
    // Use DummyRcvConfig.newBuilder() to construct.
    private DummyRcvConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DummyRcvConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DummyRcvConfig defaultInstance;
    public static DummyRcvConfig getDefaultInstance() {
      return defaultInstance;
    }

    public DummyRcvConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DummyRcvConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              channel_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              baseAux_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              rx_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              host_ = input.readBytes();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              fs_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              minRF_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              maxRF_ = input.readFloat();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              uniqRXID_ = input.readBytes();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              pair_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              testDur_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_DummyRcvConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_DummyRcvConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig.class, fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<DummyRcvConfig> PARSER =
        new com.google.protobuf.AbstractParser<DummyRcvConfig>() {
      public DummyRcvConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DummyRcvConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DummyRcvConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "DUMMYRCV_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "DUMMYRCV_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "DUMMYRCV_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "DUMMYRCV_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 channel = 2;
    public static final int CHANNEL_FIELD_NUMBER = 2;
    private int channel_;
    /**
     * <code>optional int32 channel = 2;</code>
     */
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 channel = 2;</code>
     */
    public int getChannel() {
      return channel_;
    }

    // optional int32 baseAux = 3;
    public static final int BASEAUX_FIELD_NUMBER = 3;
    private int baseAux_;
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    public boolean hasBaseAux() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    public int getBaseAux() {
      return baseAux_;
    }

    // optional string rx = 4;
    public static final int RX_FIELD_NUMBER = 4;
    private java.lang.Object rx_;
    /**
     * <code>optional string rx = 4;</code>
     */
    public boolean hasRx() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string rx = 4;</code>
     */
    public java.lang.String getRx() {
      java.lang.Object ref = rx_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          rx_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string rx = 4;</code>
     */
    public com.google.protobuf.ByteString
        getRxBytes() {
      java.lang.Object ref = rx_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rx_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string host = 5 [default = "local"];
    public static final int HOST_FIELD_NUMBER = 5;
    private java.lang.Object host_;
    /**
     * <code>optional string host = 5 [default = "local"];</code>
     */
    public boolean hasHost() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string host = 5 [default = "local"];</code>
     */
    public java.lang.String getHost() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          host_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string host = 5 [default = "local"];</code>
     */
    public com.google.protobuf.ByteString
        getHostBytes() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        host_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional float fs = 6 [default = 1e+08];
    public static final int FS_FIELD_NUMBER = 6;
    private float fs_;
    /**
     * <code>optional float fs = 6 [default = 1e+08];</code>
     */
    public boolean hasFs() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float fs = 6 [default = 1e+08];</code>
     */
    public float getFs() {
      return fs_;
    }

    // optional float minRF = 7 [default = 2e+07];
    public static final int MINRF_FIELD_NUMBER = 7;
    private float minRF_;
    /**
     * <code>optional float minRF = 7 [default = 2e+07];</code>
     */
    public boolean hasMinRF() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float minRF = 7 [default = 2e+07];</code>
     */
    public float getMinRF() {
      return minRF_;
    }

    // optional float maxRF = 8 [default = 3e+09];
    public static final int MAXRF_FIELD_NUMBER = 8;
    private float maxRF_;
    /**
     * <code>optional float maxRF = 8 [default = 3e+09];</code>
     */
    public boolean hasMaxRF() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float maxRF = 8 [default = 3e+09];</code>
     */
    public float getMaxRF() {
      return maxRF_;
    }

    // optional string uniqRXID = 9 [default = "999"];
    public static final int UNIQRXID_FIELD_NUMBER = 9;
    private java.lang.Object uniqRXID_;
    /**
     * <code>optional string uniqRXID = 9 [default = "999"];</code>
     */
    public boolean hasUniqRXID() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string uniqRXID = 9 [default = "999"];</code>
     */
    public java.lang.String getUniqRXID() {
      java.lang.Object ref = uniqRXID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uniqRXID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uniqRXID = 9 [default = "999"];</code>
     */
    public com.google.protobuf.ByteString
        getUniqRXIDBytes() {
      java.lang.Object ref = uniqRXID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uniqRXID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 pair = 10;
    public static final int PAIR_FIELD_NUMBER = 10;
    private int pair_;
    /**
     * <code>optional int32 pair = 10;</code>
     */
    public boolean hasPair() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 pair = 10;</code>
     */
    public int getPair() {
      return pair_;
    }

    // optional int32 testDur = 11;
    public static final int TESTDUR_FIELD_NUMBER = 11;
    private int testDur_;
    /**
     * <code>optional int32 testDur = 11;</code>
     */
    public boolean hasTestDur() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 testDur = 11;</code>
     */
    public int getTestDur() {
      return testDur_;
    }

    private void initFields() {
      msgName_ = "DUMMYRCV_CONFIG";
      channel_ = 0;
      baseAux_ = 0;
      rx_ = "";
      host_ = "local";
      fs_ = 1e+08F;
      minRF_ = 2e+07F;
      maxRF_ = 3e+09F;
      uniqRXID_ = "999";
      pair_ = 0;
      testDur_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, baseAux_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getRxBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getHostBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, fs_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, minRF_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, maxRF_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getUniqRXIDBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, pair_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, testDur_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, baseAux_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getRxBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getHostBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, fs_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, minRF_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, maxRF_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getUniqRXIDBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, pair_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, testDur_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.DummyRcvConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the DummyReceiver resource.  These are populated
     * by DummyReceiver.configureMessage() and from resources.xml.
     *
     * msgName: DUMMYRCV_CONFIG, used to identify the message
     * channel: Channel number to use (legacy)
     * baseAux: Aux number used as the base for the channel
     * rx: Receiver string (e.g. RCV1 or RCV2)
     * host: Hostname to use for the receiver
     * fs: Sample rate of the receiver
     * minRF: Minimum RF used for receiving
     * maxRF: Maximum RF used for receiving
     * uniqRXID: Set to 999 to lookup, or channel number to use
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_DummyRcvConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_DummyRcvConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig.class, fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "DUMMYRCV_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        channel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        baseAux_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        rx_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        host_ = "local";
        bitField0_ = (bitField0_ & ~0x00000010);
        fs_ = 1e+08F;
        bitField0_ = (bitField0_ & ~0x00000020);
        minRF_ = 2e+07F;
        bitField0_ = (bitField0_ & ~0x00000040);
        maxRF_ = 3e+09F;
        bitField0_ = (bitField0_ & ~0x00000080);
        uniqRXID_ = "999";
        bitField0_ = (bitField0_ & ~0x00000100);
        pair_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        testDur_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_DummyRcvConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig result = new fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.baseAux_ = baseAux_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rx_ = rx_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.host_ = host_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.fs_ = fs_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.minRF_ = minRF_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.maxRF_ = maxRF_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.uniqRXID_ = uniqRXID_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.pair_ = pair_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.testDur_ = testDur_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        if (other.hasBaseAux()) {
          setBaseAux(other.getBaseAux());
        }
        if (other.hasRx()) {
          bitField0_ |= 0x00000008;
          rx_ = other.rx_;
          onChanged();
        }
        if (other.hasHost()) {
          bitField0_ |= 0x00000010;
          host_ = other.host_;
          onChanged();
        }
        if (other.hasFs()) {
          setFs(other.getFs());
        }
        if (other.hasMinRF()) {
          setMinRF(other.getMinRF());
        }
        if (other.hasMaxRF()) {
          setMaxRF(other.getMaxRF());
        }
        if (other.hasUniqRXID()) {
          bitField0_ |= 0x00000100;
          uniqRXID_ = other.uniqRXID_;
          onChanged();
        }
        if (other.hasPair()) {
          setPair(other.getPair());
        }
        if (other.hasTestDur()) {
          setTestDur(other.getTestDur());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.DummyRcvConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "DUMMYRCV_CONFIG"];
      private java.lang.Object msgName_ = "DUMMYRCV_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "DUMMYRCV_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "DUMMYRCV_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "DUMMYRCV_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "DUMMYRCV_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "DUMMYRCV_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "DUMMYRCV_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional int32 channel = 2;
      private int channel_ ;
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public int getChannel() {
        return channel_;
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public Builder setChannel(int value) {
        bitField0_ |= 0x00000002;
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channel_ = 0;
        onChanged();
        return this;
      }

      // optional int32 baseAux = 3;
      private int baseAux_ ;
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public boolean hasBaseAux() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public int getBaseAux() {
        return baseAux_;
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public Builder setBaseAux(int value) {
        bitField0_ |= 0x00000004;
        baseAux_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public Builder clearBaseAux() {
        bitField0_ = (bitField0_ & ~0x00000004);
        baseAux_ = 0;
        onChanged();
        return this;
      }

      // optional string rx = 4;
      private java.lang.Object rx_ = "";
      /**
       * <code>optional string rx = 4;</code>
       */
      public boolean hasRx() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string rx = 4;</code>
       */
      public java.lang.String getRx() {
        java.lang.Object ref = rx_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          rx_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string rx = 4;</code>
       */
      public com.google.protobuf.ByteString
          getRxBytes() {
        java.lang.Object ref = rx_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rx_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string rx = 4;</code>
       */
      public Builder setRx(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        rx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string rx = 4;</code>
       */
      public Builder clearRx() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rx_ = getDefaultInstance().getRx();
        onChanged();
        return this;
      }
      /**
       * <code>optional string rx = 4;</code>
       */
      public Builder setRxBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        rx_ = value;
        onChanged();
        return this;
      }

      // optional string host = 5 [default = "local"];
      private java.lang.Object host_ = "local";
      /**
       * <code>optional string host = 5 [default = "local"];</code>
       */
      public boolean hasHost() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string host = 5 [default = "local"];</code>
       */
      public java.lang.String getHost() {
        java.lang.Object ref = host_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          host_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string host = 5 [default = "local"];</code>
       */
      public com.google.protobuf.ByteString
          getHostBytes() {
        java.lang.Object ref = host_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          host_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string host = 5 [default = "local"];</code>
       */
      public Builder setHost(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        host_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string host = 5 [default = "local"];</code>
       */
      public Builder clearHost() {
        bitField0_ = (bitField0_ & ~0x00000010);
        host_ = getDefaultInstance().getHost();
        onChanged();
        return this;
      }
      /**
       * <code>optional string host = 5 [default = "local"];</code>
       */
      public Builder setHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        host_ = value;
        onChanged();
        return this;
      }

      // optional float fs = 6 [default = 1e+08];
      private float fs_ = 1e+08F;
      /**
       * <code>optional float fs = 6 [default = 1e+08];</code>
       */
      public boolean hasFs() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float fs = 6 [default = 1e+08];</code>
       */
      public float getFs() {
        return fs_;
      }
      /**
       * <code>optional float fs = 6 [default = 1e+08];</code>
       */
      public Builder setFs(float value) {
        bitField0_ |= 0x00000020;
        fs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float fs = 6 [default = 1e+08];</code>
       */
      public Builder clearFs() {
        bitField0_ = (bitField0_ & ~0x00000020);
        fs_ = 1e+08F;
        onChanged();
        return this;
      }

      // optional float minRF = 7 [default = 2e+07];
      private float minRF_ = 2e+07F;
      /**
       * <code>optional float minRF = 7 [default = 2e+07];</code>
       */
      public boolean hasMinRF() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float minRF = 7 [default = 2e+07];</code>
       */
      public float getMinRF() {
        return minRF_;
      }
      /**
       * <code>optional float minRF = 7 [default = 2e+07];</code>
       */
      public Builder setMinRF(float value) {
        bitField0_ |= 0x00000040;
        minRF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float minRF = 7 [default = 2e+07];</code>
       */
      public Builder clearMinRF() {
        bitField0_ = (bitField0_ & ~0x00000040);
        minRF_ = 2e+07F;
        onChanged();
        return this;
      }

      // optional float maxRF = 8 [default = 3e+09];
      private float maxRF_ = 3e+09F;
      /**
       * <code>optional float maxRF = 8 [default = 3e+09];</code>
       */
      public boolean hasMaxRF() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float maxRF = 8 [default = 3e+09];</code>
       */
      public float getMaxRF() {
        return maxRF_;
      }
      /**
       * <code>optional float maxRF = 8 [default = 3e+09];</code>
       */
      public Builder setMaxRF(float value) {
        bitField0_ |= 0x00000080;
        maxRF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxRF = 8 [default = 3e+09];</code>
       */
      public Builder clearMaxRF() {
        bitField0_ = (bitField0_ & ~0x00000080);
        maxRF_ = 3e+09F;
        onChanged();
        return this;
      }

      // optional string uniqRXID = 9 [default = "999"];
      private java.lang.Object uniqRXID_ = "999";
      /**
       * <code>optional string uniqRXID = 9 [default = "999"];</code>
       */
      public boolean hasUniqRXID() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string uniqRXID = 9 [default = "999"];</code>
       */
      public java.lang.String getUniqRXID() {
        java.lang.Object ref = uniqRXID_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uniqRXID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uniqRXID = 9 [default = "999"];</code>
       */
      public com.google.protobuf.ByteString
          getUniqRXIDBytes() {
        java.lang.Object ref = uniqRXID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uniqRXID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uniqRXID = 9 [default = "999"];</code>
       */
      public Builder setUniqRXID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        uniqRXID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uniqRXID = 9 [default = "999"];</code>
       */
      public Builder clearUniqRXID() {
        bitField0_ = (bitField0_ & ~0x00000100);
        uniqRXID_ = getDefaultInstance().getUniqRXID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uniqRXID = 9 [default = "999"];</code>
       */
      public Builder setUniqRXIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        uniqRXID_ = value;
        onChanged();
        return this;
      }

      // optional int32 pair = 10;
      private int pair_ ;
      /**
       * <code>optional int32 pair = 10;</code>
       */
      public boolean hasPair() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 pair = 10;</code>
       */
      public int getPair() {
        return pair_;
      }
      /**
       * <code>optional int32 pair = 10;</code>
       */
      public Builder setPair(int value) {
        bitField0_ |= 0x00000200;
        pair_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pair = 10;</code>
       */
      public Builder clearPair() {
        bitField0_ = (bitField0_ & ~0x00000200);
        pair_ = 0;
        onChanged();
        return this;
      }

      // optional int32 testDur = 11;
      private int testDur_ ;
      /**
       * <code>optional int32 testDur = 11;</code>
       */
      public boolean hasTestDur() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 testDur = 11;</code>
       */
      public int getTestDur() {
        return testDur_;
      }
      /**
       * <code>optional int32 testDur = 11;</code>
       */
      public Builder setTestDur(int value) {
        bitField0_ |= 0x00000400;
        testDur_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 testDur = 11;</code>
       */
      public Builder clearTestDur() {
        bitField0_ = (bitField0_ & ~0x00000400);
        testDur_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.DummyRcvConfig)
    }

    static {
      defaultInstance = new DummyRcvConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.DummyRcvConfig)
  }

  public interface PICConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "PIC_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "PIC_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "PIC_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "PIC_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional int32 channel = 2;
    /**
     * <code>optional int32 channel = 2;</code>
     */
    boolean hasChannel();
    /**
     * <code>optional int32 channel = 2;</code>
     */
    int getChannel();

    // optional int32 baseAux = 3;
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    boolean hasBaseAux();
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    int getBaseAux();

    // optional string rx = 4;
    /**
     * <code>optional string rx = 4;</code>
     */
    boolean hasRx();
    /**
     * <code>optional string rx = 4;</code>
     */
    java.lang.String getRx();
    /**
     * <code>optional string rx = 4;</code>
     */
    com.google.protobuf.ByteString
        getRxBytes();

    // optional string pic = 5;
    /**
     * <code>optional string pic = 5;</code>
     */
    boolean hasPic();
    /**
     * <code>optional string pic = 5;</code>
     */
    java.lang.String getPic();
    /**
     * <code>optional string pic = 5;</code>
     */
    com.google.protobuf.ByteString
        getPicBytes();

    // optional string picflags = 6;
    /**
     * <code>optional string picflags = 6;</code>
     */
    boolean hasPicflags();
    /**
     * <code>optional string picflags = 6;</code>
     */
    java.lang.String getPicflags();
    /**
     * <code>optional string picflags = 6;</code>
     */
    com.google.protobuf.ByteString
        getPicflagsBytes();

    // optional string picside = 7;
    /**
     * <code>optional string picside = 7;</code>
     */
    boolean hasPicside();
    /**
     * <code>optional string picside = 7;</code>
     */
    java.lang.String getPicside();
    /**
     * <code>optional string picside = 7;</code>
     */
    com.google.protobuf.ByteString
        getPicsideBytes();

    // optional string host = 8 [default = "local"];
    /**
     * <code>optional string host = 8 [default = "local"];</code>
     */
    boolean hasHost();
    /**
     * <code>optional string host = 8 [default = "local"];</code>
     */
    java.lang.String getHost();
    /**
     * <code>optional string host = 8 [default = "local"];</code>
     */
    com.google.protobuf.ByteString
        getHostBytes();

    // optional float fs = 9 [default = 1e+08];
    /**
     * <code>optional float fs = 9 [default = 1e+08];</code>
     */
    boolean hasFs();
    /**
     * <code>optional float fs = 9 [default = 1e+08];</code>
     */
    float getFs();

    // optional float minRF = 10 [default = 2e+07];
    /**
     * <code>optional float minRF = 10 [default = 2e+07];</code>
     */
    boolean hasMinRF();
    /**
     * <code>optional float minRF = 10 [default = 2e+07];</code>
     */
    float getMinRF();

    // optional float maxRF = 11 [default = 3e+09];
    /**
     * <code>optional float maxRF = 11 [default = 3e+09];</code>
     */
    boolean hasMaxRF();
    /**
     * <code>optional float maxRF = 11 [default = 3e+09];</code>
     */
    float getMaxRF();

    // optional string uniqRXID = 12 [default = "999"];
    /**
     * <code>optional string uniqRXID = 12 [default = "999"];</code>
     */
    boolean hasUniqRXID();
    /**
     * <code>optional string uniqRXID = 12 [default = "999"];</code>
     */
    java.lang.String getUniqRXID();
    /**
     * <code>optional string uniqRXID = 12 [default = "999"];</code>
     */
    com.google.protobuf.ByteString
        getUniqRXIDBytes();

    // optional int32 pair = 13;
    /**
     * <code>optional int32 pair = 13;</code>
     */
    boolean hasPair();
    /**
     * <code>optional int32 pair = 13;</code>
     */
    int getPair();

    // optional int32 testDur = 14;
    /**
     * <code>optional int32 testDur = 14;</code>
     */
    boolean hasTestDur();
    /**
     * <code>optional int32 testDur = 14;</code>
     */
    int getTestDur();
  }
  /**
   * Protobuf type {@code falcon_res_msg.PICConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the PIC resource.  These are populated
   * by ResourcePIC.configureMessage() and from resources.xml.
   *
   * msgName: PIC_CONFIG, used to identify the message
   * channel: Channel number to use (legacy)
   * baseAux: Aux number used as the base for the channel
   * rx: Receiver string (e.g. RX1 or RX2)
   * pic: PIC input to use (e.g. PICIN1)
   * picflags: Flags to send the sourcepic primitive
   * picside: Receiver on the PIC to use (e.g. A or B)
   * host: Hostname to use for the receiver
   * fs: Sample rate of the receiver
   * minRF: Minimum RF used for receiving
   * maxRF: Maximum RF used for receiving
   * uniqRXID: Set to 999 to lookup, or channel number to use
   * </pre>
   */
  public static final class PICConfig extends
      com.google.protobuf.GeneratedMessage
      implements PICConfigOrBuilder {
    // Use PICConfig.newBuilder() to construct.
    private PICConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PICConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PICConfig defaultInstance;
    public static PICConfig getDefaultInstance() {
      return defaultInstance;
    }

    public PICConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PICConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              channel_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              baseAux_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              rx_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              pic_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              picflags_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              picside_ = input.readBytes();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              host_ = input.readBytes();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              fs_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              minRF_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              maxRF_ = input.readFloat();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000800;
              uniqRXID_ = input.readBytes();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              pair_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              testDur_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_PICConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_PICConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.PICConfig.class, fv.protos.kepsvisor.FalconResourceMessages.PICConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<PICConfig> PARSER =
        new com.google.protobuf.AbstractParser<PICConfig>() {
      public PICConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PICConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PICConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "PIC_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "PIC_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "PIC_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "PIC_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 channel = 2;
    public static final int CHANNEL_FIELD_NUMBER = 2;
    private int channel_;
    /**
     * <code>optional int32 channel = 2;</code>
     */
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 channel = 2;</code>
     */
    public int getChannel() {
      return channel_;
    }

    // optional int32 baseAux = 3;
    public static final int BASEAUX_FIELD_NUMBER = 3;
    private int baseAux_;
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    public boolean hasBaseAux() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    public int getBaseAux() {
      return baseAux_;
    }

    // optional string rx = 4;
    public static final int RX_FIELD_NUMBER = 4;
    private java.lang.Object rx_;
    /**
     * <code>optional string rx = 4;</code>
     */
    public boolean hasRx() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string rx = 4;</code>
     */
    public java.lang.String getRx() {
      java.lang.Object ref = rx_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          rx_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string rx = 4;</code>
     */
    public com.google.protobuf.ByteString
        getRxBytes() {
      java.lang.Object ref = rx_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rx_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string pic = 5;
    public static final int PIC_FIELD_NUMBER = 5;
    private java.lang.Object pic_;
    /**
     * <code>optional string pic = 5;</code>
     */
    public boolean hasPic() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string pic = 5;</code>
     */
    public java.lang.String getPic() {
      java.lang.Object ref = pic_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pic_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pic = 5;</code>
     */
    public com.google.protobuf.ByteString
        getPicBytes() {
      java.lang.Object ref = pic_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string picflags = 6;
    public static final int PICFLAGS_FIELD_NUMBER = 6;
    private java.lang.Object picflags_;
    /**
     * <code>optional string picflags = 6;</code>
     */
    public boolean hasPicflags() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string picflags = 6;</code>
     */
    public java.lang.String getPicflags() {
      java.lang.Object ref = picflags_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          picflags_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string picflags = 6;</code>
     */
    public com.google.protobuf.ByteString
        getPicflagsBytes() {
      java.lang.Object ref = picflags_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        picflags_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string picside = 7;
    public static final int PICSIDE_FIELD_NUMBER = 7;
    private java.lang.Object picside_;
    /**
     * <code>optional string picside = 7;</code>
     */
    public boolean hasPicside() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string picside = 7;</code>
     */
    public java.lang.String getPicside() {
      java.lang.Object ref = picside_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          picside_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string picside = 7;</code>
     */
    public com.google.protobuf.ByteString
        getPicsideBytes() {
      java.lang.Object ref = picside_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        picside_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string host = 8 [default = "local"];
    public static final int HOST_FIELD_NUMBER = 8;
    private java.lang.Object host_;
    /**
     * <code>optional string host = 8 [default = "local"];</code>
     */
    public boolean hasHost() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string host = 8 [default = "local"];</code>
     */
    public java.lang.String getHost() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          host_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string host = 8 [default = "local"];</code>
     */
    public com.google.protobuf.ByteString
        getHostBytes() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        host_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional float fs = 9 [default = 1e+08];
    public static final int FS_FIELD_NUMBER = 9;
    private float fs_;
    /**
     * <code>optional float fs = 9 [default = 1e+08];</code>
     */
    public boolean hasFs() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float fs = 9 [default = 1e+08];</code>
     */
    public float getFs() {
      return fs_;
    }

    // optional float minRF = 10 [default = 2e+07];
    public static final int MINRF_FIELD_NUMBER = 10;
    private float minRF_;
    /**
     * <code>optional float minRF = 10 [default = 2e+07];</code>
     */
    public boolean hasMinRF() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float minRF = 10 [default = 2e+07];</code>
     */
    public float getMinRF() {
      return minRF_;
    }

    // optional float maxRF = 11 [default = 3e+09];
    public static final int MAXRF_FIELD_NUMBER = 11;
    private float maxRF_;
    /**
     * <code>optional float maxRF = 11 [default = 3e+09];</code>
     */
    public boolean hasMaxRF() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional float maxRF = 11 [default = 3e+09];</code>
     */
    public float getMaxRF() {
      return maxRF_;
    }

    // optional string uniqRXID = 12 [default = "999"];
    public static final int UNIQRXID_FIELD_NUMBER = 12;
    private java.lang.Object uniqRXID_;
    /**
     * <code>optional string uniqRXID = 12 [default = "999"];</code>
     */
    public boolean hasUniqRXID() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string uniqRXID = 12 [default = "999"];</code>
     */
    public java.lang.String getUniqRXID() {
      java.lang.Object ref = uniqRXID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uniqRXID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uniqRXID = 12 [default = "999"];</code>
     */
    public com.google.protobuf.ByteString
        getUniqRXIDBytes() {
      java.lang.Object ref = uniqRXID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uniqRXID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 pair = 13;
    public static final int PAIR_FIELD_NUMBER = 13;
    private int pair_;
    /**
     * <code>optional int32 pair = 13;</code>
     */
    public boolean hasPair() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 pair = 13;</code>
     */
    public int getPair() {
      return pair_;
    }

    // optional int32 testDur = 14;
    public static final int TESTDUR_FIELD_NUMBER = 14;
    private int testDur_;
    /**
     * <code>optional int32 testDur = 14;</code>
     */
    public boolean hasTestDur() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 testDur = 14;</code>
     */
    public int getTestDur() {
      return testDur_;
    }

    private void initFields() {
      msgName_ = "PIC_CONFIG";
      channel_ = 0;
      baseAux_ = 0;
      rx_ = "";
      pic_ = "";
      picflags_ = "";
      picside_ = "";
      host_ = "local";
      fs_ = 1e+08F;
      minRF_ = 2e+07F;
      maxRF_ = 3e+09F;
      uniqRXID_ = "999";
      pair_ = 0;
      testDur_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, baseAux_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getRxBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getPicBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getPicflagsBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getPicsideBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getHostBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, fs_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, minRF_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, maxRF_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getUniqRXIDBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, pair_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, testDur_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, baseAux_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getRxBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getPicBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getPicflagsBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getPicsideBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getHostBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, fs_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, minRF_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, maxRF_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getUniqRXIDBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, pair_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, testDur_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.PICConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.PICConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.PICConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.PICConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.PICConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.PICConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.PICConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.PICConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.PICConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.PICConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.PICConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.PICConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the PIC resource.  These are populated
     * by ResourcePIC.configureMessage() and from resources.xml.
     *
     * msgName: PIC_CONFIG, used to identify the message
     * channel: Channel number to use (legacy)
     * baseAux: Aux number used as the base for the channel
     * rx: Receiver string (e.g. RX1 or RX2)
     * pic: PIC input to use (e.g. PICIN1)
     * picflags: Flags to send the sourcepic primitive
     * picside: Receiver on the PIC to use (e.g. A or B)
     * host: Hostname to use for the receiver
     * fs: Sample rate of the receiver
     * minRF: Minimum RF used for receiving
     * maxRF: Maximum RF used for receiving
     * uniqRXID: Set to 999 to lookup, or channel number to use
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.PICConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_PICConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_PICConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.PICConfig.class, fv.protos.kepsvisor.FalconResourceMessages.PICConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.PICConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "PIC_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        channel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        baseAux_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        rx_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        pic_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        picflags_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        picside_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        host_ = "local";
        bitField0_ = (bitField0_ & ~0x00000080);
        fs_ = 1e+08F;
        bitField0_ = (bitField0_ & ~0x00000100);
        minRF_ = 2e+07F;
        bitField0_ = (bitField0_ & ~0x00000200);
        maxRF_ = 3e+09F;
        bitField0_ = (bitField0_ & ~0x00000400);
        uniqRXID_ = "999";
        bitField0_ = (bitField0_ & ~0x00000800);
        pair_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        testDur_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_PICConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.PICConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.PICConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.PICConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.PICConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.PICConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.PICConfig result = new fv.protos.kepsvisor.FalconResourceMessages.PICConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.baseAux_ = baseAux_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rx_ = rx_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.pic_ = pic_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.picflags_ = picflags_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.picside_ = picside_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.host_ = host_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.fs_ = fs_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.minRF_ = minRF_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.maxRF_ = maxRF_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.uniqRXID_ = uniqRXID_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.pair_ = pair_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.testDur_ = testDur_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.PICConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.PICConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.PICConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.PICConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        if (other.hasBaseAux()) {
          setBaseAux(other.getBaseAux());
        }
        if (other.hasRx()) {
          bitField0_ |= 0x00000008;
          rx_ = other.rx_;
          onChanged();
        }
        if (other.hasPic()) {
          bitField0_ |= 0x00000010;
          pic_ = other.pic_;
          onChanged();
        }
        if (other.hasPicflags()) {
          bitField0_ |= 0x00000020;
          picflags_ = other.picflags_;
          onChanged();
        }
        if (other.hasPicside()) {
          bitField0_ |= 0x00000040;
          picside_ = other.picside_;
          onChanged();
        }
        if (other.hasHost()) {
          bitField0_ |= 0x00000080;
          host_ = other.host_;
          onChanged();
        }
        if (other.hasFs()) {
          setFs(other.getFs());
        }
        if (other.hasMinRF()) {
          setMinRF(other.getMinRF());
        }
        if (other.hasMaxRF()) {
          setMaxRF(other.getMaxRF());
        }
        if (other.hasUniqRXID()) {
          bitField0_ |= 0x00000800;
          uniqRXID_ = other.uniqRXID_;
          onChanged();
        }
        if (other.hasPair()) {
          setPair(other.getPair());
        }
        if (other.hasTestDur()) {
          setTestDur(other.getTestDur());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.PICConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.PICConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "PIC_CONFIG"];
      private java.lang.Object msgName_ = "PIC_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "PIC_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "PIC_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "PIC_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "PIC_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "PIC_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "PIC_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional int32 channel = 2;
      private int channel_ ;
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public int getChannel() {
        return channel_;
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public Builder setChannel(int value) {
        bitField0_ |= 0x00000002;
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channel_ = 0;
        onChanged();
        return this;
      }

      // optional int32 baseAux = 3;
      private int baseAux_ ;
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public boolean hasBaseAux() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public int getBaseAux() {
        return baseAux_;
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public Builder setBaseAux(int value) {
        bitField0_ |= 0x00000004;
        baseAux_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public Builder clearBaseAux() {
        bitField0_ = (bitField0_ & ~0x00000004);
        baseAux_ = 0;
        onChanged();
        return this;
      }

      // optional string rx = 4;
      private java.lang.Object rx_ = "";
      /**
       * <code>optional string rx = 4;</code>
       */
      public boolean hasRx() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string rx = 4;</code>
       */
      public java.lang.String getRx() {
        java.lang.Object ref = rx_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          rx_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string rx = 4;</code>
       */
      public com.google.protobuf.ByteString
          getRxBytes() {
        java.lang.Object ref = rx_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rx_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string rx = 4;</code>
       */
      public Builder setRx(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        rx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string rx = 4;</code>
       */
      public Builder clearRx() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rx_ = getDefaultInstance().getRx();
        onChanged();
        return this;
      }
      /**
       * <code>optional string rx = 4;</code>
       */
      public Builder setRxBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        rx_ = value;
        onChanged();
        return this;
      }

      // optional string pic = 5;
      private java.lang.Object pic_ = "";
      /**
       * <code>optional string pic = 5;</code>
       */
      public boolean hasPic() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string pic = 5;</code>
       */
      public java.lang.String getPic() {
        java.lang.Object ref = pic_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          pic_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pic = 5;</code>
       */
      public com.google.protobuf.ByteString
          getPicBytes() {
        java.lang.Object ref = pic_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pic_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pic = 5;</code>
       */
      public Builder setPic(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        pic_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string pic = 5;</code>
       */
      public Builder clearPic() {
        bitField0_ = (bitField0_ & ~0x00000010);
        pic_ = getDefaultInstance().getPic();
        onChanged();
        return this;
      }
      /**
       * <code>optional string pic = 5;</code>
       */
      public Builder setPicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        pic_ = value;
        onChanged();
        return this;
      }

      // optional string picflags = 6;
      private java.lang.Object picflags_ = "";
      /**
       * <code>optional string picflags = 6;</code>
       */
      public boolean hasPicflags() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string picflags = 6;</code>
       */
      public java.lang.String getPicflags() {
        java.lang.Object ref = picflags_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          picflags_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string picflags = 6;</code>
       */
      public com.google.protobuf.ByteString
          getPicflagsBytes() {
        java.lang.Object ref = picflags_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          picflags_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string picflags = 6;</code>
       */
      public Builder setPicflags(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        picflags_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string picflags = 6;</code>
       */
      public Builder clearPicflags() {
        bitField0_ = (bitField0_ & ~0x00000020);
        picflags_ = getDefaultInstance().getPicflags();
        onChanged();
        return this;
      }
      /**
       * <code>optional string picflags = 6;</code>
       */
      public Builder setPicflagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        picflags_ = value;
        onChanged();
        return this;
      }

      // optional string picside = 7;
      private java.lang.Object picside_ = "";
      /**
       * <code>optional string picside = 7;</code>
       */
      public boolean hasPicside() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string picside = 7;</code>
       */
      public java.lang.String getPicside() {
        java.lang.Object ref = picside_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          picside_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string picside = 7;</code>
       */
      public com.google.protobuf.ByteString
          getPicsideBytes() {
        java.lang.Object ref = picside_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          picside_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string picside = 7;</code>
       */
      public Builder setPicside(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        picside_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string picside = 7;</code>
       */
      public Builder clearPicside() {
        bitField0_ = (bitField0_ & ~0x00000040);
        picside_ = getDefaultInstance().getPicside();
        onChanged();
        return this;
      }
      /**
       * <code>optional string picside = 7;</code>
       */
      public Builder setPicsideBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        picside_ = value;
        onChanged();
        return this;
      }

      // optional string host = 8 [default = "local"];
      private java.lang.Object host_ = "local";
      /**
       * <code>optional string host = 8 [default = "local"];</code>
       */
      public boolean hasHost() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string host = 8 [default = "local"];</code>
       */
      public java.lang.String getHost() {
        java.lang.Object ref = host_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          host_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string host = 8 [default = "local"];</code>
       */
      public com.google.protobuf.ByteString
          getHostBytes() {
        java.lang.Object ref = host_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          host_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string host = 8 [default = "local"];</code>
       */
      public Builder setHost(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        host_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string host = 8 [default = "local"];</code>
       */
      public Builder clearHost() {
        bitField0_ = (bitField0_ & ~0x00000080);
        host_ = getDefaultInstance().getHost();
        onChanged();
        return this;
      }
      /**
       * <code>optional string host = 8 [default = "local"];</code>
       */
      public Builder setHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        host_ = value;
        onChanged();
        return this;
      }

      // optional float fs = 9 [default = 1e+08];
      private float fs_ = 1e+08F;
      /**
       * <code>optional float fs = 9 [default = 1e+08];</code>
       */
      public boolean hasFs() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float fs = 9 [default = 1e+08];</code>
       */
      public float getFs() {
        return fs_;
      }
      /**
       * <code>optional float fs = 9 [default = 1e+08];</code>
       */
      public Builder setFs(float value) {
        bitField0_ |= 0x00000100;
        fs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float fs = 9 [default = 1e+08];</code>
       */
      public Builder clearFs() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fs_ = 1e+08F;
        onChanged();
        return this;
      }

      // optional float minRF = 10 [default = 2e+07];
      private float minRF_ = 2e+07F;
      /**
       * <code>optional float minRF = 10 [default = 2e+07];</code>
       */
      public boolean hasMinRF() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float minRF = 10 [default = 2e+07];</code>
       */
      public float getMinRF() {
        return minRF_;
      }
      /**
       * <code>optional float minRF = 10 [default = 2e+07];</code>
       */
      public Builder setMinRF(float value) {
        bitField0_ |= 0x00000200;
        minRF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float minRF = 10 [default = 2e+07];</code>
       */
      public Builder clearMinRF() {
        bitField0_ = (bitField0_ & ~0x00000200);
        minRF_ = 2e+07F;
        onChanged();
        return this;
      }

      // optional float maxRF = 11 [default = 3e+09];
      private float maxRF_ = 3e+09F;
      /**
       * <code>optional float maxRF = 11 [default = 3e+09];</code>
       */
      public boolean hasMaxRF() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional float maxRF = 11 [default = 3e+09];</code>
       */
      public float getMaxRF() {
        return maxRF_;
      }
      /**
       * <code>optional float maxRF = 11 [default = 3e+09];</code>
       */
      public Builder setMaxRF(float value) {
        bitField0_ |= 0x00000400;
        maxRF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxRF = 11 [default = 3e+09];</code>
       */
      public Builder clearMaxRF() {
        bitField0_ = (bitField0_ & ~0x00000400);
        maxRF_ = 3e+09F;
        onChanged();
        return this;
      }

      // optional string uniqRXID = 12 [default = "999"];
      private java.lang.Object uniqRXID_ = "999";
      /**
       * <code>optional string uniqRXID = 12 [default = "999"];</code>
       */
      public boolean hasUniqRXID() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string uniqRXID = 12 [default = "999"];</code>
       */
      public java.lang.String getUniqRXID() {
        java.lang.Object ref = uniqRXID_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uniqRXID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uniqRXID = 12 [default = "999"];</code>
       */
      public com.google.protobuf.ByteString
          getUniqRXIDBytes() {
        java.lang.Object ref = uniqRXID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uniqRXID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uniqRXID = 12 [default = "999"];</code>
       */
      public Builder setUniqRXID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        uniqRXID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uniqRXID = 12 [default = "999"];</code>
       */
      public Builder clearUniqRXID() {
        bitField0_ = (bitField0_ & ~0x00000800);
        uniqRXID_ = getDefaultInstance().getUniqRXID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uniqRXID = 12 [default = "999"];</code>
       */
      public Builder setUniqRXIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        uniqRXID_ = value;
        onChanged();
        return this;
      }

      // optional int32 pair = 13;
      private int pair_ ;
      /**
       * <code>optional int32 pair = 13;</code>
       */
      public boolean hasPair() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 pair = 13;</code>
       */
      public int getPair() {
        return pair_;
      }
      /**
       * <code>optional int32 pair = 13;</code>
       */
      public Builder setPair(int value) {
        bitField0_ |= 0x00001000;
        pair_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pair = 13;</code>
       */
      public Builder clearPair() {
        bitField0_ = (bitField0_ & ~0x00001000);
        pair_ = 0;
        onChanged();
        return this;
      }

      // optional int32 testDur = 14;
      private int testDur_ ;
      /**
       * <code>optional int32 testDur = 14;</code>
       */
      public boolean hasTestDur() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 testDur = 14;</code>
       */
      public int getTestDur() {
        return testDur_;
      }
      /**
       * <code>optional int32 testDur = 14;</code>
       */
      public Builder setTestDur(int value) {
        bitField0_ |= 0x00002000;
        testDur_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 testDur = 14;</code>
       */
      public Builder clearTestDur() {
        bitField0_ = (bitField0_ & ~0x00002000);
        testDur_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.PICConfig)
    }

    static {
      defaultInstance = new PICConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.PICConfig)
  }

  public interface MMSConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "MMS_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "MMS_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "MMS_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "MMS_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional int32 channel = 2;
    /**
     * <code>optional int32 channel = 2;</code>
     */
    boolean hasChannel();
    /**
     * <code>optional int32 channel = 2;</code>
     */
    int getChannel();

    // optional int32 baseAux = 3;
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    boolean hasBaseAux();
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    int getBaseAux();

    // optional string IP = 4;
    /**
     * <code>optional string IP = 4;</code>
     */
    boolean hasIP();
    /**
     * <code>optional string IP = 4;</code>
     */
    java.lang.String getIP();
    /**
     * <code>optional string IP = 4;</code>
     */
    com.google.protobuf.ByteString
        getIPBytes();

    // optional int32 controlPort = 5;
    /**
     * <code>optional int32 controlPort = 5;</code>
     */
    boolean hasControlPort();
    /**
     * <code>optional int32 controlPort = 5;</code>
     */
    int getControlPort();

    // optional int32 dataPort = 6;
    /**
     * <code>optional int32 dataPort = 6;</code>
     */
    boolean hasDataPort();
    /**
     * <code>optional int32 dataPort = 6;</code>
     */
    int getDataPort();

    // optional string interfaceIP = 7;
    /**
     * <code>optional string interfaceIP = 7;</code>
     */
    boolean hasInterfaceIP();
    /**
     * <code>optional string interfaceIP = 7;</code>
     */
    java.lang.String getInterfaceIP();
    /**
     * <code>optional string interfaceIP = 7;</code>
     */
    com.google.protobuf.ByteString
        getInterfaceIPBytes();

    // optional int32 receiver = 8;
    /**
     * <code>optional int32 receiver = 8;</code>
     */
    boolean hasReceiver();
    /**
     * <code>optional int32 receiver = 8;</code>
     */
    int getReceiver();

    // optional string host = 9 [default = "local"];
    /**
     * <code>optional string host = 9 [default = "local"];</code>
     */
    boolean hasHost();
    /**
     * <code>optional string host = 9 [default = "local"];</code>
     */
    java.lang.String getHost();
    /**
     * <code>optional string host = 9 [default = "local"];</code>
     */
    com.google.protobuf.ByteString
        getHostBytes();

    // optional float fs = 10 [default = 1e+08];
    /**
     * <code>optional float fs = 10 [default = 1e+08];</code>
     */
    boolean hasFs();
    /**
     * <code>optional float fs = 10 [default = 1e+08];</code>
     */
    float getFs();

    // optional float minRF = 11 [default = 2e+07];
    /**
     * <code>optional float minRF = 11 [default = 2e+07];</code>
     */
    boolean hasMinRF();
    /**
     * <code>optional float minRF = 11 [default = 2e+07];</code>
     */
    float getMinRF();

    // optional float maxRF = 12 [default = 3e+09];
    /**
     * <code>optional float maxRF = 12 [default = 3e+09];</code>
     */
    boolean hasMaxRF();
    /**
     * <code>optional float maxRF = 12 [default = 3e+09];</code>
     */
    float getMaxRF();

    // optional string cal30abw = 13 [default = "mms_30abw.csv"];
    /**
     * <code>optional string cal30abw = 13 [default = "mms_30abw.csv"];</code>
     */
    boolean hasCal30Abw();
    /**
     * <code>optional string cal30abw = 13 [default = "mms_30abw.csv"];</code>
     */
    java.lang.String getCal30Abw();
    /**
     * <code>optional string cal30abw = 13 [default = "mms_30abw.csv"];</code>
     */
    com.google.protobuf.ByteString
        getCal30AbwBytes();

    // optional string cal5abw = 14 [default = "mms_5abw.csv"];
    /**
     * <code>optional string cal5abw = 14 [default = "mms_5abw.csv"];</code>
     */
    boolean hasCal5Abw();
    /**
     * <code>optional string cal5abw = 14 [default = "mms_5abw.csv"];</code>
     */
    java.lang.String getCal5Abw();
    /**
     * <code>optional string cal5abw = 14 [default = "mms_5abw.csv"];</code>
     */
    com.google.protobuf.ByteString
        getCal5AbwBytes();

    // optional string uniqRXID = 15 [default = "999"];
    /**
     * <code>optional string uniqRXID = 15 [default = "999"];</code>
     */
    boolean hasUniqRXID();
    /**
     * <code>optional string uniqRXID = 15 [default = "999"];</code>
     */
    java.lang.String getUniqRXID();
    /**
     * <code>optional string uniqRXID = 15 [default = "999"];</code>
     */
    com.google.protobuf.ByteString
        getUniqRXIDBytes();

    // optional int32 pair = 16;
    /**
     * <code>optional int32 pair = 16;</code>
     */
    boolean hasPair();
    /**
     * <code>optional int32 pair = 16;</code>
     */
    int getPair();

    // optional int32 testDur = 17;
    /**
     * <code>optional int32 testDur = 17;</code>
     */
    boolean hasTestDur();
    /**
     * <code>optional int32 testDur = 17;</code>
     */
    int getTestDur();

    // optional int32 rfcuPort = 18 [default = -1];
    /**
     * <code>optional int32 rfcuPort = 18 [default = -1];</code>
     */
    boolean hasRfcuPort();
    /**
     * <code>optional int32 rfcuPort = 18 [default = -1];</code>
     */
    int getRfcuPort();

    // optional string rfcuIP = 19 [default = ""];
    /**
     * <code>optional string rfcuIP = 19 [default = ""];</code>
     */
    boolean hasRfcuIP();
    /**
     * <code>optional string rfcuIP = 19 [default = ""];</code>
     */
    java.lang.String getRfcuIP();
    /**
     * <code>optional string rfcuIP = 19 [default = ""];</code>
     */
    com.google.protobuf.ByteString
        getRfcuIPBytes();
  }
  /**
   * Protobuf type {@code falcon_res_msg.MMSConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the MMS resource.  These are populated
   * by ResourceMMS.configureMessage() and from resources.xml.
   *
   * msgName: MMS_CONFIG, used to identify the message
   * channel: Channel number to use (legacy)
   * baseAux: Aux number used as the base for the channel
   * IP: IP of the MMS data
   * controlPort: MMS control port number
   * dataPort: MMS data port number
   * interfaceIP: IP to use for the MMS interface
   * receiver: Receiver number to use
   * host: Hostname to use for the receiver
   * fs: Sample rate of the receiver
   * minRF: Minimum RF used for receiving
   * maxRF: Maximum RF used for receiving
   * uniqRXID: Set to 999 to lookup, or channel number to use
   * </pre>
   */
  public static final class MMSConfig extends
      com.google.protobuf.GeneratedMessage
      implements MMSConfigOrBuilder {
    // Use MMSConfig.newBuilder() to construct.
    private MMSConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MMSConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MMSConfig defaultInstance;
    public static MMSConfig getDefaultInstance() {
      return defaultInstance;
    }

    public MMSConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MMSConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              channel_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              baseAux_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              iP_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              controlPort_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              dataPort_ = input.readInt32();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              interfaceIP_ = input.readBytes();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              receiver_ = input.readInt32();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              host_ = input.readBytes();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              fs_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              minRF_ = input.readFloat();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              maxRF_ = input.readFloat();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              cal30Abw_ = input.readBytes();
              break;
            }
            case 114: {
              bitField0_ |= 0x00002000;
              cal5Abw_ = input.readBytes();
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              uniqRXID_ = input.readBytes();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              pair_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              testDur_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              rfcuPort_ = input.readInt32();
              break;
            }
            case 154: {
              bitField0_ |= 0x00040000;
              rfcuIP_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_MMSConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_MMSConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.MMSConfig.class, fv.protos.kepsvisor.FalconResourceMessages.MMSConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<MMSConfig> PARSER =
        new com.google.protobuf.AbstractParser<MMSConfig>() {
      public MMSConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MMSConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MMSConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "MMS_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "MMS_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "MMS_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "MMS_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 channel = 2;
    public static final int CHANNEL_FIELD_NUMBER = 2;
    private int channel_;
    /**
     * <code>optional int32 channel = 2;</code>
     */
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 channel = 2;</code>
     */
    public int getChannel() {
      return channel_;
    }

    // optional int32 baseAux = 3;
    public static final int BASEAUX_FIELD_NUMBER = 3;
    private int baseAux_;
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    public boolean hasBaseAux() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    public int getBaseAux() {
      return baseAux_;
    }

    // optional string IP = 4;
    public static final int IP_FIELD_NUMBER = 4;
    private java.lang.Object iP_;
    /**
     * <code>optional string IP = 4;</code>
     */
    public boolean hasIP() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string IP = 4;</code>
     */
    public java.lang.String getIP() {
      java.lang.Object ref = iP_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          iP_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string IP = 4;</code>
     */
    public com.google.protobuf.ByteString
        getIPBytes() {
      java.lang.Object ref = iP_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        iP_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 controlPort = 5;
    public static final int CONTROLPORT_FIELD_NUMBER = 5;
    private int controlPort_;
    /**
     * <code>optional int32 controlPort = 5;</code>
     */
    public boolean hasControlPort() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 controlPort = 5;</code>
     */
    public int getControlPort() {
      return controlPort_;
    }

    // optional int32 dataPort = 6;
    public static final int DATAPORT_FIELD_NUMBER = 6;
    private int dataPort_;
    /**
     * <code>optional int32 dataPort = 6;</code>
     */
    public boolean hasDataPort() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 dataPort = 6;</code>
     */
    public int getDataPort() {
      return dataPort_;
    }

    // optional string interfaceIP = 7;
    public static final int INTERFACEIP_FIELD_NUMBER = 7;
    private java.lang.Object interfaceIP_;
    /**
     * <code>optional string interfaceIP = 7;</code>
     */
    public boolean hasInterfaceIP() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string interfaceIP = 7;</code>
     */
    public java.lang.String getInterfaceIP() {
      java.lang.Object ref = interfaceIP_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          interfaceIP_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string interfaceIP = 7;</code>
     */
    public com.google.protobuf.ByteString
        getInterfaceIPBytes() {
      java.lang.Object ref = interfaceIP_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        interfaceIP_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 receiver = 8;
    public static final int RECEIVER_FIELD_NUMBER = 8;
    private int receiver_;
    /**
     * <code>optional int32 receiver = 8;</code>
     */
    public boolean hasReceiver() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 receiver = 8;</code>
     */
    public int getReceiver() {
      return receiver_;
    }

    // optional string host = 9 [default = "local"];
    public static final int HOST_FIELD_NUMBER = 9;
    private java.lang.Object host_;
    /**
     * <code>optional string host = 9 [default = "local"];</code>
     */
    public boolean hasHost() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string host = 9 [default = "local"];</code>
     */
    public java.lang.String getHost() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          host_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string host = 9 [default = "local"];</code>
     */
    public com.google.protobuf.ByteString
        getHostBytes() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        host_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional float fs = 10 [default = 1e+08];
    public static final int FS_FIELD_NUMBER = 10;
    private float fs_;
    /**
     * <code>optional float fs = 10 [default = 1e+08];</code>
     */
    public boolean hasFs() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float fs = 10 [default = 1e+08];</code>
     */
    public float getFs() {
      return fs_;
    }

    // optional float minRF = 11 [default = 2e+07];
    public static final int MINRF_FIELD_NUMBER = 11;
    private float minRF_;
    /**
     * <code>optional float minRF = 11 [default = 2e+07];</code>
     */
    public boolean hasMinRF() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional float minRF = 11 [default = 2e+07];</code>
     */
    public float getMinRF() {
      return minRF_;
    }

    // optional float maxRF = 12 [default = 3e+09];
    public static final int MAXRF_FIELD_NUMBER = 12;
    private float maxRF_;
    /**
     * <code>optional float maxRF = 12 [default = 3e+09];</code>
     */
    public boolean hasMaxRF() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional float maxRF = 12 [default = 3e+09];</code>
     */
    public float getMaxRF() {
      return maxRF_;
    }

    // optional string cal30abw = 13 [default = "mms_30abw.csv"];
    public static final int CAL30ABW_FIELD_NUMBER = 13;
    private java.lang.Object cal30Abw_;
    /**
     * <code>optional string cal30abw = 13 [default = "mms_30abw.csv"];</code>
     */
    public boolean hasCal30Abw() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string cal30abw = 13 [default = "mms_30abw.csv"];</code>
     */
    public java.lang.String getCal30Abw() {
      java.lang.Object ref = cal30Abw_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          cal30Abw_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string cal30abw = 13 [default = "mms_30abw.csv"];</code>
     */
    public com.google.protobuf.ByteString
        getCal30AbwBytes() {
      java.lang.Object ref = cal30Abw_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cal30Abw_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string cal5abw = 14 [default = "mms_5abw.csv"];
    public static final int CAL5ABW_FIELD_NUMBER = 14;
    private java.lang.Object cal5Abw_;
    /**
     * <code>optional string cal5abw = 14 [default = "mms_5abw.csv"];</code>
     */
    public boolean hasCal5Abw() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional string cal5abw = 14 [default = "mms_5abw.csv"];</code>
     */
    public java.lang.String getCal5Abw() {
      java.lang.Object ref = cal5Abw_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          cal5Abw_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string cal5abw = 14 [default = "mms_5abw.csv"];</code>
     */
    public com.google.protobuf.ByteString
        getCal5AbwBytes() {
      java.lang.Object ref = cal5Abw_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cal5Abw_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string uniqRXID = 15 [default = "999"];
    public static final int UNIQRXID_FIELD_NUMBER = 15;
    private java.lang.Object uniqRXID_;
    /**
     * <code>optional string uniqRXID = 15 [default = "999"];</code>
     */
    public boolean hasUniqRXID() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string uniqRXID = 15 [default = "999"];</code>
     */
    public java.lang.String getUniqRXID() {
      java.lang.Object ref = uniqRXID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uniqRXID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uniqRXID = 15 [default = "999"];</code>
     */
    public com.google.protobuf.ByteString
        getUniqRXIDBytes() {
      java.lang.Object ref = uniqRXID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uniqRXID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 pair = 16;
    public static final int PAIR_FIELD_NUMBER = 16;
    private int pair_;
    /**
     * <code>optional int32 pair = 16;</code>
     */
    public boolean hasPair() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 pair = 16;</code>
     */
    public int getPair() {
      return pair_;
    }

    // optional int32 testDur = 17;
    public static final int TESTDUR_FIELD_NUMBER = 17;
    private int testDur_;
    /**
     * <code>optional int32 testDur = 17;</code>
     */
    public boolean hasTestDur() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 testDur = 17;</code>
     */
    public int getTestDur() {
      return testDur_;
    }

    // optional int32 rfcuPort = 18 [default = -1];
    public static final int RFCUPORT_FIELD_NUMBER = 18;
    private int rfcuPort_;
    /**
     * <code>optional int32 rfcuPort = 18 [default = -1];</code>
     */
    public boolean hasRfcuPort() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 rfcuPort = 18 [default = -1];</code>
     */
    public int getRfcuPort() {
      return rfcuPort_;
    }

    // optional string rfcuIP = 19 [default = ""];
    public static final int RFCUIP_FIELD_NUMBER = 19;
    private java.lang.Object rfcuIP_;
    /**
     * <code>optional string rfcuIP = 19 [default = ""];</code>
     */
    public boolean hasRfcuIP() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional string rfcuIP = 19 [default = ""];</code>
     */
    public java.lang.String getRfcuIP() {
      java.lang.Object ref = rfcuIP_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          rfcuIP_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string rfcuIP = 19 [default = ""];</code>
     */
    public com.google.protobuf.ByteString
        getRfcuIPBytes() {
      java.lang.Object ref = rfcuIP_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rfcuIP_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      msgName_ = "MMS_CONFIG";
      channel_ = 0;
      baseAux_ = 0;
      iP_ = "";
      controlPort_ = 0;
      dataPort_ = 0;
      interfaceIP_ = "";
      receiver_ = 0;
      host_ = "local";
      fs_ = 1e+08F;
      minRF_ = 2e+07F;
      maxRF_ = 3e+09F;
      cal30Abw_ = "mms_30abw.csv";
      cal5Abw_ = "mms_5abw.csv";
      uniqRXID_ = "999";
      pair_ = 0;
      testDur_ = 0;
      rfcuPort_ = -1;
      rfcuIP_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, baseAux_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getIPBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, controlPort_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, dataPort_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getInterfaceIPBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, receiver_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getHostBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, fs_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, minRF_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(12, maxRF_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, getCal30AbwBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getCal5AbwBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, getUniqRXIDBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, pair_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, testDur_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, rfcuPort_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBytes(19, getRfcuIPBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, baseAux_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getIPBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, controlPort_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, dataPort_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getInterfaceIPBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, receiver_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getHostBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, fs_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, minRF_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, maxRF_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getCal30AbwBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getCal5AbwBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getUniqRXIDBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, pair_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, testDur_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, rfcuPort_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(19, getRfcuIPBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.MMSConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.MMSConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.MMSConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.MMSConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.MMSConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.MMSConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.MMSConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.MMSConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.MMSConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.MMSConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.MMSConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.MMSConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the MMS resource.  These are populated
     * by ResourceMMS.configureMessage() and from resources.xml.
     *
     * msgName: MMS_CONFIG, used to identify the message
     * channel: Channel number to use (legacy)
     * baseAux: Aux number used as the base for the channel
     * IP: IP of the MMS data
     * controlPort: MMS control port number
     * dataPort: MMS data port number
     * interfaceIP: IP to use for the MMS interface
     * receiver: Receiver number to use
     * host: Hostname to use for the receiver
     * fs: Sample rate of the receiver
     * minRF: Minimum RF used for receiving
     * maxRF: Maximum RF used for receiving
     * uniqRXID: Set to 999 to lookup, or channel number to use
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.MMSConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_MMSConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_MMSConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.MMSConfig.class, fv.protos.kepsvisor.FalconResourceMessages.MMSConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.MMSConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "MMS_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        channel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        baseAux_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        iP_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        controlPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        dataPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        interfaceIP_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        receiver_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        host_ = "local";
        bitField0_ = (bitField0_ & ~0x00000100);
        fs_ = 1e+08F;
        bitField0_ = (bitField0_ & ~0x00000200);
        minRF_ = 2e+07F;
        bitField0_ = (bitField0_ & ~0x00000400);
        maxRF_ = 3e+09F;
        bitField0_ = (bitField0_ & ~0x00000800);
        cal30Abw_ = "mms_30abw.csv";
        bitField0_ = (bitField0_ & ~0x00001000);
        cal5Abw_ = "mms_5abw.csv";
        bitField0_ = (bitField0_ & ~0x00002000);
        uniqRXID_ = "999";
        bitField0_ = (bitField0_ & ~0x00004000);
        pair_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        testDur_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        rfcuPort_ = -1;
        bitField0_ = (bitField0_ & ~0x00020000);
        rfcuIP_ = "";
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_MMSConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.MMSConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.MMSConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.MMSConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.MMSConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.MMSConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.MMSConfig result = new fv.protos.kepsvisor.FalconResourceMessages.MMSConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.baseAux_ = baseAux_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.iP_ = iP_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.controlPort_ = controlPort_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.dataPort_ = dataPort_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.interfaceIP_ = interfaceIP_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.receiver_ = receiver_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.host_ = host_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.fs_ = fs_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.minRF_ = minRF_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.maxRF_ = maxRF_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.cal30Abw_ = cal30Abw_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.cal5Abw_ = cal5Abw_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.uniqRXID_ = uniqRXID_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.pair_ = pair_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.testDur_ = testDur_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.rfcuPort_ = rfcuPort_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.rfcuIP_ = rfcuIP_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.MMSConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.MMSConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.MMSConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.MMSConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        if (other.hasBaseAux()) {
          setBaseAux(other.getBaseAux());
        }
        if (other.hasIP()) {
          bitField0_ |= 0x00000008;
          iP_ = other.iP_;
          onChanged();
        }
        if (other.hasControlPort()) {
          setControlPort(other.getControlPort());
        }
        if (other.hasDataPort()) {
          setDataPort(other.getDataPort());
        }
        if (other.hasInterfaceIP()) {
          bitField0_ |= 0x00000040;
          interfaceIP_ = other.interfaceIP_;
          onChanged();
        }
        if (other.hasReceiver()) {
          setReceiver(other.getReceiver());
        }
        if (other.hasHost()) {
          bitField0_ |= 0x00000100;
          host_ = other.host_;
          onChanged();
        }
        if (other.hasFs()) {
          setFs(other.getFs());
        }
        if (other.hasMinRF()) {
          setMinRF(other.getMinRF());
        }
        if (other.hasMaxRF()) {
          setMaxRF(other.getMaxRF());
        }
        if (other.hasCal30Abw()) {
          bitField0_ |= 0x00001000;
          cal30Abw_ = other.cal30Abw_;
          onChanged();
        }
        if (other.hasCal5Abw()) {
          bitField0_ |= 0x00002000;
          cal5Abw_ = other.cal5Abw_;
          onChanged();
        }
        if (other.hasUniqRXID()) {
          bitField0_ |= 0x00004000;
          uniqRXID_ = other.uniqRXID_;
          onChanged();
        }
        if (other.hasPair()) {
          setPair(other.getPair());
        }
        if (other.hasTestDur()) {
          setTestDur(other.getTestDur());
        }
        if (other.hasRfcuPort()) {
          setRfcuPort(other.getRfcuPort());
        }
        if (other.hasRfcuIP()) {
          bitField0_ |= 0x00040000;
          rfcuIP_ = other.rfcuIP_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.MMSConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.MMSConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "MMS_CONFIG"];
      private java.lang.Object msgName_ = "MMS_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "MMS_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "MMS_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "MMS_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "MMS_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "MMS_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "MMS_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional int32 channel = 2;
      private int channel_ ;
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public int getChannel() {
        return channel_;
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public Builder setChannel(int value) {
        bitField0_ |= 0x00000002;
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channel_ = 0;
        onChanged();
        return this;
      }

      // optional int32 baseAux = 3;
      private int baseAux_ ;
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public boolean hasBaseAux() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public int getBaseAux() {
        return baseAux_;
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public Builder setBaseAux(int value) {
        bitField0_ |= 0x00000004;
        baseAux_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public Builder clearBaseAux() {
        bitField0_ = (bitField0_ & ~0x00000004);
        baseAux_ = 0;
        onChanged();
        return this;
      }

      // optional string IP = 4;
      private java.lang.Object iP_ = "";
      /**
       * <code>optional string IP = 4;</code>
       */
      public boolean hasIP() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string IP = 4;</code>
       */
      public java.lang.String getIP() {
        java.lang.Object ref = iP_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          iP_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string IP = 4;</code>
       */
      public com.google.protobuf.ByteString
          getIPBytes() {
        java.lang.Object ref = iP_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          iP_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string IP = 4;</code>
       */
      public Builder setIP(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        iP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string IP = 4;</code>
       */
      public Builder clearIP() {
        bitField0_ = (bitField0_ & ~0x00000008);
        iP_ = getDefaultInstance().getIP();
        onChanged();
        return this;
      }
      /**
       * <code>optional string IP = 4;</code>
       */
      public Builder setIPBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        iP_ = value;
        onChanged();
        return this;
      }

      // optional int32 controlPort = 5;
      private int controlPort_ ;
      /**
       * <code>optional int32 controlPort = 5;</code>
       */
      public boolean hasControlPort() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 controlPort = 5;</code>
       */
      public int getControlPort() {
        return controlPort_;
      }
      /**
       * <code>optional int32 controlPort = 5;</code>
       */
      public Builder setControlPort(int value) {
        bitField0_ |= 0x00000010;
        controlPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 controlPort = 5;</code>
       */
      public Builder clearControlPort() {
        bitField0_ = (bitField0_ & ~0x00000010);
        controlPort_ = 0;
        onChanged();
        return this;
      }

      // optional int32 dataPort = 6;
      private int dataPort_ ;
      /**
       * <code>optional int32 dataPort = 6;</code>
       */
      public boolean hasDataPort() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 dataPort = 6;</code>
       */
      public int getDataPort() {
        return dataPort_;
      }
      /**
       * <code>optional int32 dataPort = 6;</code>
       */
      public Builder setDataPort(int value) {
        bitField0_ |= 0x00000020;
        dataPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dataPort = 6;</code>
       */
      public Builder clearDataPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        dataPort_ = 0;
        onChanged();
        return this;
      }

      // optional string interfaceIP = 7;
      private java.lang.Object interfaceIP_ = "";
      /**
       * <code>optional string interfaceIP = 7;</code>
       */
      public boolean hasInterfaceIP() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string interfaceIP = 7;</code>
       */
      public java.lang.String getInterfaceIP() {
        java.lang.Object ref = interfaceIP_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          interfaceIP_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string interfaceIP = 7;</code>
       */
      public com.google.protobuf.ByteString
          getInterfaceIPBytes() {
        java.lang.Object ref = interfaceIP_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          interfaceIP_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string interfaceIP = 7;</code>
       */
      public Builder setInterfaceIP(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        interfaceIP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string interfaceIP = 7;</code>
       */
      public Builder clearInterfaceIP() {
        bitField0_ = (bitField0_ & ~0x00000040);
        interfaceIP_ = getDefaultInstance().getInterfaceIP();
        onChanged();
        return this;
      }
      /**
       * <code>optional string interfaceIP = 7;</code>
       */
      public Builder setInterfaceIPBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        interfaceIP_ = value;
        onChanged();
        return this;
      }

      // optional int32 receiver = 8;
      private int receiver_ ;
      /**
       * <code>optional int32 receiver = 8;</code>
       */
      public boolean hasReceiver() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 receiver = 8;</code>
       */
      public int getReceiver() {
        return receiver_;
      }
      /**
       * <code>optional int32 receiver = 8;</code>
       */
      public Builder setReceiver(int value) {
        bitField0_ |= 0x00000080;
        receiver_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 receiver = 8;</code>
       */
      public Builder clearReceiver() {
        bitField0_ = (bitField0_ & ~0x00000080);
        receiver_ = 0;
        onChanged();
        return this;
      }

      // optional string host = 9 [default = "local"];
      private java.lang.Object host_ = "local";
      /**
       * <code>optional string host = 9 [default = "local"];</code>
       */
      public boolean hasHost() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string host = 9 [default = "local"];</code>
       */
      public java.lang.String getHost() {
        java.lang.Object ref = host_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          host_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string host = 9 [default = "local"];</code>
       */
      public com.google.protobuf.ByteString
          getHostBytes() {
        java.lang.Object ref = host_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          host_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string host = 9 [default = "local"];</code>
       */
      public Builder setHost(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        host_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string host = 9 [default = "local"];</code>
       */
      public Builder clearHost() {
        bitField0_ = (bitField0_ & ~0x00000100);
        host_ = getDefaultInstance().getHost();
        onChanged();
        return this;
      }
      /**
       * <code>optional string host = 9 [default = "local"];</code>
       */
      public Builder setHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        host_ = value;
        onChanged();
        return this;
      }

      // optional float fs = 10 [default = 1e+08];
      private float fs_ = 1e+08F;
      /**
       * <code>optional float fs = 10 [default = 1e+08];</code>
       */
      public boolean hasFs() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float fs = 10 [default = 1e+08];</code>
       */
      public float getFs() {
        return fs_;
      }
      /**
       * <code>optional float fs = 10 [default = 1e+08];</code>
       */
      public Builder setFs(float value) {
        bitField0_ |= 0x00000200;
        fs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float fs = 10 [default = 1e+08];</code>
       */
      public Builder clearFs() {
        bitField0_ = (bitField0_ & ~0x00000200);
        fs_ = 1e+08F;
        onChanged();
        return this;
      }

      // optional float minRF = 11 [default = 2e+07];
      private float minRF_ = 2e+07F;
      /**
       * <code>optional float minRF = 11 [default = 2e+07];</code>
       */
      public boolean hasMinRF() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional float minRF = 11 [default = 2e+07];</code>
       */
      public float getMinRF() {
        return minRF_;
      }
      /**
       * <code>optional float minRF = 11 [default = 2e+07];</code>
       */
      public Builder setMinRF(float value) {
        bitField0_ |= 0x00000400;
        minRF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float minRF = 11 [default = 2e+07];</code>
       */
      public Builder clearMinRF() {
        bitField0_ = (bitField0_ & ~0x00000400);
        minRF_ = 2e+07F;
        onChanged();
        return this;
      }

      // optional float maxRF = 12 [default = 3e+09];
      private float maxRF_ = 3e+09F;
      /**
       * <code>optional float maxRF = 12 [default = 3e+09];</code>
       */
      public boolean hasMaxRF() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float maxRF = 12 [default = 3e+09];</code>
       */
      public float getMaxRF() {
        return maxRF_;
      }
      /**
       * <code>optional float maxRF = 12 [default = 3e+09];</code>
       */
      public Builder setMaxRF(float value) {
        bitField0_ |= 0x00000800;
        maxRF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxRF = 12 [default = 3e+09];</code>
       */
      public Builder clearMaxRF() {
        bitField0_ = (bitField0_ & ~0x00000800);
        maxRF_ = 3e+09F;
        onChanged();
        return this;
      }

      // optional string cal30abw = 13 [default = "mms_30abw.csv"];
      private java.lang.Object cal30Abw_ = "mms_30abw.csv";
      /**
       * <code>optional string cal30abw = 13 [default = "mms_30abw.csv"];</code>
       */
      public boolean hasCal30Abw() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string cal30abw = 13 [default = "mms_30abw.csv"];</code>
       */
      public java.lang.String getCal30Abw() {
        java.lang.Object ref = cal30Abw_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          cal30Abw_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string cal30abw = 13 [default = "mms_30abw.csv"];</code>
       */
      public com.google.protobuf.ByteString
          getCal30AbwBytes() {
        java.lang.Object ref = cal30Abw_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cal30Abw_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string cal30abw = 13 [default = "mms_30abw.csv"];</code>
       */
      public Builder setCal30Abw(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        cal30Abw_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string cal30abw = 13 [default = "mms_30abw.csv"];</code>
       */
      public Builder clearCal30Abw() {
        bitField0_ = (bitField0_ & ~0x00001000);
        cal30Abw_ = getDefaultInstance().getCal30Abw();
        onChanged();
        return this;
      }
      /**
       * <code>optional string cal30abw = 13 [default = "mms_30abw.csv"];</code>
       */
      public Builder setCal30AbwBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        cal30Abw_ = value;
        onChanged();
        return this;
      }

      // optional string cal5abw = 14 [default = "mms_5abw.csv"];
      private java.lang.Object cal5Abw_ = "mms_5abw.csv";
      /**
       * <code>optional string cal5abw = 14 [default = "mms_5abw.csv"];</code>
       */
      public boolean hasCal5Abw() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string cal5abw = 14 [default = "mms_5abw.csv"];</code>
       */
      public java.lang.String getCal5Abw() {
        java.lang.Object ref = cal5Abw_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          cal5Abw_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string cal5abw = 14 [default = "mms_5abw.csv"];</code>
       */
      public com.google.protobuf.ByteString
          getCal5AbwBytes() {
        java.lang.Object ref = cal5Abw_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cal5Abw_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string cal5abw = 14 [default = "mms_5abw.csv"];</code>
       */
      public Builder setCal5Abw(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        cal5Abw_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string cal5abw = 14 [default = "mms_5abw.csv"];</code>
       */
      public Builder clearCal5Abw() {
        bitField0_ = (bitField0_ & ~0x00002000);
        cal5Abw_ = getDefaultInstance().getCal5Abw();
        onChanged();
        return this;
      }
      /**
       * <code>optional string cal5abw = 14 [default = "mms_5abw.csv"];</code>
       */
      public Builder setCal5AbwBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        cal5Abw_ = value;
        onChanged();
        return this;
      }

      // optional string uniqRXID = 15 [default = "999"];
      private java.lang.Object uniqRXID_ = "999";
      /**
       * <code>optional string uniqRXID = 15 [default = "999"];</code>
       */
      public boolean hasUniqRXID() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional string uniqRXID = 15 [default = "999"];</code>
       */
      public java.lang.String getUniqRXID() {
        java.lang.Object ref = uniqRXID_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uniqRXID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uniqRXID = 15 [default = "999"];</code>
       */
      public com.google.protobuf.ByteString
          getUniqRXIDBytes() {
        java.lang.Object ref = uniqRXID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uniqRXID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uniqRXID = 15 [default = "999"];</code>
       */
      public Builder setUniqRXID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        uniqRXID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uniqRXID = 15 [default = "999"];</code>
       */
      public Builder clearUniqRXID() {
        bitField0_ = (bitField0_ & ~0x00004000);
        uniqRXID_ = getDefaultInstance().getUniqRXID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uniqRXID = 15 [default = "999"];</code>
       */
      public Builder setUniqRXIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        uniqRXID_ = value;
        onChanged();
        return this;
      }

      // optional int32 pair = 16;
      private int pair_ ;
      /**
       * <code>optional int32 pair = 16;</code>
       */
      public boolean hasPair() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 pair = 16;</code>
       */
      public int getPair() {
        return pair_;
      }
      /**
       * <code>optional int32 pair = 16;</code>
       */
      public Builder setPair(int value) {
        bitField0_ |= 0x00008000;
        pair_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pair = 16;</code>
       */
      public Builder clearPair() {
        bitField0_ = (bitField0_ & ~0x00008000);
        pair_ = 0;
        onChanged();
        return this;
      }

      // optional int32 testDur = 17;
      private int testDur_ ;
      /**
       * <code>optional int32 testDur = 17;</code>
       */
      public boolean hasTestDur() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 testDur = 17;</code>
       */
      public int getTestDur() {
        return testDur_;
      }
      /**
       * <code>optional int32 testDur = 17;</code>
       */
      public Builder setTestDur(int value) {
        bitField0_ |= 0x00010000;
        testDur_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 testDur = 17;</code>
       */
      public Builder clearTestDur() {
        bitField0_ = (bitField0_ & ~0x00010000);
        testDur_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rfcuPort = 18 [default = -1];
      private int rfcuPort_ = -1;
      /**
       * <code>optional int32 rfcuPort = 18 [default = -1];</code>
       */
      public boolean hasRfcuPort() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 rfcuPort = 18 [default = -1];</code>
       */
      public int getRfcuPort() {
        return rfcuPort_;
      }
      /**
       * <code>optional int32 rfcuPort = 18 [default = -1];</code>
       */
      public Builder setRfcuPort(int value) {
        bitField0_ |= 0x00020000;
        rfcuPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rfcuPort = 18 [default = -1];</code>
       */
      public Builder clearRfcuPort() {
        bitField0_ = (bitField0_ & ~0x00020000);
        rfcuPort_ = -1;
        onChanged();
        return this;
      }

      // optional string rfcuIP = 19 [default = ""];
      private java.lang.Object rfcuIP_ = "";
      /**
       * <code>optional string rfcuIP = 19 [default = ""];</code>
       */
      public boolean hasRfcuIP() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional string rfcuIP = 19 [default = ""];</code>
       */
      public java.lang.String getRfcuIP() {
        java.lang.Object ref = rfcuIP_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          rfcuIP_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string rfcuIP = 19 [default = ""];</code>
       */
      public com.google.protobuf.ByteString
          getRfcuIPBytes() {
        java.lang.Object ref = rfcuIP_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rfcuIP_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string rfcuIP = 19 [default = ""];</code>
       */
      public Builder setRfcuIP(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        rfcuIP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string rfcuIP = 19 [default = ""];</code>
       */
      public Builder clearRfcuIP() {
        bitField0_ = (bitField0_ & ~0x00040000);
        rfcuIP_ = getDefaultInstance().getRfcuIP();
        onChanged();
        return this;
      }
      /**
       * <code>optional string rfcuIP = 19 [default = ""];</code>
       */
      public Builder setRfcuIPBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        rfcuIP_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.MMSConfig)
    }

    static {
      defaultInstance = new MMSConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.MMSConfig)
  }

  public interface ZACQConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "ZACQ_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "ZACQ_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "ZACQ_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "ZACQ_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional int32 channel = 2;
    /**
     * <code>optional int32 channel = 2;</code>
     */
    boolean hasChannel();
    /**
     * <code>optional int32 channel = 2;</code>
     */
    int getChannel();

    // optional int32 baseAux = 3;
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    boolean hasBaseAux();
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    int getBaseAux();

    // optional string rx = 4;
    /**
     * <code>optional string rx = 4;</code>
     */
    boolean hasRx();
    /**
     * <code>optional string rx = 4;</code>
     */
    java.lang.String getRx();
    /**
     * <code>optional string rx = 4;</code>
     */
    com.google.protobuf.ByteString
        getRxBytes();

    // optional string host = 5 [default = "local"];
    /**
     * <code>optional string host = 5 [default = "local"];</code>
     */
    boolean hasHost();
    /**
     * <code>optional string host = 5 [default = "local"];</code>
     */
    java.lang.String getHost();
    /**
     * <code>optional string host = 5 [default = "local"];</code>
     */
    com.google.protobuf.ByteString
        getHostBytes();

    // optional float fs = 6 [default = 1e+08];
    /**
     * <code>optional float fs = 6 [default = 1e+08];</code>
     */
    boolean hasFs();
    /**
     * <code>optional float fs = 6 [default = 1e+08];</code>
     */
    float getFs();

    // optional float minRF = 7 [default = 2e+07];
    /**
     * <code>optional float minRF = 7 [default = 2e+07];</code>
     */
    boolean hasMinRF();
    /**
     * <code>optional float minRF = 7 [default = 2e+07];</code>
     */
    float getMinRF();

    // optional float maxRF = 8 [default = 3e+09];
    /**
     * <code>optional float maxRF = 8 [default = 3e+09];</code>
     */
    boolean hasMaxRF();
    /**
     * <code>optional float maxRF = 8 [default = 3e+09];</code>
     */
    float getMaxRF();

    // optional string uniqRXID = 9 [default = "999"];
    /**
     * <code>optional string uniqRXID = 9 [default = "999"];</code>
     */
    boolean hasUniqRXID();
    /**
     * <code>optional string uniqRXID = 9 [default = "999"];</code>
     */
    java.lang.String getUniqRXID();
    /**
     * <code>optional string uniqRXID = 9 [default = "999"];</code>
     */
    com.google.protobuf.ByteString
        getUniqRXIDBytes();

    // optional int32 pair = 10;
    /**
     * <code>optional int32 pair = 10;</code>
     */
    boolean hasPair();
    /**
     * <code>optional int32 pair = 10;</code>
     */
    int getPair();

    // optional int32 testDur = 11;
    /**
     * <code>optional int32 testDur = 11;</code>
     */
    boolean hasTestDur();
    /**
     * <code>optional int32 testDur = 11;</code>
     */
    int getTestDur();

    // optional string initScript = 12;
    /**
     * <code>optional string initScript = 12;</code>
     */
    boolean hasInitScript();
    /**
     * <code>optional string initScript = 12;</code>
     */
    java.lang.String getInitScript();
    /**
     * <code>optional string initScript = 12;</code>
     */
    com.google.protobuf.ByteString
        getInitScriptBytes();
  }
  /**
   * Protobuf type {@code falcon_res_msg.ZACQConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the ZACQ resource.  These are populated
   * by ZacqReceiver.configureMessage() and from resources.xml.
   *
   * !! THIS WAS copied from DUMMYRCV_CONFIG for initial development
   * actual fields TBD !!
   *
   * msgName: DUMMYRCV_CONFIG, used to identify the message
   * channel: Channel number to use (legacy)
   * baseAux: Aux number used as the base for the channel
   * rx: Receiver string (e.g. RCV1 or RCV2)
   * host: Hostname to use for the receiver
   * fs: Sample rate of the receiver
   * minRF: Minimum RF used for receiving
   * maxRF: Maximum RF used for receiving
   * uniqRXID: Set to 999 to lookup, or channel number to use
   * initScript: Set up script run by v3zinit (in ZACQ option tree)
   * </pre>
   */
  public static final class ZACQConfig extends
      com.google.protobuf.GeneratedMessage
      implements ZACQConfigOrBuilder {
    // Use ZACQConfig.newBuilder() to construct.
    private ZACQConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZACQConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZACQConfig defaultInstance;
    public static ZACQConfig getDefaultInstance() {
      return defaultInstance;
    }

    public ZACQConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZACQConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              channel_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              baseAux_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              rx_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              host_ = input.readBytes();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              fs_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              minRF_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              maxRF_ = input.readFloat();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              uniqRXID_ = input.readBytes();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              pair_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              testDur_ = input.readInt32();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000800;
              initScript_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_ZACQConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_ZACQConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig.class, fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<ZACQConfig> PARSER =
        new com.google.protobuf.AbstractParser<ZACQConfig>() {
      public ZACQConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZACQConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZACQConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "ZACQ_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "ZACQ_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "ZACQ_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "ZACQ_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 channel = 2;
    public static final int CHANNEL_FIELD_NUMBER = 2;
    private int channel_;
    /**
     * <code>optional int32 channel = 2;</code>
     */
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 channel = 2;</code>
     */
    public int getChannel() {
      return channel_;
    }

    // optional int32 baseAux = 3;
    public static final int BASEAUX_FIELD_NUMBER = 3;
    private int baseAux_;
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    public boolean hasBaseAux() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    public int getBaseAux() {
      return baseAux_;
    }

    // optional string rx = 4;
    public static final int RX_FIELD_NUMBER = 4;
    private java.lang.Object rx_;
    /**
     * <code>optional string rx = 4;</code>
     */
    public boolean hasRx() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string rx = 4;</code>
     */
    public java.lang.String getRx() {
      java.lang.Object ref = rx_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          rx_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string rx = 4;</code>
     */
    public com.google.protobuf.ByteString
        getRxBytes() {
      java.lang.Object ref = rx_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        rx_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string host = 5 [default = "local"];
    public static final int HOST_FIELD_NUMBER = 5;
    private java.lang.Object host_;
    /**
     * <code>optional string host = 5 [default = "local"];</code>
     */
    public boolean hasHost() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string host = 5 [default = "local"];</code>
     */
    public java.lang.String getHost() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          host_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string host = 5 [default = "local"];</code>
     */
    public com.google.protobuf.ByteString
        getHostBytes() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        host_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional float fs = 6 [default = 1e+08];
    public static final int FS_FIELD_NUMBER = 6;
    private float fs_;
    /**
     * <code>optional float fs = 6 [default = 1e+08];</code>
     */
    public boolean hasFs() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float fs = 6 [default = 1e+08];</code>
     */
    public float getFs() {
      return fs_;
    }

    // optional float minRF = 7 [default = 2e+07];
    public static final int MINRF_FIELD_NUMBER = 7;
    private float minRF_;
    /**
     * <code>optional float minRF = 7 [default = 2e+07];</code>
     */
    public boolean hasMinRF() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float minRF = 7 [default = 2e+07];</code>
     */
    public float getMinRF() {
      return minRF_;
    }

    // optional float maxRF = 8 [default = 3e+09];
    public static final int MAXRF_FIELD_NUMBER = 8;
    private float maxRF_;
    /**
     * <code>optional float maxRF = 8 [default = 3e+09];</code>
     */
    public boolean hasMaxRF() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float maxRF = 8 [default = 3e+09];</code>
     */
    public float getMaxRF() {
      return maxRF_;
    }

    // optional string uniqRXID = 9 [default = "999"];
    public static final int UNIQRXID_FIELD_NUMBER = 9;
    private java.lang.Object uniqRXID_;
    /**
     * <code>optional string uniqRXID = 9 [default = "999"];</code>
     */
    public boolean hasUniqRXID() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string uniqRXID = 9 [default = "999"];</code>
     */
    public java.lang.String getUniqRXID() {
      java.lang.Object ref = uniqRXID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uniqRXID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uniqRXID = 9 [default = "999"];</code>
     */
    public com.google.protobuf.ByteString
        getUniqRXIDBytes() {
      java.lang.Object ref = uniqRXID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uniqRXID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 pair = 10;
    public static final int PAIR_FIELD_NUMBER = 10;
    private int pair_;
    /**
     * <code>optional int32 pair = 10;</code>
     */
    public boolean hasPair() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 pair = 10;</code>
     */
    public int getPair() {
      return pair_;
    }

    // optional int32 testDur = 11;
    public static final int TESTDUR_FIELD_NUMBER = 11;
    private int testDur_;
    /**
     * <code>optional int32 testDur = 11;</code>
     */
    public boolean hasTestDur() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 testDur = 11;</code>
     */
    public int getTestDur() {
      return testDur_;
    }

    // optional string initScript = 12;
    public static final int INITSCRIPT_FIELD_NUMBER = 12;
    private java.lang.Object initScript_;
    /**
     * <code>optional string initScript = 12;</code>
     */
    public boolean hasInitScript() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string initScript = 12;</code>
     */
    public java.lang.String getInitScript() {
      java.lang.Object ref = initScript_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          initScript_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string initScript = 12;</code>
     */
    public com.google.protobuf.ByteString
        getInitScriptBytes() {
      java.lang.Object ref = initScript_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        initScript_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      msgName_ = "ZACQ_CONFIG";
      channel_ = 0;
      baseAux_ = 0;
      rx_ = "";
      host_ = "local";
      fs_ = 1e+08F;
      minRF_ = 2e+07F;
      maxRF_ = 3e+09F;
      uniqRXID_ = "999";
      pair_ = 0;
      testDur_ = 0;
      initScript_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, baseAux_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getRxBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getHostBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, fs_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, minRF_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, maxRF_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getUniqRXIDBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, pair_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, testDur_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getInitScriptBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, baseAux_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getRxBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getHostBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, fs_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, minRF_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, maxRF_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getUniqRXIDBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, pair_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, testDur_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getInitScriptBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.ZACQConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the ZACQ resource.  These are populated
     * by ZacqReceiver.configureMessage() and from resources.xml.
     *
     * !! THIS WAS copied from DUMMYRCV_CONFIG for initial development
     * actual fields TBD !!
     *
     * msgName: DUMMYRCV_CONFIG, used to identify the message
     * channel: Channel number to use (legacy)
     * baseAux: Aux number used as the base for the channel
     * rx: Receiver string (e.g. RCV1 or RCV2)
     * host: Hostname to use for the receiver
     * fs: Sample rate of the receiver
     * minRF: Minimum RF used for receiving
     * maxRF: Maximum RF used for receiving
     * uniqRXID: Set to 999 to lookup, or channel number to use
     * initScript: Set up script run by v3zinit (in ZACQ option tree)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.ZACQConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_ZACQConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_ZACQConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig.class, fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "ZACQ_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        channel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        baseAux_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        rx_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        host_ = "local";
        bitField0_ = (bitField0_ & ~0x00000010);
        fs_ = 1e+08F;
        bitField0_ = (bitField0_ & ~0x00000020);
        minRF_ = 2e+07F;
        bitField0_ = (bitField0_ & ~0x00000040);
        maxRF_ = 3e+09F;
        bitField0_ = (bitField0_ & ~0x00000080);
        uniqRXID_ = "999";
        bitField0_ = (bitField0_ & ~0x00000100);
        pair_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        testDur_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        initScript_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_ZACQConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig result = new fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.baseAux_ = baseAux_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rx_ = rx_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.host_ = host_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.fs_ = fs_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.minRF_ = minRF_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.maxRF_ = maxRF_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.uniqRXID_ = uniqRXID_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.pair_ = pair_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.testDur_ = testDur_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.initScript_ = initScript_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        if (other.hasBaseAux()) {
          setBaseAux(other.getBaseAux());
        }
        if (other.hasRx()) {
          bitField0_ |= 0x00000008;
          rx_ = other.rx_;
          onChanged();
        }
        if (other.hasHost()) {
          bitField0_ |= 0x00000010;
          host_ = other.host_;
          onChanged();
        }
        if (other.hasFs()) {
          setFs(other.getFs());
        }
        if (other.hasMinRF()) {
          setMinRF(other.getMinRF());
        }
        if (other.hasMaxRF()) {
          setMaxRF(other.getMaxRF());
        }
        if (other.hasUniqRXID()) {
          bitField0_ |= 0x00000100;
          uniqRXID_ = other.uniqRXID_;
          onChanged();
        }
        if (other.hasPair()) {
          setPair(other.getPair());
        }
        if (other.hasTestDur()) {
          setTestDur(other.getTestDur());
        }
        if (other.hasInitScript()) {
          bitField0_ |= 0x00000800;
          initScript_ = other.initScript_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.ZACQConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "ZACQ_CONFIG"];
      private java.lang.Object msgName_ = "ZACQ_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "ZACQ_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "ZACQ_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "ZACQ_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "ZACQ_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "ZACQ_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "ZACQ_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional int32 channel = 2;
      private int channel_ ;
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public int getChannel() {
        return channel_;
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public Builder setChannel(int value) {
        bitField0_ |= 0x00000002;
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channel_ = 0;
        onChanged();
        return this;
      }

      // optional int32 baseAux = 3;
      private int baseAux_ ;
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public boolean hasBaseAux() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public int getBaseAux() {
        return baseAux_;
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public Builder setBaseAux(int value) {
        bitField0_ |= 0x00000004;
        baseAux_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public Builder clearBaseAux() {
        bitField0_ = (bitField0_ & ~0x00000004);
        baseAux_ = 0;
        onChanged();
        return this;
      }

      // optional string rx = 4;
      private java.lang.Object rx_ = "";
      /**
       * <code>optional string rx = 4;</code>
       */
      public boolean hasRx() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string rx = 4;</code>
       */
      public java.lang.String getRx() {
        java.lang.Object ref = rx_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          rx_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string rx = 4;</code>
       */
      public com.google.protobuf.ByteString
          getRxBytes() {
        java.lang.Object ref = rx_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          rx_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string rx = 4;</code>
       */
      public Builder setRx(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        rx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string rx = 4;</code>
       */
      public Builder clearRx() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rx_ = getDefaultInstance().getRx();
        onChanged();
        return this;
      }
      /**
       * <code>optional string rx = 4;</code>
       */
      public Builder setRxBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        rx_ = value;
        onChanged();
        return this;
      }

      // optional string host = 5 [default = "local"];
      private java.lang.Object host_ = "local";
      /**
       * <code>optional string host = 5 [default = "local"];</code>
       */
      public boolean hasHost() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string host = 5 [default = "local"];</code>
       */
      public java.lang.String getHost() {
        java.lang.Object ref = host_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          host_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string host = 5 [default = "local"];</code>
       */
      public com.google.protobuf.ByteString
          getHostBytes() {
        java.lang.Object ref = host_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          host_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string host = 5 [default = "local"];</code>
       */
      public Builder setHost(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        host_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string host = 5 [default = "local"];</code>
       */
      public Builder clearHost() {
        bitField0_ = (bitField0_ & ~0x00000010);
        host_ = getDefaultInstance().getHost();
        onChanged();
        return this;
      }
      /**
       * <code>optional string host = 5 [default = "local"];</code>
       */
      public Builder setHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        host_ = value;
        onChanged();
        return this;
      }

      // optional float fs = 6 [default = 1e+08];
      private float fs_ = 1e+08F;
      /**
       * <code>optional float fs = 6 [default = 1e+08];</code>
       */
      public boolean hasFs() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float fs = 6 [default = 1e+08];</code>
       */
      public float getFs() {
        return fs_;
      }
      /**
       * <code>optional float fs = 6 [default = 1e+08];</code>
       */
      public Builder setFs(float value) {
        bitField0_ |= 0x00000020;
        fs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float fs = 6 [default = 1e+08];</code>
       */
      public Builder clearFs() {
        bitField0_ = (bitField0_ & ~0x00000020);
        fs_ = 1e+08F;
        onChanged();
        return this;
      }

      // optional float minRF = 7 [default = 2e+07];
      private float minRF_ = 2e+07F;
      /**
       * <code>optional float minRF = 7 [default = 2e+07];</code>
       */
      public boolean hasMinRF() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float minRF = 7 [default = 2e+07];</code>
       */
      public float getMinRF() {
        return minRF_;
      }
      /**
       * <code>optional float minRF = 7 [default = 2e+07];</code>
       */
      public Builder setMinRF(float value) {
        bitField0_ |= 0x00000040;
        minRF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float minRF = 7 [default = 2e+07];</code>
       */
      public Builder clearMinRF() {
        bitField0_ = (bitField0_ & ~0x00000040);
        minRF_ = 2e+07F;
        onChanged();
        return this;
      }

      // optional float maxRF = 8 [default = 3e+09];
      private float maxRF_ = 3e+09F;
      /**
       * <code>optional float maxRF = 8 [default = 3e+09];</code>
       */
      public boolean hasMaxRF() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float maxRF = 8 [default = 3e+09];</code>
       */
      public float getMaxRF() {
        return maxRF_;
      }
      /**
       * <code>optional float maxRF = 8 [default = 3e+09];</code>
       */
      public Builder setMaxRF(float value) {
        bitField0_ |= 0x00000080;
        maxRF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxRF = 8 [default = 3e+09];</code>
       */
      public Builder clearMaxRF() {
        bitField0_ = (bitField0_ & ~0x00000080);
        maxRF_ = 3e+09F;
        onChanged();
        return this;
      }

      // optional string uniqRXID = 9 [default = "999"];
      private java.lang.Object uniqRXID_ = "999";
      /**
       * <code>optional string uniqRXID = 9 [default = "999"];</code>
       */
      public boolean hasUniqRXID() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string uniqRXID = 9 [default = "999"];</code>
       */
      public java.lang.String getUniqRXID() {
        java.lang.Object ref = uniqRXID_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uniqRXID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uniqRXID = 9 [default = "999"];</code>
       */
      public com.google.protobuf.ByteString
          getUniqRXIDBytes() {
        java.lang.Object ref = uniqRXID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uniqRXID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uniqRXID = 9 [default = "999"];</code>
       */
      public Builder setUniqRXID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        uniqRXID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uniqRXID = 9 [default = "999"];</code>
       */
      public Builder clearUniqRXID() {
        bitField0_ = (bitField0_ & ~0x00000100);
        uniqRXID_ = getDefaultInstance().getUniqRXID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uniqRXID = 9 [default = "999"];</code>
       */
      public Builder setUniqRXIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        uniqRXID_ = value;
        onChanged();
        return this;
      }

      // optional int32 pair = 10;
      private int pair_ ;
      /**
       * <code>optional int32 pair = 10;</code>
       */
      public boolean hasPair() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 pair = 10;</code>
       */
      public int getPair() {
        return pair_;
      }
      /**
       * <code>optional int32 pair = 10;</code>
       */
      public Builder setPair(int value) {
        bitField0_ |= 0x00000200;
        pair_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pair = 10;</code>
       */
      public Builder clearPair() {
        bitField0_ = (bitField0_ & ~0x00000200);
        pair_ = 0;
        onChanged();
        return this;
      }

      // optional int32 testDur = 11;
      private int testDur_ ;
      /**
       * <code>optional int32 testDur = 11;</code>
       */
      public boolean hasTestDur() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 testDur = 11;</code>
       */
      public int getTestDur() {
        return testDur_;
      }
      /**
       * <code>optional int32 testDur = 11;</code>
       */
      public Builder setTestDur(int value) {
        bitField0_ |= 0x00000400;
        testDur_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 testDur = 11;</code>
       */
      public Builder clearTestDur() {
        bitField0_ = (bitField0_ & ~0x00000400);
        testDur_ = 0;
        onChanged();
        return this;
      }

      // optional string initScript = 12;
      private java.lang.Object initScript_ = "";
      /**
       * <code>optional string initScript = 12;</code>
       */
      public boolean hasInitScript() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string initScript = 12;</code>
       */
      public java.lang.String getInitScript() {
        java.lang.Object ref = initScript_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          initScript_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string initScript = 12;</code>
       */
      public com.google.protobuf.ByteString
          getInitScriptBytes() {
        java.lang.Object ref = initScript_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          initScript_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string initScript = 12;</code>
       */
      public Builder setInitScript(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        initScript_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string initScript = 12;</code>
       */
      public Builder clearInitScript() {
        bitField0_ = (bitField0_ & ~0x00000800);
        initScript_ = getDefaultInstance().getInitScript();
        onChanged();
        return this;
      }
      /**
       * <code>optional string initScript = 12;</code>
       */
      public Builder setInitScriptBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        initScript_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.ZACQConfig)
    }

    static {
      defaultInstance = new ZACQConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.ZACQConfig)
  }

  public interface USRPRxTxConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "USRP_RXTX_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "USRP_RXTX_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "USRP_RXTX_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "USRP_RXTX_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional int32 channel = 2;
    /**
     * <code>optional int32 channel = 2;</code>
     */
    boolean hasChannel();
    /**
     * <code>optional int32 channel = 2;</code>
     */
    int getChannel();

    // optional int32 baseAux = 3;
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    boolean hasBaseAux();
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    int getBaseAux();

    // optional string args = 4 [default = "addr=192.168.10.2"];
    /**
     * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
     */
    boolean hasArgs();
    /**
     * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
     */
    java.lang.String getArgs();
    /**
     * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
     */
    com.google.protobuf.ByteString
        getArgsBytes();

    // optional float minRF = 5;
    /**
     * <code>optional float minRF = 5;</code>
     */
    boolean hasMinRF();
    /**
     * <code>optional float minRF = 5;</code>
     */
    float getMinRF();

    // optional float maxRF = 6;
    /**
     * <code>optional float maxRF = 6;</code>
     */
    boolean hasMaxRF();
    /**
     * <code>optional float maxRF = 6;</code>
     */
    float getMaxRF();

    // optional float fs = 7 [default = 1e+08];
    /**
     * <code>optional float fs = 7 [default = 1e+08];</code>
     */
    boolean hasFs();
    /**
     * <code>optional float fs = 7 [default = 1e+08];</code>
     */
    float getFs();

    // optional string uniqRXID = 8 [default = "999"];
    /**
     * <code>optional string uniqRXID = 8 [default = "999"];</code>
     */
    boolean hasUniqRXID();
    /**
     * <code>optional string uniqRXID = 8 [default = "999"];</code>
     */
    java.lang.String getUniqRXID();
    /**
     * <code>optional string uniqRXID = 8 [default = "999"];</code>
     */
    com.google.protobuf.ByteString
        getUniqRXIDBytes();
  }
  /**
   * Protobuf type {@code falcon_res_msg.USRPRxTxConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the USRP Rx resource.  These are populated
   * by ResourceUSRPRxTx.configureMessage() and from resources.xml.
   *
   * msgName: USRP_RXTX_CONFIG, used to identify the message
   * channel: Channel number to use (legacy)
   * baseAux: Aux number used as the base for the channel
   * args: Default arguments to send to the USRP
   * minRF: Minimum RF used for receiving
   * maxRF: Maximum RF used for receiving
   * </pre>
   */
  public static final class USRPRxTxConfig extends
      com.google.protobuf.GeneratedMessage
      implements USRPRxTxConfigOrBuilder {
    // Use USRPRxTxConfig.newBuilder() to construct.
    private USRPRxTxConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private USRPRxTxConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final USRPRxTxConfig defaultInstance;
    public static USRPRxTxConfig getDefaultInstance() {
      return defaultInstance;
    }

    public USRPRxTxConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private USRPRxTxConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              channel_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              baseAux_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              args_ = input.readBytes();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              minRF_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              maxRF_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              fs_ = input.readFloat();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              uniqRXID_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_USRPRxTxConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_USRPRxTxConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig.class, fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<USRPRxTxConfig> PARSER =
        new com.google.protobuf.AbstractParser<USRPRxTxConfig>() {
      public USRPRxTxConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new USRPRxTxConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<USRPRxTxConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "USRP_RXTX_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "USRP_RXTX_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "USRP_RXTX_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "USRP_RXTX_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 channel = 2;
    public static final int CHANNEL_FIELD_NUMBER = 2;
    private int channel_;
    /**
     * <code>optional int32 channel = 2;</code>
     */
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 channel = 2;</code>
     */
    public int getChannel() {
      return channel_;
    }

    // optional int32 baseAux = 3;
    public static final int BASEAUX_FIELD_NUMBER = 3;
    private int baseAux_;
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    public boolean hasBaseAux() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    public int getBaseAux() {
      return baseAux_;
    }

    // optional string args = 4 [default = "addr=192.168.10.2"];
    public static final int ARGS_FIELD_NUMBER = 4;
    private java.lang.Object args_;
    /**
     * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
     */
    public boolean hasArgs() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
     */
    public java.lang.String getArgs() {
      java.lang.Object ref = args_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          args_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
     */
    public com.google.protobuf.ByteString
        getArgsBytes() {
      java.lang.Object ref = args_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        args_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional float minRF = 5;
    public static final int MINRF_FIELD_NUMBER = 5;
    private float minRF_;
    /**
     * <code>optional float minRF = 5;</code>
     */
    public boolean hasMinRF() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float minRF = 5;</code>
     */
    public float getMinRF() {
      return minRF_;
    }

    // optional float maxRF = 6;
    public static final int MAXRF_FIELD_NUMBER = 6;
    private float maxRF_;
    /**
     * <code>optional float maxRF = 6;</code>
     */
    public boolean hasMaxRF() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float maxRF = 6;</code>
     */
    public float getMaxRF() {
      return maxRF_;
    }

    // optional float fs = 7 [default = 1e+08];
    public static final int FS_FIELD_NUMBER = 7;
    private float fs_;
    /**
     * <code>optional float fs = 7 [default = 1e+08];</code>
     */
    public boolean hasFs() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float fs = 7 [default = 1e+08];</code>
     */
    public float getFs() {
      return fs_;
    }

    // optional string uniqRXID = 8 [default = "999"];
    public static final int UNIQRXID_FIELD_NUMBER = 8;
    private java.lang.Object uniqRXID_;
    /**
     * <code>optional string uniqRXID = 8 [default = "999"];</code>
     */
    public boolean hasUniqRXID() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string uniqRXID = 8 [default = "999"];</code>
     */
    public java.lang.String getUniqRXID() {
      java.lang.Object ref = uniqRXID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uniqRXID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uniqRXID = 8 [default = "999"];</code>
     */
    public com.google.protobuf.ByteString
        getUniqRXIDBytes() {
      java.lang.Object ref = uniqRXID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uniqRXID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      msgName_ = "USRP_RXTX_CONFIG";
      channel_ = 0;
      baseAux_ = 0;
      args_ = "addr=192.168.10.2";
      minRF_ = 0F;
      maxRF_ = 0F;
      fs_ = 1e+08F;
      uniqRXID_ = "999";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, baseAux_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getArgsBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, minRF_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, maxRF_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, fs_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getUniqRXIDBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, baseAux_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getArgsBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, minRF_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, maxRF_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, fs_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getUniqRXIDBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.USRPRxTxConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the USRP Rx resource.  These are populated
     * by ResourceUSRPRxTx.configureMessage() and from resources.xml.
     *
     * msgName: USRP_RXTX_CONFIG, used to identify the message
     * channel: Channel number to use (legacy)
     * baseAux: Aux number used as the base for the channel
     * args: Default arguments to send to the USRP
     * minRF: Minimum RF used for receiving
     * maxRF: Maximum RF used for receiving
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_USRPRxTxConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_USRPRxTxConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig.class, fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "USRP_RXTX_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        channel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        baseAux_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        args_ = "addr=192.168.10.2";
        bitField0_ = (bitField0_ & ~0x00000008);
        minRF_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        maxRF_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        fs_ = 1e+08F;
        bitField0_ = (bitField0_ & ~0x00000040);
        uniqRXID_ = "999";
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_USRPRxTxConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig result = new fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.baseAux_ = baseAux_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.args_ = args_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.minRF_ = minRF_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.maxRF_ = maxRF_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.fs_ = fs_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.uniqRXID_ = uniqRXID_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        if (other.hasBaseAux()) {
          setBaseAux(other.getBaseAux());
        }
        if (other.hasArgs()) {
          bitField0_ |= 0x00000008;
          args_ = other.args_;
          onChanged();
        }
        if (other.hasMinRF()) {
          setMinRF(other.getMinRF());
        }
        if (other.hasMaxRF()) {
          setMaxRF(other.getMaxRF());
        }
        if (other.hasFs()) {
          setFs(other.getFs());
        }
        if (other.hasUniqRXID()) {
          bitField0_ |= 0x00000080;
          uniqRXID_ = other.uniqRXID_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.USRPRxTxConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "USRP_RXTX_CONFIG"];
      private java.lang.Object msgName_ = "USRP_RXTX_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "USRP_RXTX_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "USRP_RXTX_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "USRP_RXTX_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "USRP_RXTX_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "USRP_RXTX_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "USRP_RXTX_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional int32 channel = 2;
      private int channel_ ;
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public int getChannel() {
        return channel_;
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public Builder setChannel(int value) {
        bitField0_ |= 0x00000002;
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channel_ = 0;
        onChanged();
        return this;
      }

      // optional int32 baseAux = 3;
      private int baseAux_ ;
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public boolean hasBaseAux() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public int getBaseAux() {
        return baseAux_;
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public Builder setBaseAux(int value) {
        bitField0_ |= 0x00000004;
        baseAux_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public Builder clearBaseAux() {
        bitField0_ = (bitField0_ & ~0x00000004);
        baseAux_ = 0;
        onChanged();
        return this;
      }

      // optional string args = 4 [default = "addr=192.168.10.2"];
      private java.lang.Object args_ = "addr=192.168.10.2";
      /**
       * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
       */
      public boolean hasArgs() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
       */
      public java.lang.String getArgs() {
        java.lang.Object ref = args_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          args_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
       */
      public com.google.protobuf.ByteString
          getArgsBytes() {
        java.lang.Object ref = args_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          args_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
       */
      public Builder setArgs(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        args_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
       */
      public Builder clearArgs() {
        bitField0_ = (bitField0_ & ~0x00000008);
        args_ = getDefaultInstance().getArgs();
        onChanged();
        return this;
      }
      /**
       * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
       */
      public Builder setArgsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        args_ = value;
        onChanged();
        return this;
      }

      // optional float minRF = 5;
      private float minRF_ ;
      /**
       * <code>optional float minRF = 5;</code>
       */
      public boolean hasMinRF() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float minRF = 5;</code>
       */
      public float getMinRF() {
        return minRF_;
      }
      /**
       * <code>optional float minRF = 5;</code>
       */
      public Builder setMinRF(float value) {
        bitField0_ |= 0x00000010;
        minRF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float minRF = 5;</code>
       */
      public Builder clearMinRF() {
        bitField0_ = (bitField0_ & ~0x00000010);
        minRF_ = 0F;
        onChanged();
        return this;
      }

      // optional float maxRF = 6;
      private float maxRF_ ;
      /**
       * <code>optional float maxRF = 6;</code>
       */
      public boolean hasMaxRF() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float maxRF = 6;</code>
       */
      public float getMaxRF() {
        return maxRF_;
      }
      /**
       * <code>optional float maxRF = 6;</code>
       */
      public Builder setMaxRF(float value) {
        bitField0_ |= 0x00000020;
        maxRF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxRF = 6;</code>
       */
      public Builder clearMaxRF() {
        bitField0_ = (bitField0_ & ~0x00000020);
        maxRF_ = 0F;
        onChanged();
        return this;
      }

      // optional float fs = 7 [default = 1e+08];
      private float fs_ = 1e+08F;
      /**
       * <code>optional float fs = 7 [default = 1e+08];</code>
       */
      public boolean hasFs() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float fs = 7 [default = 1e+08];</code>
       */
      public float getFs() {
        return fs_;
      }
      /**
       * <code>optional float fs = 7 [default = 1e+08];</code>
       */
      public Builder setFs(float value) {
        bitField0_ |= 0x00000040;
        fs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float fs = 7 [default = 1e+08];</code>
       */
      public Builder clearFs() {
        bitField0_ = (bitField0_ & ~0x00000040);
        fs_ = 1e+08F;
        onChanged();
        return this;
      }

      // optional string uniqRXID = 8 [default = "999"];
      private java.lang.Object uniqRXID_ = "999";
      /**
       * <code>optional string uniqRXID = 8 [default = "999"];</code>
       */
      public boolean hasUniqRXID() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string uniqRXID = 8 [default = "999"];</code>
       */
      public java.lang.String getUniqRXID() {
        java.lang.Object ref = uniqRXID_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uniqRXID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uniqRXID = 8 [default = "999"];</code>
       */
      public com.google.protobuf.ByteString
          getUniqRXIDBytes() {
        java.lang.Object ref = uniqRXID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uniqRXID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uniqRXID = 8 [default = "999"];</code>
       */
      public Builder setUniqRXID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        uniqRXID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uniqRXID = 8 [default = "999"];</code>
       */
      public Builder clearUniqRXID() {
        bitField0_ = (bitField0_ & ~0x00000080);
        uniqRXID_ = getDefaultInstance().getUniqRXID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uniqRXID = 8 [default = "999"];</code>
       */
      public Builder setUniqRXIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        uniqRXID_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.USRPRxTxConfig)
    }

    static {
      defaultInstance = new USRPRxTxConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.USRPRxTxConfig)
  }

  public interface EPIQRxTxConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "EPIQ_RXTX_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "EPIQ_RXTX_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "EPIQ_RXTX_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "EPIQ_RXTX_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional int32 channel = 2;
    /**
     * <code>optional int32 channel = 2;</code>
     */
    boolean hasChannel();
    /**
     * <code>optional int32 channel = 2;</code>
     */
    int getChannel();

    // optional int32 baseAux = 3;
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    boolean hasBaseAux();
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    int getBaseAux();

    // optional int32 controlPort = 4;
    /**
     * <code>optional int32 controlPort = 4;</code>
     */
    boolean hasControlPort();
    /**
     * <code>optional int32 controlPort = 4;</code>
     */
    int getControlPort();

    // optional int32 rfPort = 5;
    /**
     * <code>optional int32 rfPort = 5;</code>
     */
    boolean hasRfPort();
    /**
     * <code>optional int32 rfPort = 5;</code>
     */
    int getRfPort();

    // optional string host = 6 [default = "local"];
    /**
     * <code>optional string host = 6 [default = "local"];</code>
     */
    boolean hasHost();
    /**
     * <code>optional string host = 6 [default = "local"];</code>
     */
    java.lang.String getHost();
    /**
     * <code>optional string host = 6 [default = "local"];</code>
     */
    com.google.protobuf.ByteString
        getHostBytes();

    // optional float minRF = 7;
    /**
     * <code>optional float minRF = 7;</code>
     */
    boolean hasMinRF();
    /**
     * <code>optional float minRF = 7;</code>
     */
    float getMinRF();

    // optional float maxRF = 8;
    /**
     * <code>optional float maxRF = 8;</code>
     */
    boolean hasMaxRF();
    /**
     * <code>optional float maxRF = 8;</code>
     */
    float getMaxRF();

    // optional float fs = 9 [default = 2.5e+07];
    /**
     * <code>optional float fs = 9 [default = 2.5e+07];</code>
     */
    boolean hasFs();
    /**
     * <code>optional float fs = 9 [default = 2.5e+07];</code>
     */
    float getFs();

    // optional string uniqRXID = 10 [default = "999"];
    /**
     * <code>optional string uniqRXID = 10 [default = "999"];</code>
     */
    boolean hasUniqRXID();
    /**
     * <code>optional string uniqRXID = 10 [default = "999"];</code>
     */
    java.lang.String getUniqRXID();
    /**
     * <code>optional string uniqRXID = 10 [default = "999"];</code>
     */
    com.google.protobuf.ByteString
        getUniqRXIDBytes();

    // optional string uniqTXID = 11 [default = "999"];
    /**
     * <code>optional string uniqTXID = 11 [default = "999"];</code>
     */
    boolean hasUniqTXID();
    /**
     * <code>optional string uniqTXID = 11 [default = "999"];</code>
     */
    java.lang.String getUniqTXID();
    /**
     * <code>optional string uniqTXID = 11 [default = "999"];</code>
     */
    com.google.protobuf.ByteString
        getUniqTXIDBytes();

    // optional float delayReset = 12 [default = -1];
    /**
     * <code>optional float delayReset = 12 [default = -1];</code>
     */
    boolean hasDelayReset();
    /**
     * <code>optional float delayReset = 12 [default = -1];</code>
     */
    float getDelayReset();
  }
  /**
   * Protobuf type {@code falcon_res_msg.EPIQRxTxConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the USRP Rx resource.  These are populated
   * by ResourceUSRPRxTx.configureMessage() and from resources.xml.
   *
   * msgName: EPIC_RXTX_CONFIG, used to identify the message
   * channel: Channel number to use (legacy)
   * baseAux: Aux number used as the base for the channel
   * args: Default arguments to send to the USRP
   * minRF: Minimum RF used for receiving
   * maxRF: Maximum RF used for receiving
   * </pre>
   */
  public static final class EPIQRxTxConfig extends
      com.google.protobuf.GeneratedMessage
      implements EPIQRxTxConfigOrBuilder {
    // Use EPIQRxTxConfig.newBuilder() to construct.
    private EPIQRxTxConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private EPIQRxTxConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final EPIQRxTxConfig defaultInstance;
    public static EPIQRxTxConfig getDefaultInstance() {
      return defaultInstance;
    }

    public EPIQRxTxConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private EPIQRxTxConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              channel_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              baseAux_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              controlPort_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              rfPort_ = input.readInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              host_ = input.readBytes();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              minRF_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              maxRF_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              fs_ = input.readFloat();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              uniqRXID_ = input.readBytes();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              uniqTXID_ = input.readBytes();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              delayReset_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_EPIQRxTxConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_EPIQRxTxConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig.class, fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<EPIQRxTxConfig> PARSER =
        new com.google.protobuf.AbstractParser<EPIQRxTxConfig>() {
      public EPIQRxTxConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EPIQRxTxConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<EPIQRxTxConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "EPIQ_RXTX_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "EPIQ_RXTX_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "EPIQ_RXTX_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "EPIQ_RXTX_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 channel = 2;
    public static final int CHANNEL_FIELD_NUMBER = 2;
    private int channel_;
    /**
     * <code>optional int32 channel = 2;</code>
     */
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 channel = 2;</code>
     */
    public int getChannel() {
      return channel_;
    }

    // optional int32 baseAux = 3;
    public static final int BASEAUX_FIELD_NUMBER = 3;
    private int baseAux_;
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    public boolean hasBaseAux() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    public int getBaseAux() {
      return baseAux_;
    }

    // optional int32 controlPort = 4;
    public static final int CONTROLPORT_FIELD_NUMBER = 4;
    private int controlPort_;
    /**
     * <code>optional int32 controlPort = 4;</code>
     */
    public boolean hasControlPort() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 controlPort = 4;</code>
     */
    public int getControlPort() {
      return controlPort_;
    }

    // optional int32 rfPort = 5;
    public static final int RFPORT_FIELD_NUMBER = 5;
    private int rfPort_;
    /**
     * <code>optional int32 rfPort = 5;</code>
     */
    public boolean hasRfPort() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 rfPort = 5;</code>
     */
    public int getRfPort() {
      return rfPort_;
    }

    // optional string host = 6 [default = "local"];
    public static final int HOST_FIELD_NUMBER = 6;
    private java.lang.Object host_;
    /**
     * <code>optional string host = 6 [default = "local"];</code>
     */
    public boolean hasHost() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string host = 6 [default = "local"];</code>
     */
    public java.lang.String getHost() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          host_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string host = 6 [default = "local"];</code>
     */
    public com.google.protobuf.ByteString
        getHostBytes() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        host_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional float minRF = 7;
    public static final int MINRF_FIELD_NUMBER = 7;
    private float minRF_;
    /**
     * <code>optional float minRF = 7;</code>
     */
    public boolean hasMinRF() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float minRF = 7;</code>
     */
    public float getMinRF() {
      return minRF_;
    }

    // optional float maxRF = 8;
    public static final int MAXRF_FIELD_NUMBER = 8;
    private float maxRF_;
    /**
     * <code>optional float maxRF = 8;</code>
     */
    public boolean hasMaxRF() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float maxRF = 8;</code>
     */
    public float getMaxRF() {
      return maxRF_;
    }

    // optional float fs = 9 [default = 2.5e+07];
    public static final int FS_FIELD_NUMBER = 9;
    private float fs_;
    /**
     * <code>optional float fs = 9 [default = 2.5e+07];</code>
     */
    public boolean hasFs() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float fs = 9 [default = 2.5e+07];</code>
     */
    public float getFs() {
      return fs_;
    }

    // optional string uniqRXID = 10 [default = "999"];
    public static final int UNIQRXID_FIELD_NUMBER = 10;
    private java.lang.Object uniqRXID_;
    /**
     * <code>optional string uniqRXID = 10 [default = "999"];</code>
     */
    public boolean hasUniqRXID() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string uniqRXID = 10 [default = "999"];</code>
     */
    public java.lang.String getUniqRXID() {
      java.lang.Object ref = uniqRXID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uniqRXID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uniqRXID = 10 [default = "999"];</code>
     */
    public com.google.protobuf.ByteString
        getUniqRXIDBytes() {
      java.lang.Object ref = uniqRXID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uniqRXID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string uniqTXID = 11 [default = "999"];
    public static final int UNIQTXID_FIELD_NUMBER = 11;
    private java.lang.Object uniqTXID_;
    /**
     * <code>optional string uniqTXID = 11 [default = "999"];</code>
     */
    public boolean hasUniqTXID() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string uniqTXID = 11 [default = "999"];</code>
     */
    public java.lang.String getUniqTXID() {
      java.lang.Object ref = uniqTXID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uniqTXID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uniqTXID = 11 [default = "999"];</code>
     */
    public com.google.protobuf.ByteString
        getUniqTXIDBytes() {
      java.lang.Object ref = uniqTXID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uniqTXID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional float delayReset = 12 [default = -1];
    public static final int DELAYRESET_FIELD_NUMBER = 12;
    private float delayReset_;
    /**
     * <code>optional float delayReset = 12 [default = -1];</code>
     */
    public boolean hasDelayReset() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional float delayReset = 12 [default = -1];</code>
     */
    public float getDelayReset() {
      return delayReset_;
    }

    private void initFields() {
      msgName_ = "EPIQ_RXTX_CONFIG";
      channel_ = 0;
      baseAux_ = 0;
      controlPort_ = 0;
      rfPort_ = 0;
      host_ = "local";
      minRF_ = 0F;
      maxRF_ = 0F;
      fs_ = 2.5e+07F;
      uniqRXID_ = "999";
      uniqTXID_ = "999";
      delayReset_ = -1F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, baseAux_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, controlPort_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, rfPort_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getHostBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, minRF_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, maxRF_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, fs_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getUniqRXIDBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getUniqTXIDBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(12, delayReset_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, baseAux_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, controlPort_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, rfPort_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getHostBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, minRF_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, maxRF_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, fs_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getUniqRXIDBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getUniqTXIDBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, delayReset_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.EPIQRxTxConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the USRP Rx resource.  These are populated
     * by ResourceUSRPRxTx.configureMessage() and from resources.xml.
     *
     * msgName: EPIC_RXTX_CONFIG, used to identify the message
     * channel: Channel number to use (legacy)
     * baseAux: Aux number used as the base for the channel
     * args: Default arguments to send to the USRP
     * minRF: Minimum RF used for receiving
     * maxRF: Maximum RF used for receiving
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_EPIQRxTxConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_EPIQRxTxConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig.class, fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "EPIQ_RXTX_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        channel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        baseAux_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        controlPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        rfPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        host_ = "local";
        bitField0_ = (bitField0_ & ~0x00000020);
        minRF_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        maxRF_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        fs_ = 2.5e+07F;
        bitField0_ = (bitField0_ & ~0x00000100);
        uniqRXID_ = "999";
        bitField0_ = (bitField0_ & ~0x00000200);
        uniqTXID_ = "999";
        bitField0_ = (bitField0_ & ~0x00000400);
        delayReset_ = -1F;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_EPIQRxTxConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig result = new fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.baseAux_ = baseAux_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.controlPort_ = controlPort_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rfPort_ = rfPort_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.host_ = host_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.minRF_ = minRF_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.maxRF_ = maxRF_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.fs_ = fs_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.uniqRXID_ = uniqRXID_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.uniqTXID_ = uniqTXID_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.delayReset_ = delayReset_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        if (other.hasBaseAux()) {
          setBaseAux(other.getBaseAux());
        }
        if (other.hasControlPort()) {
          setControlPort(other.getControlPort());
        }
        if (other.hasRfPort()) {
          setRfPort(other.getRfPort());
        }
        if (other.hasHost()) {
          bitField0_ |= 0x00000020;
          host_ = other.host_;
          onChanged();
        }
        if (other.hasMinRF()) {
          setMinRF(other.getMinRF());
        }
        if (other.hasMaxRF()) {
          setMaxRF(other.getMaxRF());
        }
        if (other.hasFs()) {
          setFs(other.getFs());
        }
        if (other.hasUniqRXID()) {
          bitField0_ |= 0x00000200;
          uniqRXID_ = other.uniqRXID_;
          onChanged();
        }
        if (other.hasUniqTXID()) {
          bitField0_ |= 0x00000400;
          uniqTXID_ = other.uniqTXID_;
          onChanged();
        }
        if (other.hasDelayReset()) {
          setDelayReset(other.getDelayReset());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.EPIQRxTxConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "EPIQ_RXTX_CONFIG"];
      private java.lang.Object msgName_ = "EPIQ_RXTX_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "EPIQ_RXTX_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "EPIQ_RXTX_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "EPIQ_RXTX_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "EPIQ_RXTX_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "EPIQ_RXTX_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "EPIQ_RXTX_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional int32 channel = 2;
      private int channel_ ;
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public int getChannel() {
        return channel_;
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public Builder setChannel(int value) {
        bitField0_ |= 0x00000002;
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channel_ = 0;
        onChanged();
        return this;
      }

      // optional int32 baseAux = 3;
      private int baseAux_ ;
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public boolean hasBaseAux() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public int getBaseAux() {
        return baseAux_;
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public Builder setBaseAux(int value) {
        bitField0_ |= 0x00000004;
        baseAux_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public Builder clearBaseAux() {
        bitField0_ = (bitField0_ & ~0x00000004);
        baseAux_ = 0;
        onChanged();
        return this;
      }

      // optional int32 controlPort = 4;
      private int controlPort_ ;
      /**
       * <code>optional int32 controlPort = 4;</code>
       */
      public boolean hasControlPort() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 controlPort = 4;</code>
       */
      public int getControlPort() {
        return controlPort_;
      }
      /**
       * <code>optional int32 controlPort = 4;</code>
       */
      public Builder setControlPort(int value) {
        bitField0_ |= 0x00000008;
        controlPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 controlPort = 4;</code>
       */
      public Builder clearControlPort() {
        bitField0_ = (bitField0_ & ~0x00000008);
        controlPort_ = 0;
        onChanged();
        return this;
      }

      // optional int32 rfPort = 5;
      private int rfPort_ ;
      /**
       * <code>optional int32 rfPort = 5;</code>
       */
      public boolean hasRfPort() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 rfPort = 5;</code>
       */
      public int getRfPort() {
        return rfPort_;
      }
      /**
       * <code>optional int32 rfPort = 5;</code>
       */
      public Builder setRfPort(int value) {
        bitField0_ |= 0x00000010;
        rfPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 rfPort = 5;</code>
       */
      public Builder clearRfPort() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rfPort_ = 0;
        onChanged();
        return this;
      }

      // optional string host = 6 [default = "local"];
      private java.lang.Object host_ = "local";
      /**
       * <code>optional string host = 6 [default = "local"];</code>
       */
      public boolean hasHost() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string host = 6 [default = "local"];</code>
       */
      public java.lang.String getHost() {
        java.lang.Object ref = host_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          host_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string host = 6 [default = "local"];</code>
       */
      public com.google.protobuf.ByteString
          getHostBytes() {
        java.lang.Object ref = host_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          host_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string host = 6 [default = "local"];</code>
       */
      public Builder setHost(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        host_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string host = 6 [default = "local"];</code>
       */
      public Builder clearHost() {
        bitField0_ = (bitField0_ & ~0x00000020);
        host_ = getDefaultInstance().getHost();
        onChanged();
        return this;
      }
      /**
       * <code>optional string host = 6 [default = "local"];</code>
       */
      public Builder setHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        host_ = value;
        onChanged();
        return this;
      }

      // optional float minRF = 7;
      private float minRF_ ;
      /**
       * <code>optional float minRF = 7;</code>
       */
      public boolean hasMinRF() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float minRF = 7;</code>
       */
      public float getMinRF() {
        return minRF_;
      }
      /**
       * <code>optional float minRF = 7;</code>
       */
      public Builder setMinRF(float value) {
        bitField0_ |= 0x00000040;
        minRF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float minRF = 7;</code>
       */
      public Builder clearMinRF() {
        bitField0_ = (bitField0_ & ~0x00000040);
        minRF_ = 0F;
        onChanged();
        return this;
      }

      // optional float maxRF = 8;
      private float maxRF_ ;
      /**
       * <code>optional float maxRF = 8;</code>
       */
      public boolean hasMaxRF() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float maxRF = 8;</code>
       */
      public float getMaxRF() {
        return maxRF_;
      }
      /**
       * <code>optional float maxRF = 8;</code>
       */
      public Builder setMaxRF(float value) {
        bitField0_ |= 0x00000080;
        maxRF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxRF = 8;</code>
       */
      public Builder clearMaxRF() {
        bitField0_ = (bitField0_ & ~0x00000080);
        maxRF_ = 0F;
        onChanged();
        return this;
      }

      // optional float fs = 9 [default = 2.5e+07];
      private float fs_ = 2.5e+07F;
      /**
       * <code>optional float fs = 9 [default = 2.5e+07];</code>
       */
      public boolean hasFs() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float fs = 9 [default = 2.5e+07];</code>
       */
      public float getFs() {
        return fs_;
      }
      /**
       * <code>optional float fs = 9 [default = 2.5e+07];</code>
       */
      public Builder setFs(float value) {
        bitField0_ |= 0x00000100;
        fs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float fs = 9 [default = 2.5e+07];</code>
       */
      public Builder clearFs() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fs_ = 2.5e+07F;
        onChanged();
        return this;
      }

      // optional string uniqRXID = 10 [default = "999"];
      private java.lang.Object uniqRXID_ = "999";
      /**
       * <code>optional string uniqRXID = 10 [default = "999"];</code>
       */
      public boolean hasUniqRXID() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string uniqRXID = 10 [default = "999"];</code>
       */
      public java.lang.String getUniqRXID() {
        java.lang.Object ref = uniqRXID_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uniqRXID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uniqRXID = 10 [default = "999"];</code>
       */
      public com.google.protobuf.ByteString
          getUniqRXIDBytes() {
        java.lang.Object ref = uniqRXID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uniqRXID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uniqRXID = 10 [default = "999"];</code>
       */
      public Builder setUniqRXID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        uniqRXID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uniqRXID = 10 [default = "999"];</code>
       */
      public Builder clearUniqRXID() {
        bitField0_ = (bitField0_ & ~0x00000200);
        uniqRXID_ = getDefaultInstance().getUniqRXID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uniqRXID = 10 [default = "999"];</code>
       */
      public Builder setUniqRXIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        uniqRXID_ = value;
        onChanged();
        return this;
      }

      // optional string uniqTXID = 11 [default = "999"];
      private java.lang.Object uniqTXID_ = "999";
      /**
       * <code>optional string uniqTXID = 11 [default = "999"];</code>
       */
      public boolean hasUniqTXID() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string uniqTXID = 11 [default = "999"];</code>
       */
      public java.lang.String getUniqTXID() {
        java.lang.Object ref = uniqTXID_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uniqTXID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uniqTXID = 11 [default = "999"];</code>
       */
      public com.google.protobuf.ByteString
          getUniqTXIDBytes() {
        java.lang.Object ref = uniqTXID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uniqTXID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uniqTXID = 11 [default = "999"];</code>
       */
      public Builder setUniqTXID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        uniqTXID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uniqTXID = 11 [default = "999"];</code>
       */
      public Builder clearUniqTXID() {
        bitField0_ = (bitField0_ & ~0x00000400);
        uniqTXID_ = getDefaultInstance().getUniqTXID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uniqTXID = 11 [default = "999"];</code>
       */
      public Builder setUniqTXIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        uniqTXID_ = value;
        onChanged();
        return this;
      }

      // optional float delayReset = 12 [default = -1];
      private float delayReset_ = -1F;
      /**
       * <code>optional float delayReset = 12 [default = -1];</code>
       */
      public boolean hasDelayReset() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float delayReset = 12 [default = -1];</code>
       */
      public float getDelayReset() {
        return delayReset_;
      }
      /**
       * <code>optional float delayReset = 12 [default = -1];</code>
       */
      public Builder setDelayReset(float value) {
        bitField0_ |= 0x00000800;
        delayReset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float delayReset = 12 [default = -1];</code>
       */
      public Builder clearDelayReset() {
        bitField0_ = (bitField0_ & ~0x00000800);
        delayReset_ = -1F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.EPIQRxTxConfig)
    }

    static {
      defaultInstance = new EPIQRxTxConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.EPIQRxTxConfig)
  }

  public interface RTLSDRConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "RTLSDR_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "RTLSDR_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "RTLSDR_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "RTLSDR_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional int32 channel = 2;
    /**
     * <code>optional int32 channel = 2;</code>
     */
    boolean hasChannel();
    /**
     * <code>optional int32 channel = 2;</code>
     */
    int getChannel();

    // optional int32 baseAux = 3;
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    boolean hasBaseAux();
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    int getBaseAux();

    // optional int32 controlPort = 4;
    /**
     * <code>optional int32 controlPort = 4;</code>
     */
    boolean hasControlPort();
    /**
     * <code>optional int32 controlPort = 4;</code>
     */
    int getControlPort();

    // optional string host = 5 [default = "local"];
    /**
     * <code>optional string host = 5 [default = "local"];</code>
     */
    boolean hasHost();
    /**
     * <code>optional string host = 5 [default = "local"];</code>
     */
    java.lang.String getHost();
    /**
     * <code>optional string host = 5 [default = "local"];</code>
     */
    com.google.protobuf.ByteString
        getHostBytes();

    // optional float minRF = 6;
    /**
     * <code>optional float minRF = 6;</code>
     */
    boolean hasMinRF();
    /**
     * <code>optional float minRF = 6;</code>
     */
    float getMinRF();

    // optional float maxRF = 7;
    /**
     * <code>optional float maxRF = 7;</code>
     */
    boolean hasMaxRF();
    /**
     * <code>optional float maxRF = 7;</code>
     */
    float getMaxRF();

    // optional float fs = 8 [default = 2.048e+06];
    /**
     * <code>optional float fs = 8 [default = 2.048e+06];</code>
     */
    boolean hasFs();
    /**
     * <code>optional float fs = 8 [default = 2.048e+06];</code>
     */
    float getFs();

    // optional string uniqRXID = 9 [default = "999"];
    /**
     * <code>optional string uniqRXID = 9 [default = "999"];</code>
     */
    boolean hasUniqRXID();
    /**
     * <code>optional string uniqRXID = 9 [default = "999"];</code>
     */
    java.lang.String getUniqRXID();
    /**
     * <code>optional string uniqRXID = 9 [default = "999"];</code>
     */
    com.google.protobuf.ByteString
        getUniqRXIDBytes();
  }
  /**
   * Protobuf type {@code falcon_res_msg.RTLSDRConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the RTLSDR resource.  These are populated
   * by ResourceRTLSDR.configureMessage() and from resources.xml.
   *
   * msgName: RTLSDR_CONFIG, used to identify the message
   * channel: Channel number to use (legacy)
   * baseAux: Aux number used as the base for the channel
   * args: Default arguments to send to the RTLSDR
   * minRF: Minimum RF used for receiving
   * maxRF: Maximum RF used for receiving
   * </pre>
   */
  public static final class RTLSDRConfig extends
      com.google.protobuf.GeneratedMessage
      implements RTLSDRConfigOrBuilder {
    // Use RTLSDRConfig.newBuilder() to construct.
    private RTLSDRConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RTLSDRConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RTLSDRConfig defaultInstance;
    public static RTLSDRConfig getDefaultInstance() {
      return defaultInstance;
    }

    public RTLSDRConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RTLSDRConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              channel_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              baseAux_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              controlPort_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              host_ = input.readBytes();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              minRF_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              maxRF_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              fs_ = input.readFloat();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              uniqRXID_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RTLSDRConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RTLSDRConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig.class, fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<RTLSDRConfig> PARSER =
        new com.google.protobuf.AbstractParser<RTLSDRConfig>() {
      public RTLSDRConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RTLSDRConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RTLSDRConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "RTLSDR_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "RTLSDR_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "RTLSDR_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "RTLSDR_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 channel = 2;
    public static final int CHANNEL_FIELD_NUMBER = 2;
    private int channel_;
    /**
     * <code>optional int32 channel = 2;</code>
     */
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 channel = 2;</code>
     */
    public int getChannel() {
      return channel_;
    }

    // optional int32 baseAux = 3;
    public static final int BASEAUX_FIELD_NUMBER = 3;
    private int baseAux_;
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    public boolean hasBaseAux() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    public int getBaseAux() {
      return baseAux_;
    }

    // optional int32 controlPort = 4;
    public static final int CONTROLPORT_FIELD_NUMBER = 4;
    private int controlPort_;
    /**
     * <code>optional int32 controlPort = 4;</code>
     */
    public boolean hasControlPort() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 controlPort = 4;</code>
     */
    public int getControlPort() {
      return controlPort_;
    }

    // optional string host = 5 [default = "local"];
    public static final int HOST_FIELD_NUMBER = 5;
    private java.lang.Object host_;
    /**
     * <code>optional string host = 5 [default = "local"];</code>
     */
    public boolean hasHost() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string host = 5 [default = "local"];</code>
     */
    public java.lang.String getHost() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          host_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string host = 5 [default = "local"];</code>
     */
    public com.google.protobuf.ByteString
        getHostBytes() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        host_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional float minRF = 6;
    public static final int MINRF_FIELD_NUMBER = 6;
    private float minRF_;
    /**
     * <code>optional float minRF = 6;</code>
     */
    public boolean hasMinRF() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float minRF = 6;</code>
     */
    public float getMinRF() {
      return minRF_;
    }

    // optional float maxRF = 7;
    public static final int MAXRF_FIELD_NUMBER = 7;
    private float maxRF_;
    /**
     * <code>optional float maxRF = 7;</code>
     */
    public boolean hasMaxRF() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float maxRF = 7;</code>
     */
    public float getMaxRF() {
      return maxRF_;
    }

    // optional float fs = 8 [default = 2.048e+06];
    public static final int FS_FIELD_NUMBER = 8;
    private float fs_;
    /**
     * <code>optional float fs = 8 [default = 2.048e+06];</code>
     */
    public boolean hasFs() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float fs = 8 [default = 2.048e+06];</code>
     */
    public float getFs() {
      return fs_;
    }

    // optional string uniqRXID = 9 [default = "999"];
    public static final int UNIQRXID_FIELD_NUMBER = 9;
    private java.lang.Object uniqRXID_;
    /**
     * <code>optional string uniqRXID = 9 [default = "999"];</code>
     */
    public boolean hasUniqRXID() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string uniqRXID = 9 [default = "999"];</code>
     */
    public java.lang.String getUniqRXID() {
      java.lang.Object ref = uniqRXID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uniqRXID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uniqRXID = 9 [default = "999"];</code>
     */
    public com.google.protobuf.ByteString
        getUniqRXIDBytes() {
      java.lang.Object ref = uniqRXID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uniqRXID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      msgName_ = "RTLSDR_CONFIG";
      channel_ = 0;
      baseAux_ = 0;
      controlPort_ = 0;
      host_ = "local";
      minRF_ = 0F;
      maxRF_ = 0F;
      fs_ = 2.048e+06F;
      uniqRXID_ = "999";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, baseAux_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, controlPort_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getHostBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, minRF_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, maxRF_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, fs_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getUniqRXIDBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, baseAux_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, controlPort_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getHostBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, minRF_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, maxRF_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, fs_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getUniqRXIDBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.RTLSDRConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the RTLSDR resource.  These are populated
     * by ResourceRTLSDR.configureMessage() and from resources.xml.
     *
     * msgName: RTLSDR_CONFIG, used to identify the message
     * channel: Channel number to use (legacy)
     * baseAux: Aux number used as the base for the channel
     * args: Default arguments to send to the RTLSDR
     * minRF: Minimum RF used for receiving
     * maxRF: Maximum RF used for receiving
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RTLSDRConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RTLSDRConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig.class, fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "RTLSDR_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        channel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        baseAux_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        controlPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        host_ = "local";
        bitField0_ = (bitField0_ & ~0x00000010);
        minRF_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        maxRF_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        fs_ = 2.048e+06F;
        bitField0_ = (bitField0_ & ~0x00000080);
        uniqRXID_ = "999";
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RTLSDRConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig result = new fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.baseAux_ = baseAux_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.controlPort_ = controlPort_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.host_ = host_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.minRF_ = minRF_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.maxRF_ = maxRF_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.fs_ = fs_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.uniqRXID_ = uniqRXID_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        if (other.hasBaseAux()) {
          setBaseAux(other.getBaseAux());
        }
        if (other.hasControlPort()) {
          setControlPort(other.getControlPort());
        }
        if (other.hasHost()) {
          bitField0_ |= 0x00000010;
          host_ = other.host_;
          onChanged();
        }
        if (other.hasMinRF()) {
          setMinRF(other.getMinRF());
        }
        if (other.hasMaxRF()) {
          setMaxRF(other.getMaxRF());
        }
        if (other.hasFs()) {
          setFs(other.getFs());
        }
        if (other.hasUniqRXID()) {
          bitField0_ |= 0x00000100;
          uniqRXID_ = other.uniqRXID_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.RTLSDRConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "RTLSDR_CONFIG"];
      private java.lang.Object msgName_ = "RTLSDR_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "RTLSDR_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "RTLSDR_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "RTLSDR_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "RTLSDR_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "RTLSDR_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "RTLSDR_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional int32 channel = 2;
      private int channel_ ;
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public int getChannel() {
        return channel_;
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public Builder setChannel(int value) {
        bitField0_ |= 0x00000002;
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channel_ = 0;
        onChanged();
        return this;
      }

      // optional int32 baseAux = 3;
      private int baseAux_ ;
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public boolean hasBaseAux() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public int getBaseAux() {
        return baseAux_;
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public Builder setBaseAux(int value) {
        bitField0_ |= 0x00000004;
        baseAux_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public Builder clearBaseAux() {
        bitField0_ = (bitField0_ & ~0x00000004);
        baseAux_ = 0;
        onChanged();
        return this;
      }

      // optional int32 controlPort = 4;
      private int controlPort_ ;
      /**
       * <code>optional int32 controlPort = 4;</code>
       */
      public boolean hasControlPort() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 controlPort = 4;</code>
       */
      public int getControlPort() {
        return controlPort_;
      }
      /**
       * <code>optional int32 controlPort = 4;</code>
       */
      public Builder setControlPort(int value) {
        bitField0_ |= 0x00000008;
        controlPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 controlPort = 4;</code>
       */
      public Builder clearControlPort() {
        bitField0_ = (bitField0_ & ~0x00000008);
        controlPort_ = 0;
        onChanged();
        return this;
      }

      // optional string host = 5 [default = "local"];
      private java.lang.Object host_ = "local";
      /**
       * <code>optional string host = 5 [default = "local"];</code>
       */
      public boolean hasHost() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string host = 5 [default = "local"];</code>
       */
      public java.lang.String getHost() {
        java.lang.Object ref = host_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          host_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string host = 5 [default = "local"];</code>
       */
      public com.google.protobuf.ByteString
          getHostBytes() {
        java.lang.Object ref = host_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          host_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string host = 5 [default = "local"];</code>
       */
      public Builder setHost(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        host_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string host = 5 [default = "local"];</code>
       */
      public Builder clearHost() {
        bitField0_ = (bitField0_ & ~0x00000010);
        host_ = getDefaultInstance().getHost();
        onChanged();
        return this;
      }
      /**
       * <code>optional string host = 5 [default = "local"];</code>
       */
      public Builder setHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        host_ = value;
        onChanged();
        return this;
      }

      // optional float minRF = 6;
      private float minRF_ ;
      /**
       * <code>optional float minRF = 6;</code>
       */
      public boolean hasMinRF() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float minRF = 6;</code>
       */
      public float getMinRF() {
        return minRF_;
      }
      /**
       * <code>optional float minRF = 6;</code>
       */
      public Builder setMinRF(float value) {
        bitField0_ |= 0x00000020;
        minRF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float minRF = 6;</code>
       */
      public Builder clearMinRF() {
        bitField0_ = (bitField0_ & ~0x00000020);
        minRF_ = 0F;
        onChanged();
        return this;
      }

      // optional float maxRF = 7;
      private float maxRF_ ;
      /**
       * <code>optional float maxRF = 7;</code>
       */
      public boolean hasMaxRF() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float maxRF = 7;</code>
       */
      public float getMaxRF() {
        return maxRF_;
      }
      /**
       * <code>optional float maxRF = 7;</code>
       */
      public Builder setMaxRF(float value) {
        bitField0_ |= 0x00000040;
        maxRF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxRF = 7;</code>
       */
      public Builder clearMaxRF() {
        bitField0_ = (bitField0_ & ~0x00000040);
        maxRF_ = 0F;
        onChanged();
        return this;
      }

      // optional float fs = 8 [default = 2.048e+06];
      private float fs_ = 2.048e+06F;
      /**
       * <code>optional float fs = 8 [default = 2.048e+06];</code>
       */
      public boolean hasFs() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float fs = 8 [default = 2.048e+06];</code>
       */
      public float getFs() {
        return fs_;
      }
      /**
       * <code>optional float fs = 8 [default = 2.048e+06];</code>
       */
      public Builder setFs(float value) {
        bitField0_ |= 0x00000080;
        fs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float fs = 8 [default = 2.048e+06];</code>
       */
      public Builder clearFs() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fs_ = 2.048e+06F;
        onChanged();
        return this;
      }

      // optional string uniqRXID = 9 [default = "999"];
      private java.lang.Object uniqRXID_ = "999";
      /**
       * <code>optional string uniqRXID = 9 [default = "999"];</code>
       */
      public boolean hasUniqRXID() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string uniqRXID = 9 [default = "999"];</code>
       */
      public java.lang.String getUniqRXID() {
        java.lang.Object ref = uniqRXID_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uniqRXID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uniqRXID = 9 [default = "999"];</code>
       */
      public com.google.protobuf.ByteString
          getUniqRXIDBytes() {
        java.lang.Object ref = uniqRXID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uniqRXID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uniqRXID = 9 [default = "999"];</code>
       */
      public Builder setUniqRXID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        uniqRXID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uniqRXID = 9 [default = "999"];</code>
       */
      public Builder clearUniqRXID() {
        bitField0_ = (bitField0_ & ~0x00000100);
        uniqRXID_ = getDefaultInstance().getUniqRXID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uniqRXID = 9 [default = "999"];</code>
       */
      public Builder setUniqRXIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        uniqRXID_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.RTLSDRConfig)
    }

    static {
      defaultInstance = new RTLSDRConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.RTLSDRConfig)
  }

  public interface USRPRxConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "USRP_RX_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "USRP_RX_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "USRP_RX_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "USRP_RX_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional int32 channel = 2;
    /**
     * <code>optional int32 channel = 2;</code>
     */
    boolean hasChannel();
    /**
     * <code>optional int32 channel = 2;</code>
     */
    int getChannel();

    // optional int32 baseAux = 3;
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    boolean hasBaseAux();
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    int getBaseAux();

    // optional string args = 4 [default = "addr=192.168.10.2"];
    /**
     * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
     */
    boolean hasArgs();
    /**
     * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
     */
    java.lang.String getArgs();
    /**
     * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
     */
    com.google.protobuf.ByteString
        getArgsBytes();

    // optional int32 usrpchan = 5;
    /**
     * <code>optional int32 usrpchan = 5;</code>
     */
    boolean hasUsrpchan();
    /**
     * <code>optional int32 usrpchan = 5;</code>
     */
    int getUsrpchan();

    // optional float minRF = 6;
    /**
     * <code>optional float minRF = 6;</code>
     */
    boolean hasMinRF();
    /**
     * <code>optional float minRF = 6;</code>
     */
    float getMinRF();

    // optional float maxRF = 7;
    /**
     * <code>optional float maxRF = 7;</code>
     */
    boolean hasMaxRF();
    /**
     * <code>optional float maxRF = 7;</code>
     */
    float getMaxRF();

    // optional float fs = 8 [default = 1e+08];
    /**
     * <code>optional float fs = 8 [default = 1e+08];</code>
     */
    boolean hasFs();
    /**
     * <code>optional float fs = 8 [default = 1e+08];</code>
     */
    float getFs();
  }
  /**
   * Protobuf type {@code falcon_res_msg.USRPRxConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the USRP Rx resource.  These are populated
   * by ResourceUSRPRx.configureMessage() and from resources.xml.
   *
   * msgName: USRP_RX_CONFIG, used to identify the message
   * channel: Channel number to use (legacy)
   * baseAux: Aux number used as the base for the channel
   * args: Default arguments to send to the USRP
   * usrpchan: Receiver number to use
   * minRF: Minimum RF used for receiving
   * maxRF: Maximum RF used for receiving
   * </pre>
   */
  public static final class USRPRxConfig extends
      com.google.protobuf.GeneratedMessage
      implements USRPRxConfigOrBuilder {
    // Use USRPRxConfig.newBuilder() to construct.
    private USRPRxConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private USRPRxConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final USRPRxConfig defaultInstance;
    public static USRPRxConfig getDefaultInstance() {
      return defaultInstance;
    }

    public USRPRxConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private USRPRxConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              channel_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              baseAux_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              args_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              usrpchan_ = input.readInt32();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              minRF_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              maxRF_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              fs_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_USRPRxConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_USRPRxConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig.class, fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<USRPRxConfig> PARSER =
        new com.google.protobuf.AbstractParser<USRPRxConfig>() {
      public USRPRxConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new USRPRxConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<USRPRxConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "USRP_RX_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "USRP_RX_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "USRP_RX_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "USRP_RX_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 channel = 2;
    public static final int CHANNEL_FIELD_NUMBER = 2;
    private int channel_;
    /**
     * <code>optional int32 channel = 2;</code>
     */
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 channel = 2;</code>
     */
    public int getChannel() {
      return channel_;
    }

    // optional int32 baseAux = 3;
    public static final int BASEAUX_FIELD_NUMBER = 3;
    private int baseAux_;
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    public boolean hasBaseAux() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 baseAux = 3;</code>
     */
    public int getBaseAux() {
      return baseAux_;
    }

    // optional string args = 4 [default = "addr=192.168.10.2"];
    public static final int ARGS_FIELD_NUMBER = 4;
    private java.lang.Object args_;
    /**
     * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
     */
    public boolean hasArgs() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
     */
    public java.lang.String getArgs() {
      java.lang.Object ref = args_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          args_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
     */
    public com.google.protobuf.ByteString
        getArgsBytes() {
      java.lang.Object ref = args_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        args_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 usrpchan = 5;
    public static final int USRPCHAN_FIELD_NUMBER = 5;
    private int usrpchan_;
    /**
     * <code>optional int32 usrpchan = 5;</code>
     */
    public boolean hasUsrpchan() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 usrpchan = 5;</code>
     */
    public int getUsrpchan() {
      return usrpchan_;
    }

    // optional float minRF = 6;
    public static final int MINRF_FIELD_NUMBER = 6;
    private float minRF_;
    /**
     * <code>optional float minRF = 6;</code>
     */
    public boolean hasMinRF() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float minRF = 6;</code>
     */
    public float getMinRF() {
      return minRF_;
    }

    // optional float maxRF = 7;
    public static final int MAXRF_FIELD_NUMBER = 7;
    private float maxRF_;
    /**
     * <code>optional float maxRF = 7;</code>
     */
    public boolean hasMaxRF() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float maxRF = 7;</code>
     */
    public float getMaxRF() {
      return maxRF_;
    }

    // optional float fs = 8 [default = 1e+08];
    public static final int FS_FIELD_NUMBER = 8;
    private float fs_;
    /**
     * <code>optional float fs = 8 [default = 1e+08];</code>
     */
    public boolean hasFs() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float fs = 8 [default = 1e+08];</code>
     */
    public float getFs() {
      return fs_;
    }

    private void initFields() {
      msgName_ = "USRP_RX_CONFIG";
      channel_ = 0;
      baseAux_ = 0;
      args_ = "addr=192.168.10.2";
      usrpchan_ = 0;
      minRF_ = 0F;
      maxRF_ = 0F;
      fs_ = 1e+08F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, baseAux_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getArgsBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, usrpchan_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, minRF_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, maxRF_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, fs_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, baseAux_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getArgsBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, usrpchan_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, minRF_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, maxRF_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, fs_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.USRPRxConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the USRP Rx resource.  These are populated
     * by ResourceUSRPRx.configureMessage() and from resources.xml.
     *
     * msgName: USRP_RX_CONFIG, used to identify the message
     * channel: Channel number to use (legacy)
     * baseAux: Aux number used as the base for the channel
     * args: Default arguments to send to the USRP
     * usrpchan: Receiver number to use
     * minRF: Minimum RF used for receiving
     * maxRF: Maximum RF used for receiving
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_USRPRxConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_USRPRxConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig.class, fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "USRP_RX_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        channel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        baseAux_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        args_ = "addr=192.168.10.2";
        bitField0_ = (bitField0_ & ~0x00000008);
        usrpchan_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        minRF_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        maxRF_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        fs_ = 1e+08F;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_USRPRxConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig result = new fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.baseAux_ = baseAux_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.args_ = args_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.usrpchan_ = usrpchan_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.minRF_ = minRF_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.maxRF_ = maxRF_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.fs_ = fs_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        if (other.hasBaseAux()) {
          setBaseAux(other.getBaseAux());
        }
        if (other.hasArgs()) {
          bitField0_ |= 0x00000008;
          args_ = other.args_;
          onChanged();
        }
        if (other.hasUsrpchan()) {
          setUsrpchan(other.getUsrpchan());
        }
        if (other.hasMinRF()) {
          setMinRF(other.getMinRF());
        }
        if (other.hasMaxRF()) {
          setMaxRF(other.getMaxRF());
        }
        if (other.hasFs()) {
          setFs(other.getFs());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.USRPRxConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "USRP_RX_CONFIG"];
      private java.lang.Object msgName_ = "USRP_RX_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "USRP_RX_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "USRP_RX_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "USRP_RX_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "USRP_RX_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "USRP_RX_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "USRP_RX_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional int32 channel = 2;
      private int channel_ ;
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public int getChannel() {
        return channel_;
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public Builder setChannel(int value) {
        bitField0_ |= 0x00000002;
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 channel = 2;</code>
       */
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channel_ = 0;
        onChanged();
        return this;
      }

      // optional int32 baseAux = 3;
      private int baseAux_ ;
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public boolean hasBaseAux() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public int getBaseAux() {
        return baseAux_;
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public Builder setBaseAux(int value) {
        bitField0_ |= 0x00000004;
        baseAux_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 baseAux = 3;</code>
       */
      public Builder clearBaseAux() {
        bitField0_ = (bitField0_ & ~0x00000004);
        baseAux_ = 0;
        onChanged();
        return this;
      }

      // optional string args = 4 [default = "addr=192.168.10.2"];
      private java.lang.Object args_ = "addr=192.168.10.2";
      /**
       * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
       */
      public boolean hasArgs() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
       */
      public java.lang.String getArgs() {
        java.lang.Object ref = args_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          args_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
       */
      public com.google.protobuf.ByteString
          getArgsBytes() {
        java.lang.Object ref = args_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          args_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
       */
      public Builder setArgs(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        args_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
       */
      public Builder clearArgs() {
        bitField0_ = (bitField0_ & ~0x00000008);
        args_ = getDefaultInstance().getArgs();
        onChanged();
        return this;
      }
      /**
       * <code>optional string args = 4 [default = "addr=192.168.10.2"];</code>
       */
      public Builder setArgsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        args_ = value;
        onChanged();
        return this;
      }

      // optional int32 usrpchan = 5;
      private int usrpchan_ ;
      /**
       * <code>optional int32 usrpchan = 5;</code>
       */
      public boolean hasUsrpchan() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 usrpchan = 5;</code>
       */
      public int getUsrpchan() {
        return usrpchan_;
      }
      /**
       * <code>optional int32 usrpchan = 5;</code>
       */
      public Builder setUsrpchan(int value) {
        bitField0_ |= 0x00000010;
        usrpchan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 usrpchan = 5;</code>
       */
      public Builder clearUsrpchan() {
        bitField0_ = (bitField0_ & ~0x00000010);
        usrpchan_ = 0;
        onChanged();
        return this;
      }

      // optional float minRF = 6;
      private float minRF_ ;
      /**
       * <code>optional float minRF = 6;</code>
       */
      public boolean hasMinRF() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float minRF = 6;</code>
       */
      public float getMinRF() {
        return minRF_;
      }
      /**
       * <code>optional float minRF = 6;</code>
       */
      public Builder setMinRF(float value) {
        bitField0_ |= 0x00000020;
        minRF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float minRF = 6;</code>
       */
      public Builder clearMinRF() {
        bitField0_ = (bitField0_ & ~0x00000020);
        minRF_ = 0F;
        onChanged();
        return this;
      }

      // optional float maxRF = 7;
      private float maxRF_ ;
      /**
       * <code>optional float maxRF = 7;</code>
       */
      public boolean hasMaxRF() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float maxRF = 7;</code>
       */
      public float getMaxRF() {
        return maxRF_;
      }
      /**
       * <code>optional float maxRF = 7;</code>
       */
      public Builder setMaxRF(float value) {
        bitField0_ |= 0x00000040;
        maxRF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxRF = 7;</code>
       */
      public Builder clearMaxRF() {
        bitField0_ = (bitField0_ & ~0x00000040);
        maxRF_ = 0F;
        onChanged();
        return this;
      }

      // optional float fs = 8 [default = 1e+08];
      private float fs_ = 1e+08F;
      /**
       * <code>optional float fs = 8 [default = 1e+08];</code>
       */
      public boolean hasFs() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float fs = 8 [default = 1e+08];</code>
       */
      public float getFs() {
        return fs_;
      }
      /**
       * <code>optional float fs = 8 [default = 1e+08];</code>
       */
      public Builder setFs(float value) {
        bitField0_ |= 0x00000080;
        fs_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float fs = 8 [default = 1e+08];</code>
       */
      public Builder clearFs() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fs_ = 1e+08F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.USRPRxConfig)
    }

    static {
      defaultInstance = new USRPRxConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.USRPRxConfig)
  }

  public interface PentekConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "PENTEK_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "PENTEK_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "PENTEK_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "PENTEK_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional float clkFreq = 2 [default = 4e+08];
    /**
     * <code>optional float clkFreq = 2 [default = 4e+08];</code>
     */
    boolean hasClkFreq();
    /**
     * <code>optional float clkFreq = 2 [default = 4e+08];</code>
     */
    float getClkFreq();

    // optional int32 dacInterp = 3 [default = 16];
    /**
     * <code>optional int32 dacInterp = 3 [default = 16];</code>
     */
    boolean hasDacInterp();
    /**
     * <code>optional int32 dacInterp = 3 [default = 16];</code>
     */
    int getDacInterp();

    // optional int32 coreInterp = 4 [default = 1];
    /**
     * <code>optional int32 coreInterp = 4 [default = 1];</code>
     */
    boolean hasCoreInterp();
    /**
     * <code>optional int32 coreInterp = 4 [default = 1];</code>
     */
    int getCoreInterp();

    // optional int32 baseChan = 5 [default = 1];
    /**
     * <code>optional int32 baseChan = 5 [default = 1];</code>
     */
    boolean hasBaseChan();
    /**
     * <code>optional int32 baseChan = 5 [default = 1];</code>
     */
    int getBaseChan();

    // optional int32 numBuffers = 6 [default = 2];
    /**
     * <code>optional int32 numBuffers = 6 [default = 2];</code>
     */
    boolean hasNumBuffers();
    /**
     * <code>optional int32 numBuffers = 6 [default = 2];</code>
     */
    int getNumBuffers();

    // optional float freqShift = 7 [default = 0];
    /**
     * <code>optional float freqShift = 7 [default = 0];</code>
     */
    boolean hasFreqShift();
    /**
     * <code>optional float freqShift = 7 [default = 0];</code>
     */
    float getFreqShift();

    // optional string siggenIP = 8;
    /**
     * <code>optional string siggenIP = 8;</code>
     */
    boolean hasSiggenIP();
    /**
     * <code>optional string siggenIP = 8;</code>
     */
    java.lang.String getSiggenIP();
    /**
     * <code>optional string siggenIP = 8;</code>
     */
    com.google.protobuf.ByteString
        getSiggenIPBytes();

    // optional .falcon_res_msg.PentekConfig.SiggenType siggenType = 9 [default = ROHDE_SCHWARZ];
    /**
     * <code>optional .falcon_res_msg.PentekConfig.SiggenType siggenType = 9 [default = ROHDE_SCHWARZ];</code>
     */
    boolean hasSiggenType();
    /**
     * <code>optional .falcon_res_msg.PentekConfig.SiggenType siggenType = 9 [default = ROHDE_SCHWARZ];</code>
     */
    fv.protos.kepsvisor.FalconResourceMessages.PentekConfig.SiggenType getSiggenType();
  }
  /**
   * Protobuf type {@code falcon_res_msg.PentekConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the Pentek resource.  These are populated
   * by ResourcePentek.configureMessage() and from resources.xml.
   *
   * msgName: PENTEK_CONFIG, used to identify the message
   * clkFreq: DAC clock frequency in Hz
   * dacInterp: DAC interpolation factor
   * coreInterp: FPGA interpolation factor
   * baseChan: Base interpolator channel (1 or 3)
   * numBuffers: Number of buffers of samples (xferlen long, min 2)
   * freqShift: Frequency shift on the Pentek
   * siggenIP: IP of the signal generator
   * siggenType: Type of Signal Generator
   * </pre>
   */
  public static final class PentekConfig extends
      com.google.protobuf.GeneratedMessage
      implements PentekConfigOrBuilder {
    // Use PentekConfig.newBuilder() to construct.
    private PentekConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PentekConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PentekConfig defaultInstance;
    public static PentekConfig getDefaultInstance() {
      return defaultInstance;
    }

    public PentekConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PentekConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              clkFreq_ = input.readFloat();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              dacInterp_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              coreInterp_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              baseChan_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              numBuffers_ = input.readInt32();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              freqShift_ = input.readFloat();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              siggenIP_ = input.readBytes();
              break;
            }
            case 72: {
              int rawValue = input.readEnum();
              fv.protos.kepsvisor.FalconResourceMessages.PentekConfig.SiggenType value = fv.protos.kepsvisor.FalconResourceMessages.PentekConfig.SiggenType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(9, rawValue);
              } else {
                bitField0_ |= 0x00000100;
                siggenType_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_PentekConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_PentekConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.PentekConfig.class, fv.protos.kepsvisor.FalconResourceMessages.PentekConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<PentekConfig> PARSER =
        new com.google.protobuf.AbstractParser<PentekConfig>() {
      public PentekConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PentekConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PentekConfig> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code falcon_res_msg.PentekConfig.SiggenType}
     */
    public enum SiggenType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>ROHDE_SCHWARZ = 0;</code>
       */
      ROHDE_SCHWARZ(0, 0),
      /**
       * <code>MMS_MUP = 1;</code>
       */
      MMS_MUP(1, 1),
      ;

      /**
       * <code>ROHDE_SCHWARZ = 0;</code>
       */
      public static final int ROHDE_SCHWARZ_VALUE = 0;
      /**
       * <code>MMS_MUP = 1;</code>
       */
      public static final int MMS_MUP_VALUE = 1;


      public final int getNumber() { return value; }

      public static SiggenType valueOf(int value) {
        switch (value) {
          case 0: return ROHDE_SCHWARZ;
          case 1: return MMS_MUP;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SiggenType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<SiggenType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SiggenType>() {
              public SiggenType findValueByNumber(int number) {
                return SiggenType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.PentekConfig.getDescriptor().getEnumTypes().get(0);
      }

      private static final SiggenType[] VALUES = values();

      public static SiggenType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private SiggenType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:falcon_res_msg.PentekConfig.SiggenType)
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "PENTEK_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "PENTEK_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "PENTEK_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "PENTEK_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional float clkFreq = 2 [default = 4e+08];
    public static final int CLKFREQ_FIELD_NUMBER = 2;
    private float clkFreq_;
    /**
     * <code>optional float clkFreq = 2 [default = 4e+08];</code>
     */
    public boolean hasClkFreq() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float clkFreq = 2 [default = 4e+08];</code>
     */
    public float getClkFreq() {
      return clkFreq_;
    }

    // optional int32 dacInterp = 3 [default = 16];
    public static final int DACINTERP_FIELD_NUMBER = 3;
    private int dacInterp_;
    /**
     * <code>optional int32 dacInterp = 3 [default = 16];</code>
     */
    public boolean hasDacInterp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 dacInterp = 3 [default = 16];</code>
     */
    public int getDacInterp() {
      return dacInterp_;
    }

    // optional int32 coreInterp = 4 [default = 1];
    public static final int COREINTERP_FIELD_NUMBER = 4;
    private int coreInterp_;
    /**
     * <code>optional int32 coreInterp = 4 [default = 1];</code>
     */
    public boolean hasCoreInterp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 coreInterp = 4 [default = 1];</code>
     */
    public int getCoreInterp() {
      return coreInterp_;
    }

    // optional int32 baseChan = 5 [default = 1];
    public static final int BASECHAN_FIELD_NUMBER = 5;
    private int baseChan_;
    /**
     * <code>optional int32 baseChan = 5 [default = 1];</code>
     */
    public boolean hasBaseChan() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 baseChan = 5 [default = 1];</code>
     */
    public int getBaseChan() {
      return baseChan_;
    }

    // optional int32 numBuffers = 6 [default = 2];
    public static final int NUMBUFFERS_FIELD_NUMBER = 6;
    private int numBuffers_;
    /**
     * <code>optional int32 numBuffers = 6 [default = 2];</code>
     */
    public boolean hasNumBuffers() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 numBuffers = 6 [default = 2];</code>
     */
    public int getNumBuffers() {
      return numBuffers_;
    }

    // optional float freqShift = 7 [default = 0];
    public static final int FREQSHIFT_FIELD_NUMBER = 7;
    private float freqShift_;
    /**
     * <code>optional float freqShift = 7 [default = 0];</code>
     */
    public boolean hasFreqShift() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float freqShift = 7 [default = 0];</code>
     */
    public float getFreqShift() {
      return freqShift_;
    }

    // optional string siggenIP = 8;
    public static final int SIGGENIP_FIELD_NUMBER = 8;
    private java.lang.Object siggenIP_;
    /**
     * <code>optional string siggenIP = 8;</code>
     */
    public boolean hasSiggenIP() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string siggenIP = 8;</code>
     */
    public java.lang.String getSiggenIP() {
      java.lang.Object ref = siggenIP_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          siggenIP_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string siggenIP = 8;</code>
     */
    public com.google.protobuf.ByteString
        getSiggenIPBytes() {
      java.lang.Object ref = siggenIP_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        siggenIP_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .falcon_res_msg.PentekConfig.SiggenType siggenType = 9 [default = ROHDE_SCHWARZ];
    public static final int SIGGENTYPE_FIELD_NUMBER = 9;
    private fv.protos.kepsvisor.FalconResourceMessages.PentekConfig.SiggenType siggenType_;
    /**
     * <code>optional .falcon_res_msg.PentekConfig.SiggenType siggenType = 9 [default = ROHDE_SCHWARZ];</code>
     */
    public boolean hasSiggenType() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .falcon_res_msg.PentekConfig.SiggenType siggenType = 9 [default = ROHDE_SCHWARZ];</code>
     */
    public fv.protos.kepsvisor.FalconResourceMessages.PentekConfig.SiggenType getSiggenType() {
      return siggenType_;
    }

    private void initFields() {
      msgName_ = "PENTEK_CONFIG";
      clkFreq_ = 4e+08F;
      dacInterp_ = 16;
      coreInterp_ = 1;
      baseChan_ = 1;
      numBuffers_ = 2;
      freqShift_ = 0F;
      siggenIP_ = "";
      siggenType_ = fv.protos.kepsvisor.FalconResourceMessages.PentekConfig.SiggenType.ROHDE_SCHWARZ;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, clkFreq_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, dacInterp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, coreInterp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, baseChan_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, numBuffers_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, freqShift_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getSiggenIPBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeEnum(9, siggenType_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, clkFreq_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, dacInterp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, coreInterp_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, baseChan_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, numBuffers_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, freqShift_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getSiggenIPBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, siggenType_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.PentekConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.PentekConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.PentekConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.PentekConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.PentekConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.PentekConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.PentekConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.PentekConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.PentekConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.PentekConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.PentekConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.PentekConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the Pentek resource.  These are populated
     * by ResourcePentek.configureMessage() and from resources.xml.
     *
     * msgName: PENTEK_CONFIG, used to identify the message
     * clkFreq: DAC clock frequency in Hz
     * dacInterp: DAC interpolation factor
     * coreInterp: FPGA interpolation factor
     * baseChan: Base interpolator channel (1 or 3)
     * numBuffers: Number of buffers of samples (xferlen long, min 2)
     * freqShift: Frequency shift on the Pentek
     * siggenIP: IP of the signal generator
     * siggenType: Type of Signal Generator
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.PentekConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_PentekConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_PentekConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.PentekConfig.class, fv.protos.kepsvisor.FalconResourceMessages.PentekConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.PentekConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "PENTEK_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        clkFreq_ = 4e+08F;
        bitField0_ = (bitField0_ & ~0x00000002);
        dacInterp_ = 16;
        bitField0_ = (bitField0_ & ~0x00000004);
        coreInterp_ = 1;
        bitField0_ = (bitField0_ & ~0x00000008);
        baseChan_ = 1;
        bitField0_ = (bitField0_ & ~0x00000010);
        numBuffers_ = 2;
        bitField0_ = (bitField0_ & ~0x00000020);
        freqShift_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        siggenIP_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        siggenType_ = fv.protos.kepsvisor.FalconResourceMessages.PentekConfig.SiggenType.ROHDE_SCHWARZ;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_PentekConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.PentekConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.PentekConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.PentekConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.PentekConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.PentekConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.PentekConfig result = new fv.protos.kepsvisor.FalconResourceMessages.PentekConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.clkFreq_ = clkFreq_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dacInterp_ = dacInterp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.coreInterp_ = coreInterp_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.baseChan_ = baseChan_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.numBuffers_ = numBuffers_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.freqShift_ = freqShift_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.siggenIP_ = siggenIP_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.siggenType_ = siggenType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.PentekConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.PentekConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.PentekConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.PentekConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasClkFreq()) {
          setClkFreq(other.getClkFreq());
        }
        if (other.hasDacInterp()) {
          setDacInterp(other.getDacInterp());
        }
        if (other.hasCoreInterp()) {
          setCoreInterp(other.getCoreInterp());
        }
        if (other.hasBaseChan()) {
          setBaseChan(other.getBaseChan());
        }
        if (other.hasNumBuffers()) {
          setNumBuffers(other.getNumBuffers());
        }
        if (other.hasFreqShift()) {
          setFreqShift(other.getFreqShift());
        }
        if (other.hasSiggenIP()) {
          bitField0_ |= 0x00000080;
          siggenIP_ = other.siggenIP_;
          onChanged();
        }
        if (other.hasSiggenType()) {
          setSiggenType(other.getSiggenType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.PentekConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.PentekConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "PENTEK_CONFIG"];
      private java.lang.Object msgName_ = "PENTEK_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "PENTEK_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "PENTEK_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "PENTEK_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "PENTEK_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "PENTEK_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "PENTEK_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional float clkFreq = 2 [default = 4e+08];
      private float clkFreq_ = 4e+08F;
      /**
       * <code>optional float clkFreq = 2 [default = 4e+08];</code>
       */
      public boolean hasClkFreq() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float clkFreq = 2 [default = 4e+08];</code>
       */
      public float getClkFreq() {
        return clkFreq_;
      }
      /**
       * <code>optional float clkFreq = 2 [default = 4e+08];</code>
       */
      public Builder setClkFreq(float value) {
        bitField0_ |= 0x00000002;
        clkFreq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float clkFreq = 2 [default = 4e+08];</code>
       */
      public Builder clearClkFreq() {
        bitField0_ = (bitField0_ & ~0x00000002);
        clkFreq_ = 4e+08F;
        onChanged();
        return this;
      }

      // optional int32 dacInterp = 3 [default = 16];
      private int dacInterp_ = 16;
      /**
       * <code>optional int32 dacInterp = 3 [default = 16];</code>
       */
      public boolean hasDacInterp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 dacInterp = 3 [default = 16];</code>
       */
      public int getDacInterp() {
        return dacInterp_;
      }
      /**
       * <code>optional int32 dacInterp = 3 [default = 16];</code>
       */
      public Builder setDacInterp(int value) {
        bitField0_ |= 0x00000004;
        dacInterp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dacInterp = 3 [default = 16];</code>
       */
      public Builder clearDacInterp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dacInterp_ = 16;
        onChanged();
        return this;
      }

      // optional int32 coreInterp = 4 [default = 1];
      private int coreInterp_ = 1;
      /**
       * <code>optional int32 coreInterp = 4 [default = 1];</code>
       */
      public boolean hasCoreInterp() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 coreInterp = 4 [default = 1];</code>
       */
      public int getCoreInterp() {
        return coreInterp_;
      }
      /**
       * <code>optional int32 coreInterp = 4 [default = 1];</code>
       */
      public Builder setCoreInterp(int value) {
        bitField0_ |= 0x00000008;
        coreInterp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 coreInterp = 4 [default = 1];</code>
       */
      public Builder clearCoreInterp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        coreInterp_ = 1;
        onChanged();
        return this;
      }

      // optional int32 baseChan = 5 [default = 1];
      private int baseChan_ = 1;
      /**
       * <code>optional int32 baseChan = 5 [default = 1];</code>
       */
      public boolean hasBaseChan() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 baseChan = 5 [default = 1];</code>
       */
      public int getBaseChan() {
        return baseChan_;
      }
      /**
       * <code>optional int32 baseChan = 5 [default = 1];</code>
       */
      public Builder setBaseChan(int value) {
        bitField0_ |= 0x00000010;
        baseChan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 baseChan = 5 [default = 1];</code>
       */
      public Builder clearBaseChan() {
        bitField0_ = (bitField0_ & ~0x00000010);
        baseChan_ = 1;
        onChanged();
        return this;
      }

      // optional int32 numBuffers = 6 [default = 2];
      private int numBuffers_ = 2;
      /**
       * <code>optional int32 numBuffers = 6 [default = 2];</code>
       */
      public boolean hasNumBuffers() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 numBuffers = 6 [default = 2];</code>
       */
      public int getNumBuffers() {
        return numBuffers_;
      }
      /**
       * <code>optional int32 numBuffers = 6 [default = 2];</code>
       */
      public Builder setNumBuffers(int value) {
        bitField0_ |= 0x00000020;
        numBuffers_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 numBuffers = 6 [default = 2];</code>
       */
      public Builder clearNumBuffers() {
        bitField0_ = (bitField0_ & ~0x00000020);
        numBuffers_ = 2;
        onChanged();
        return this;
      }

      // optional float freqShift = 7 [default = 0];
      private float freqShift_ ;
      /**
       * <code>optional float freqShift = 7 [default = 0];</code>
       */
      public boolean hasFreqShift() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float freqShift = 7 [default = 0];</code>
       */
      public float getFreqShift() {
        return freqShift_;
      }
      /**
       * <code>optional float freqShift = 7 [default = 0];</code>
       */
      public Builder setFreqShift(float value) {
        bitField0_ |= 0x00000040;
        freqShift_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float freqShift = 7 [default = 0];</code>
       */
      public Builder clearFreqShift() {
        bitField0_ = (bitField0_ & ~0x00000040);
        freqShift_ = 0F;
        onChanged();
        return this;
      }

      // optional string siggenIP = 8;
      private java.lang.Object siggenIP_ = "";
      /**
       * <code>optional string siggenIP = 8;</code>
       */
      public boolean hasSiggenIP() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string siggenIP = 8;</code>
       */
      public java.lang.String getSiggenIP() {
        java.lang.Object ref = siggenIP_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          siggenIP_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string siggenIP = 8;</code>
       */
      public com.google.protobuf.ByteString
          getSiggenIPBytes() {
        java.lang.Object ref = siggenIP_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          siggenIP_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string siggenIP = 8;</code>
       */
      public Builder setSiggenIP(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        siggenIP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string siggenIP = 8;</code>
       */
      public Builder clearSiggenIP() {
        bitField0_ = (bitField0_ & ~0x00000080);
        siggenIP_ = getDefaultInstance().getSiggenIP();
        onChanged();
        return this;
      }
      /**
       * <code>optional string siggenIP = 8;</code>
       */
      public Builder setSiggenIPBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        siggenIP_ = value;
        onChanged();
        return this;
      }

      // optional .falcon_res_msg.PentekConfig.SiggenType siggenType = 9 [default = ROHDE_SCHWARZ];
      private fv.protos.kepsvisor.FalconResourceMessages.PentekConfig.SiggenType siggenType_ = fv.protos.kepsvisor.FalconResourceMessages.PentekConfig.SiggenType.ROHDE_SCHWARZ;
      /**
       * <code>optional .falcon_res_msg.PentekConfig.SiggenType siggenType = 9 [default = ROHDE_SCHWARZ];</code>
       */
      public boolean hasSiggenType() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .falcon_res_msg.PentekConfig.SiggenType siggenType = 9 [default = ROHDE_SCHWARZ];</code>
       */
      public fv.protos.kepsvisor.FalconResourceMessages.PentekConfig.SiggenType getSiggenType() {
        return siggenType_;
      }
      /**
       * <code>optional .falcon_res_msg.PentekConfig.SiggenType siggenType = 9 [default = ROHDE_SCHWARZ];</code>
       */
      public Builder setSiggenType(fv.protos.kepsvisor.FalconResourceMessages.PentekConfig.SiggenType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        siggenType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .falcon_res_msg.PentekConfig.SiggenType siggenType = 9 [default = ROHDE_SCHWARZ];</code>
       */
      public Builder clearSiggenType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        siggenType_ = fv.protos.kepsvisor.FalconResourceMessages.PentekConfig.SiggenType.ROHDE_SCHWARZ;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.PentekConfig)
    }

    static {
      defaultInstance = new PentekConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.PentekConfig)
  }

  public interface USRPTxConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "USRP_TX_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "USRP_TX_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "USRP_TX_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "USRP_TX_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional string args = 2 [default = "addr=192.168.10.2"];
    /**
     * <code>optional string args = 2 [default = "addr=192.168.10.2"];</code>
     */
    boolean hasArgs();
    /**
     * <code>optional string args = 2 [default = "addr=192.168.10.2"];</code>
     */
    java.lang.String getArgs();
    /**
     * <code>optional string args = 2 [default = "addr=192.168.10.2"];</code>
     */
    com.google.protobuf.ByteString
        getArgsBytes();

    // optional int32 usrpchan = 3;
    /**
     * <code>optional int32 usrpchan = 3;</code>
     */
    boolean hasUsrpchan();
    /**
     * <code>optional int32 usrpchan = 3;</code>
     */
    int getUsrpchan();

    // optional float minRF = 4;
    /**
     * <code>optional float minRF = 4;</code>
     */
    boolean hasMinRF();
    /**
     * <code>optional float minRF = 4;</code>
     */
    float getMinRF();

    // optional float maxRF = 5;
    /**
     * <code>optional float maxRF = 5;</code>
     */
    boolean hasMaxRF();
    /**
     * <code>optional float maxRF = 5;</code>
     */
    float getMaxRF();
  }
  /**
   * Protobuf type {@code falcon_res_msg.USRPTxConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the USRP Tx resource.  These are populated
   * by ResourceUSRPTx.configureMessage() and from resources.xml.
   *
   * msgName: USRP_TX_CONFIG, used to identify the message
   * args: Default arguments to send to the USRP
   * usrpchan: Transmitter number to use
   * minRF: Minimum RF used for receiving
   * maxRF: Maximum RF used for receiving
   * </pre>
   */
  public static final class USRPTxConfig extends
      com.google.protobuf.GeneratedMessage
      implements USRPTxConfigOrBuilder {
    // Use USRPTxConfig.newBuilder() to construct.
    private USRPTxConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private USRPTxConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final USRPTxConfig defaultInstance;
    public static USRPTxConfig getDefaultInstance() {
      return defaultInstance;
    }

    public USRPTxConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private USRPTxConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              args_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              usrpchan_ = input.readInt32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              minRF_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              maxRF_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_USRPTxConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_USRPTxConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig.class, fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<USRPTxConfig> PARSER =
        new com.google.protobuf.AbstractParser<USRPTxConfig>() {
      public USRPTxConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new USRPTxConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<USRPTxConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "USRP_TX_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "USRP_TX_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "USRP_TX_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "USRP_TX_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string args = 2 [default = "addr=192.168.10.2"];
    public static final int ARGS_FIELD_NUMBER = 2;
    private java.lang.Object args_;
    /**
     * <code>optional string args = 2 [default = "addr=192.168.10.2"];</code>
     */
    public boolean hasArgs() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string args = 2 [default = "addr=192.168.10.2"];</code>
     */
    public java.lang.String getArgs() {
      java.lang.Object ref = args_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          args_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string args = 2 [default = "addr=192.168.10.2"];</code>
     */
    public com.google.protobuf.ByteString
        getArgsBytes() {
      java.lang.Object ref = args_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        args_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 usrpchan = 3;
    public static final int USRPCHAN_FIELD_NUMBER = 3;
    private int usrpchan_;
    /**
     * <code>optional int32 usrpchan = 3;</code>
     */
    public boolean hasUsrpchan() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 usrpchan = 3;</code>
     */
    public int getUsrpchan() {
      return usrpchan_;
    }

    // optional float minRF = 4;
    public static final int MINRF_FIELD_NUMBER = 4;
    private float minRF_;
    /**
     * <code>optional float minRF = 4;</code>
     */
    public boolean hasMinRF() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float minRF = 4;</code>
     */
    public float getMinRF() {
      return minRF_;
    }

    // optional float maxRF = 5;
    public static final int MAXRF_FIELD_NUMBER = 5;
    private float maxRF_;
    /**
     * <code>optional float maxRF = 5;</code>
     */
    public boolean hasMaxRF() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float maxRF = 5;</code>
     */
    public float getMaxRF() {
      return maxRF_;
    }

    private void initFields() {
      msgName_ = "USRP_TX_CONFIG";
      args_ = "addr=192.168.10.2";
      usrpchan_ = 0;
      minRF_ = 0F;
      maxRF_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getArgsBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, usrpchan_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, minRF_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, maxRF_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getArgsBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, usrpchan_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, minRF_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, maxRF_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.USRPTxConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the USRP Tx resource.  These are populated
     * by ResourceUSRPTx.configureMessage() and from resources.xml.
     *
     * msgName: USRP_TX_CONFIG, used to identify the message
     * args: Default arguments to send to the USRP
     * usrpchan: Transmitter number to use
     * minRF: Minimum RF used for receiving
     * maxRF: Maximum RF used for receiving
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_USRPTxConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_USRPTxConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig.class, fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "USRP_TX_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        args_ = "addr=192.168.10.2";
        bitField0_ = (bitField0_ & ~0x00000002);
        usrpchan_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        minRF_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxRF_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_USRPTxConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig result = new fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.args_ = args_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.usrpchan_ = usrpchan_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.minRF_ = minRF_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.maxRF_ = maxRF_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasArgs()) {
          bitField0_ |= 0x00000002;
          args_ = other.args_;
          onChanged();
        }
        if (other.hasUsrpchan()) {
          setUsrpchan(other.getUsrpchan());
        }
        if (other.hasMinRF()) {
          setMinRF(other.getMinRF());
        }
        if (other.hasMaxRF()) {
          setMaxRF(other.getMaxRF());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.USRPTxConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "USRP_TX_CONFIG"];
      private java.lang.Object msgName_ = "USRP_TX_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "USRP_TX_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "USRP_TX_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "USRP_TX_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "USRP_TX_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "USRP_TX_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "USRP_TX_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional string args = 2 [default = "addr=192.168.10.2"];
      private java.lang.Object args_ = "addr=192.168.10.2";
      /**
       * <code>optional string args = 2 [default = "addr=192.168.10.2"];</code>
       */
      public boolean hasArgs() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string args = 2 [default = "addr=192.168.10.2"];</code>
       */
      public java.lang.String getArgs() {
        java.lang.Object ref = args_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          args_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string args = 2 [default = "addr=192.168.10.2"];</code>
       */
      public com.google.protobuf.ByteString
          getArgsBytes() {
        java.lang.Object ref = args_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          args_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string args = 2 [default = "addr=192.168.10.2"];</code>
       */
      public Builder setArgs(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        args_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string args = 2 [default = "addr=192.168.10.2"];</code>
       */
      public Builder clearArgs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        args_ = getDefaultInstance().getArgs();
        onChanged();
        return this;
      }
      /**
       * <code>optional string args = 2 [default = "addr=192.168.10.2"];</code>
       */
      public Builder setArgsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        args_ = value;
        onChanged();
        return this;
      }

      // optional int32 usrpchan = 3;
      private int usrpchan_ ;
      /**
       * <code>optional int32 usrpchan = 3;</code>
       */
      public boolean hasUsrpchan() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 usrpchan = 3;</code>
       */
      public int getUsrpchan() {
        return usrpchan_;
      }
      /**
       * <code>optional int32 usrpchan = 3;</code>
       */
      public Builder setUsrpchan(int value) {
        bitField0_ |= 0x00000004;
        usrpchan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 usrpchan = 3;</code>
       */
      public Builder clearUsrpchan() {
        bitField0_ = (bitField0_ & ~0x00000004);
        usrpchan_ = 0;
        onChanged();
        return this;
      }

      // optional float minRF = 4;
      private float minRF_ ;
      /**
       * <code>optional float minRF = 4;</code>
       */
      public boolean hasMinRF() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float minRF = 4;</code>
       */
      public float getMinRF() {
        return minRF_;
      }
      /**
       * <code>optional float minRF = 4;</code>
       */
      public Builder setMinRF(float value) {
        bitField0_ |= 0x00000008;
        minRF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float minRF = 4;</code>
       */
      public Builder clearMinRF() {
        bitField0_ = (bitField0_ & ~0x00000008);
        minRF_ = 0F;
        onChanged();
        return this;
      }

      // optional float maxRF = 5;
      private float maxRF_ ;
      /**
       * <code>optional float maxRF = 5;</code>
       */
      public boolean hasMaxRF() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float maxRF = 5;</code>
       */
      public float getMaxRF() {
        return maxRF_;
      }
      /**
       * <code>optional float maxRF = 5;</code>
       */
      public Builder setMaxRF(float value) {
        bitField0_ |= 0x00000010;
        maxRF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxRF = 5;</code>
       */
      public Builder clearMaxRF() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxRF_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.USRPTxConfig)
    }

    static {
      defaultInstance = new USRPTxConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.USRPTxConfig)
  }

  public interface RFSwitchConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "RFSWITCH_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "RFSWITCH_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "RFSWITCH_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "RFSWITCH_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional string IP = 2 [default = "nportserver"];
    /**
     * <code>optional string IP = 2 [default = "nportserver"];</code>
     */
    boolean hasIP();
    /**
     * <code>optional string IP = 2 [default = "nportserver"];</code>
     */
    java.lang.String getIP();
    /**
     * <code>optional string IP = 2 [default = "nportserver"];</code>
     */
    com.google.protobuf.ByteString
        getIPBytes();

    // optional int32 slaveTimeout = 3 [default = 180];
    /**
     * <code>optional int32 slaveTimeout = 3 [default = 180];</code>
     *
     * <pre>
     * 3 minutes
     * </pre>
     */
    boolean hasSlaveTimeout();
    /**
     * <code>optional int32 slaveTimeout = 3 [default = 180];</code>
     *
     * <pre>
     * 3 minutes
     * </pre>
     */
    int getSlaveTimeout();

    // optional float energyScanSec = 4 [default = 10];
    /**
     * <code>optional float energyScanSec = 4 [default = 10];</code>
     */
    boolean hasEnergyScanSec();
    /**
     * <code>optional float energyScanSec = 4 [default = 10];</code>
     */
    float getEnergyScanSec();

    // optional float energyTrackTime = 5 [default = 300];
    /**
     * <code>optional float energyTrackTime = 5 [default = 300];</code>
     */
    boolean hasEnergyTrackTime();
    /**
     * <code>optional float energyTrackTime = 5 [default = 300];</code>
     */
    float getEnergyTrackTime();

    // optional int32 port = 6 [default = 4003];
    /**
     * <code>optional int32 port = 6 [default = 4003];</code>
     */
    boolean hasPort();
    /**
     * <code>optional int32 port = 6 [default = 4003];</code>
     */
    int getPort();

    // optional bool setOnLaunch = 7 [default = false];
    /**
     * <code>optional bool setOnLaunch = 7 [default = false];</code>
     */
    boolean hasSetOnLaunch();
    /**
     * <code>optional bool setOnLaunch = 7 [default = false];</code>
     */
    boolean getSetOnLaunch();
  }
  /**
   * Protobuf type {@code falcon_res_msg.RFSwitchConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the RF switch resource.  These are populated
   * by ResourceRFSwitch.configureMessage() and from resources.xml.
   *
   * msgName: RFSWITCH_CONFIG, used to identify the message
   * IP: IP of the rf switch or hostname
   * slaveTimeout: Timeout in seconds
   * energyScanSec: Number of seconds to stay on each port when energy scanning
   * energyTrackTime: Number of seconds between energy tracks
   * </pre>
   */
  public static final class RFSwitchConfig extends
      com.google.protobuf.GeneratedMessage
      implements RFSwitchConfigOrBuilder {
    // Use RFSwitchConfig.newBuilder() to construct.
    private RFSwitchConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RFSwitchConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RFSwitchConfig defaultInstance;
    public static RFSwitchConfig getDefaultInstance() {
      return defaultInstance;
    }

    public RFSwitchConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RFSwitchConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              iP_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              slaveTimeout_ = input.readInt32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              energyScanSec_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              energyTrackTime_ = input.readFloat();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              port_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              setOnLaunch_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RFSwitchConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RFSwitchConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig.class, fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<RFSwitchConfig> PARSER =
        new com.google.protobuf.AbstractParser<RFSwitchConfig>() {
      public RFSwitchConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RFSwitchConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RFSwitchConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "RFSWITCH_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "RFSWITCH_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "RFSWITCH_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "RFSWITCH_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string IP = 2 [default = "nportserver"];
    public static final int IP_FIELD_NUMBER = 2;
    private java.lang.Object iP_;
    /**
     * <code>optional string IP = 2 [default = "nportserver"];</code>
     */
    public boolean hasIP() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string IP = 2 [default = "nportserver"];</code>
     */
    public java.lang.String getIP() {
      java.lang.Object ref = iP_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          iP_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string IP = 2 [default = "nportserver"];</code>
     */
    public com.google.protobuf.ByteString
        getIPBytes() {
      java.lang.Object ref = iP_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        iP_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 slaveTimeout = 3 [default = 180];
    public static final int SLAVETIMEOUT_FIELD_NUMBER = 3;
    private int slaveTimeout_;
    /**
     * <code>optional int32 slaveTimeout = 3 [default = 180];</code>
     *
     * <pre>
     * 3 minutes
     * </pre>
     */
    public boolean hasSlaveTimeout() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 slaveTimeout = 3 [default = 180];</code>
     *
     * <pre>
     * 3 minutes
     * </pre>
     */
    public int getSlaveTimeout() {
      return slaveTimeout_;
    }

    // optional float energyScanSec = 4 [default = 10];
    public static final int ENERGYSCANSEC_FIELD_NUMBER = 4;
    private float energyScanSec_;
    /**
     * <code>optional float energyScanSec = 4 [default = 10];</code>
     */
    public boolean hasEnergyScanSec() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float energyScanSec = 4 [default = 10];</code>
     */
    public float getEnergyScanSec() {
      return energyScanSec_;
    }

    // optional float energyTrackTime = 5 [default = 300];
    public static final int ENERGYTRACKTIME_FIELD_NUMBER = 5;
    private float energyTrackTime_;
    /**
     * <code>optional float energyTrackTime = 5 [default = 300];</code>
     */
    public boolean hasEnergyTrackTime() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float energyTrackTime = 5 [default = 300];</code>
     */
    public float getEnergyTrackTime() {
      return energyTrackTime_;
    }

    // optional int32 port = 6 [default = 4003];
    public static final int PORT_FIELD_NUMBER = 6;
    private int port_;
    /**
     * <code>optional int32 port = 6 [default = 4003];</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 port = 6 [default = 4003];</code>
     */
    public int getPort() {
      return port_;
    }

    // optional bool setOnLaunch = 7 [default = false];
    public static final int SETONLAUNCH_FIELD_NUMBER = 7;
    private boolean setOnLaunch_;
    /**
     * <code>optional bool setOnLaunch = 7 [default = false];</code>
     */
    public boolean hasSetOnLaunch() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool setOnLaunch = 7 [default = false];</code>
     */
    public boolean getSetOnLaunch() {
      return setOnLaunch_;
    }

    private void initFields() {
      msgName_ = "RFSWITCH_CONFIG";
      iP_ = "nportserver";
      slaveTimeout_ = 180;
      energyScanSec_ = 10F;
      energyTrackTime_ = 300F;
      port_ = 4003;
      setOnLaunch_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIPBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, slaveTimeout_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, energyScanSec_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, energyTrackTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, port_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, setOnLaunch_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIPBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, slaveTimeout_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, energyScanSec_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, energyTrackTime_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, port_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, setOnLaunch_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.RFSwitchConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the RF switch resource.  These are populated
     * by ResourceRFSwitch.configureMessage() and from resources.xml.
     *
     * msgName: RFSWITCH_CONFIG, used to identify the message
     * IP: IP of the rf switch or hostname
     * slaveTimeout: Timeout in seconds
     * energyScanSec: Number of seconds to stay on each port when energy scanning
     * energyTrackTime: Number of seconds between energy tracks
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RFSwitchConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RFSwitchConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig.class, fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "RFSWITCH_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        iP_ = "nportserver";
        bitField0_ = (bitField0_ & ~0x00000002);
        slaveTimeout_ = 180;
        bitField0_ = (bitField0_ & ~0x00000004);
        energyScanSec_ = 10F;
        bitField0_ = (bitField0_ & ~0x00000008);
        energyTrackTime_ = 300F;
        bitField0_ = (bitField0_ & ~0x00000010);
        port_ = 4003;
        bitField0_ = (bitField0_ & ~0x00000020);
        setOnLaunch_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RFSwitchConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig result = new fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.iP_ = iP_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.slaveTimeout_ = slaveTimeout_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.energyScanSec_ = energyScanSec_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.energyTrackTime_ = energyTrackTime_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.setOnLaunch_ = setOnLaunch_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasIP()) {
          bitField0_ |= 0x00000002;
          iP_ = other.iP_;
          onChanged();
        }
        if (other.hasSlaveTimeout()) {
          setSlaveTimeout(other.getSlaveTimeout());
        }
        if (other.hasEnergyScanSec()) {
          setEnergyScanSec(other.getEnergyScanSec());
        }
        if (other.hasEnergyTrackTime()) {
          setEnergyTrackTime(other.getEnergyTrackTime());
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasSetOnLaunch()) {
          setSetOnLaunch(other.getSetOnLaunch());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.RFSwitchConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "RFSWITCH_CONFIG"];
      private java.lang.Object msgName_ = "RFSWITCH_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "RFSWITCH_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "RFSWITCH_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "RFSWITCH_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "RFSWITCH_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "RFSWITCH_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "RFSWITCH_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional string IP = 2 [default = "nportserver"];
      private java.lang.Object iP_ = "nportserver";
      /**
       * <code>optional string IP = 2 [default = "nportserver"];</code>
       */
      public boolean hasIP() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string IP = 2 [default = "nportserver"];</code>
       */
      public java.lang.String getIP() {
        java.lang.Object ref = iP_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          iP_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string IP = 2 [default = "nportserver"];</code>
       */
      public com.google.protobuf.ByteString
          getIPBytes() {
        java.lang.Object ref = iP_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          iP_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string IP = 2 [default = "nportserver"];</code>
       */
      public Builder setIP(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string IP = 2 [default = "nportserver"];</code>
       */
      public Builder clearIP() {
        bitField0_ = (bitField0_ & ~0x00000002);
        iP_ = getDefaultInstance().getIP();
        onChanged();
        return this;
      }
      /**
       * <code>optional string IP = 2 [default = "nportserver"];</code>
       */
      public Builder setIPBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iP_ = value;
        onChanged();
        return this;
      }

      // optional int32 slaveTimeout = 3 [default = 180];
      private int slaveTimeout_ = 180;
      /**
       * <code>optional int32 slaveTimeout = 3 [default = 180];</code>
       *
       * <pre>
       * 3 minutes
       * </pre>
       */
      public boolean hasSlaveTimeout() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 slaveTimeout = 3 [default = 180];</code>
       *
       * <pre>
       * 3 minutes
       * </pre>
       */
      public int getSlaveTimeout() {
        return slaveTimeout_;
      }
      /**
       * <code>optional int32 slaveTimeout = 3 [default = 180];</code>
       *
       * <pre>
       * 3 minutes
       * </pre>
       */
      public Builder setSlaveTimeout(int value) {
        bitField0_ |= 0x00000004;
        slaveTimeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 slaveTimeout = 3 [default = 180];</code>
       *
       * <pre>
       * 3 minutes
       * </pre>
       */
      public Builder clearSlaveTimeout() {
        bitField0_ = (bitField0_ & ~0x00000004);
        slaveTimeout_ = 180;
        onChanged();
        return this;
      }

      // optional float energyScanSec = 4 [default = 10];
      private float energyScanSec_ = 10F;
      /**
       * <code>optional float energyScanSec = 4 [default = 10];</code>
       */
      public boolean hasEnergyScanSec() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float energyScanSec = 4 [default = 10];</code>
       */
      public float getEnergyScanSec() {
        return energyScanSec_;
      }
      /**
       * <code>optional float energyScanSec = 4 [default = 10];</code>
       */
      public Builder setEnergyScanSec(float value) {
        bitField0_ |= 0x00000008;
        energyScanSec_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float energyScanSec = 4 [default = 10];</code>
       */
      public Builder clearEnergyScanSec() {
        bitField0_ = (bitField0_ & ~0x00000008);
        energyScanSec_ = 10F;
        onChanged();
        return this;
      }

      // optional float energyTrackTime = 5 [default = 300];
      private float energyTrackTime_ = 300F;
      /**
       * <code>optional float energyTrackTime = 5 [default = 300];</code>
       */
      public boolean hasEnergyTrackTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float energyTrackTime = 5 [default = 300];</code>
       */
      public float getEnergyTrackTime() {
        return energyTrackTime_;
      }
      /**
       * <code>optional float energyTrackTime = 5 [default = 300];</code>
       */
      public Builder setEnergyTrackTime(float value) {
        bitField0_ |= 0x00000010;
        energyTrackTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float energyTrackTime = 5 [default = 300];</code>
       */
      public Builder clearEnergyTrackTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        energyTrackTime_ = 300F;
        onChanged();
        return this;
      }

      // optional int32 port = 6 [default = 4003];
      private int port_ = 4003;
      /**
       * <code>optional int32 port = 6 [default = 4003];</code>
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 port = 6 [default = 4003];</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <code>optional int32 port = 6 [default = 4003];</code>
       */
      public Builder setPort(int value) {
        bitField0_ |= 0x00000020;
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 port = 6 [default = 4003];</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        port_ = 4003;
        onChanged();
        return this;
      }

      // optional bool setOnLaunch = 7 [default = false];
      private boolean setOnLaunch_ ;
      /**
       * <code>optional bool setOnLaunch = 7 [default = false];</code>
       */
      public boolean hasSetOnLaunch() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool setOnLaunch = 7 [default = false];</code>
       */
      public boolean getSetOnLaunch() {
        return setOnLaunch_;
      }
      /**
       * <code>optional bool setOnLaunch = 7 [default = false];</code>
       */
      public Builder setSetOnLaunch(boolean value) {
        bitField0_ |= 0x00000040;
        setOnLaunch_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool setOnLaunch = 7 [default = false];</code>
       */
      public Builder clearSetOnLaunch() {
        bitField0_ = (bitField0_ & ~0x00000040);
        setOnLaunch_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.RFSwitchConfig)
    }

    static {
      defaultInstance = new RFSwitchConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.RFSwitchConfig)
  }

  public interface RFSwitchSerialConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "RFSWITCH_SERIAL_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "RFSWITCH_SERIAL_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "RFSWITCH_SERIAL_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "RFSWITCH_SERIAL_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional string device = 2 [default = "/dev/ttyS0"];
    /**
     * <code>optional string device = 2 [default = "/dev/ttyS0"];</code>
     */
    boolean hasDevice();
    /**
     * <code>optional string device = 2 [default = "/dev/ttyS0"];</code>
     */
    java.lang.String getDevice();
    /**
     * <code>optional string device = 2 [default = "/dev/ttyS0"];</code>
     */
    com.google.protobuf.ByteString
        getDeviceBytes();

    // optional int32 baud = 3 [default = 9600];
    /**
     * <code>optional int32 baud = 3 [default = 9600];</code>
     */
    boolean hasBaud();
    /**
     * <code>optional int32 baud = 3 [default = 9600];</code>
     */
    int getBaud();

    // optional int32 slaveTimeout = 4 [default = 180];
    /**
     * <code>optional int32 slaveTimeout = 4 [default = 180];</code>
     *
     * <pre>
     * 3 minutes
     * </pre>
     */
    boolean hasSlaveTimeout();
    /**
     * <code>optional int32 slaveTimeout = 4 [default = 180];</code>
     *
     * <pre>
     * 3 minutes
     * </pre>
     */
    int getSlaveTimeout();

    // optional float energyScanSec = 5 [default = 10];
    /**
     * <code>optional float energyScanSec = 5 [default = 10];</code>
     */
    boolean hasEnergyScanSec();
    /**
     * <code>optional float energyScanSec = 5 [default = 10];</code>
     */
    float getEnergyScanSec();

    // optional float energyTrackTime = 6 [default = 300];
    /**
     * <code>optional float energyTrackTime = 6 [default = 300];</code>
     */
    boolean hasEnergyTrackTime();
    /**
     * <code>optional float energyTrackTime = 6 [default = 300];</code>
     */
    float getEnergyTrackTime();
  }
  /**
   * Protobuf type {@code falcon_res_msg.RFSwitchSerialConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the serial RF switch resource.  These are populated
   * by ResourceRFSwitchSerial.configureMessage() and from resources.xml.
   *
   * msgName: RFSWITCH_SERIAL_CONFIG, used to identify the message
   * device: path to the serial device to use
   * baud: baud rate to use to communicate with the device
   * slaveTimeout: Timeout in seconds
   * energyScanSec: Number of seconds to stay on each port when energy scanning
   * energyTrackTime: Number of seconds between energy tracks
   * </pre>
   */
  public static final class RFSwitchSerialConfig extends
      com.google.protobuf.GeneratedMessage
      implements RFSwitchSerialConfigOrBuilder {
    // Use RFSwitchSerialConfig.newBuilder() to construct.
    private RFSwitchSerialConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RFSwitchSerialConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RFSwitchSerialConfig defaultInstance;
    public static RFSwitchSerialConfig getDefaultInstance() {
      return defaultInstance;
    }

    public RFSwitchSerialConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RFSwitchSerialConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              device_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              baud_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              slaveTimeout_ = input.readInt32();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              energyScanSec_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              energyTrackTime_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RFSwitchSerialConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RFSwitchSerialConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig.class, fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<RFSwitchSerialConfig> PARSER =
        new com.google.protobuf.AbstractParser<RFSwitchSerialConfig>() {
      public RFSwitchSerialConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RFSwitchSerialConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RFSwitchSerialConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "RFSWITCH_SERIAL_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "RFSWITCH_SERIAL_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "RFSWITCH_SERIAL_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "RFSWITCH_SERIAL_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string device = 2 [default = "/dev/ttyS0"];
    public static final int DEVICE_FIELD_NUMBER = 2;
    private java.lang.Object device_;
    /**
     * <code>optional string device = 2 [default = "/dev/ttyS0"];</code>
     */
    public boolean hasDevice() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string device = 2 [default = "/dev/ttyS0"];</code>
     */
    public java.lang.String getDevice() {
      java.lang.Object ref = device_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          device_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string device = 2 [default = "/dev/ttyS0"];</code>
     */
    public com.google.protobuf.ByteString
        getDeviceBytes() {
      java.lang.Object ref = device_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        device_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 baud = 3 [default = 9600];
    public static final int BAUD_FIELD_NUMBER = 3;
    private int baud_;
    /**
     * <code>optional int32 baud = 3 [default = 9600];</code>
     */
    public boolean hasBaud() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 baud = 3 [default = 9600];</code>
     */
    public int getBaud() {
      return baud_;
    }

    // optional int32 slaveTimeout = 4 [default = 180];
    public static final int SLAVETIMEOUT_FIELD_NUMBER = 4;
    private int slaveTimeout_;
    /**
     * <code>optional int32 slaveTimeout = 4 [default = 180];</code>
     *
     * <pre>
     * 3 minutes
     * </pre>
     */
    public boolean hasSlaveTimeout() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 slaveTimeout = 4 [default = 180];</code>
     *
     * <pre>
     * 3 minutes
     * </pre>
     */
    public int getSlaveTimeout() {
      return slaveTimeout_;
    }

    // optional float energyScanSec = 5 [default = 10];
    public static final int ENERGYSCANSEC_FIELD_NUMBER = 5;
    private float energyScanSec_;
    /**
     * <code>optional float energyScanSec = 5 [default = 10];</code>
     */
    public boolean hasEnergyScanSec() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float energyScanSec = 5 [default = 10];</code>
     */
    public float getEnergyScanSec() {
      return energyScanSec_;
    }

    // optional float energyTrackTime = 6 [default = 300];
    public static final int ENERGYTRACKTIME_FIELD_NUMBER = 6;
    private float energyTrackTime_;
    /**
     * <code>optional float energyTrackTime = 6 [default = 300];</code>
     */
    public boolean hasEnergyTrackTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float energyTrackTime = 6 [default = 300];</code>
     */
    public float getEnergyTrackTime() {
      return energyTrackTime_;
    }

    private void initFields() {
      msgName_ = "RFSWITCH_SERIAL_CONFIG";
      device_ = "/dev/ttyS0";
      baud_ = 9600;
      slaveTimeout_ = 180;
      energyScanSec_ = 10F;
      energyTrackTime_ = 300F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDeviceBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, baud_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, slaveTimeout_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, energyScanSec_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, energyTrackTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDeviceBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, baud_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, slaveTimeout_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, energyScanSec_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, energyTrackTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.RFSwitchSerialConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the serial RF switch resource.  These are populated
     * by ResourceRFSwitchSerial.configureMessage() and from resources.xml.
     *
     * msgName: RFSWITCH_SERIAL_CONFIG, used to identify the message
     * device: path to the serial device to use
     * baud: baud rate to use to communicate with the device
     * slaveTimeout: Timeout in seconds
     * energyScanSec: Number of seconds to stay on each port when energy scanning
     * energyTrackTime: Number of seconds between energy tracks
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RFSwitchSerialConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RFSwitchSerialConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig.class, fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "RFSWITCH_SERIAL_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        device_ = "/dev/ttyS0";
        bitField0_ = (bitField0_ & ~0x00000002);
        baud_ = 9600;
        bitField0_ = (bitField0_ & ~0x00000004);
        slaveTimeout_ = 180;
        bitField0_ = (bitField0_ & ~0x00000008);
        energyScanSec_ = 10F;
        bitField0_ = (bitField0_ & ~0x00000010);
        energyTrackTime_ = 300F;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RFSwitchSerialConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig result = new fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.device_ = device_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.baud_ = baud_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.slaveTimeout_ = slaveTimeout_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.energyScanSec_ = energyScanSec_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.energyTrackTime_ = energyTrackTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasDevice()) {
          bitField0_ |= 0x00000002;
          device_ = other.device_;
          onChanged();
        }
        if (other.hasBaud()) {
          setBaud(other.getBaud());
        }
        if (other.hasSlaveTimeout()) {
          setSlaveTimeout(other.getSlaveTimeout());
        }
        if (other.hasEnergyScanSec()) {
          setEnergyScanSec(other.getEnergyScanSec());
        }
        if (other.hasEnergyTrackTime()) {
          setEnergyTrackTime(other.getEnergyTrackTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.RFSwitchSerialConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "RFSWITCH_SERIAL_CONFIG"];
      private java.lang.Object msgName_ = "RFSWITCH_SERIAL_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "RFSWITCH_SERIAL_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "RFSWITCH_SERIAL_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "RFSWITCH_SERIAL_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "RFSWITCH_SERIAL_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "RFSWITCH_SERIAL_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "RFSWITCH_SERIAL_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional string device = 2 [default = "/dev/ttyS0"];
      private java.lang.Object device_ = "/dev/ttyS0";
      /**
       * <code>optional string device = 2 [default = "/dev/ttyS0"];</code>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string device = 2 [default = "/dev/ttyS0"];</code>
       */
      public java.lang.String getDevice() {
        java.lang.Object ref = device_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          device_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string device = 2 [default = "/dev/ttyS0"];</code>
       */
      public com.google.protobuf.ByteString
          getDeviceBytes() {
        java.lang.Object ref = device_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          device_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string device = 2 [default = "/dev/ttyS0"];</code>
       */
      public Builder setDevice(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        device_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string device = 2 [default = "/dev/ttyS0"];</code>
       */
      public Builder clearDevice() {
        bitField0_ = (bitField0_ & ~0x00000002);
        device_ = getDefaultInstance().getDevice();
        onChanged();
        return this;
      }
      /**
       * <code>optional string device = 2 [default = "/dev/ttyS0"];</code>
       */
      public Builder setDeviceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        device_ = value;
        onChanged();
        return this;
      }

      // optional int32 baud = 3 [default = 9600];
      private int baud_ = 9600;
      /**
       * <code>optional int32 baud = 3 [default = 9600];</code>
       */
      public boolean hasBaud() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 baud = 3 [default = 9600];</code>
       */
      public int getBaud() {
        return baud_;
      }
      /**
       * <code>optional int32 baud = 3 [default = 9600];</code>
       */
      public Builder setBaud(int value) {
        bitField0_ |= 0x00000004;
        baud_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 baud = 3 [default = 9600];</code>
       */
      public Builder clearBaud() {
        bitField0_ = (bitField0_ & ~0x00000004);
        baud_ = 9600;
        onChanged();
        return this;
      }

      // optional int32 slaveTimeout = 4 [default = 180];
      private int slaveTimeout_ = 180;
      /**
       * <code>optional int32 slaveTimeout = 4 [default = 180];</code>
       *
       * <pre>
       * 3 minutes
       * </pre>
       */
      public boolean hasSlaveTimeout() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 slaveTimeout = 4 [default = 180];</code>
       *
       * <pre>
       * 3 minutes
       * </pre>
       */
      public int getSlaveTimeout() {
        return slaveTimeout_;
      }
      /**
       * <code>optional int32 slaveTimeout = 4 [default = 180];</code>
       *
       * <pre>
       * 3 minutes
       * </pre>
       */
      public Builder setSlaveTimeout(int value) {
        bitField0_ |= 0x00000008;
        slaveTimeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 slaveTimeout = 4 [default = 180];</code>
       *
       * <pre>
       * 3 minutes
       * </pre>
       */
      public Builder clearSlaveTimeout() {
        bitField0_ = (bitField0_ & ~0x00000008);
        slaveTimeout_ = 180;
        onChanged();
        return this;
      }

      // optional float energyScanSec = 5 [default = 10];
      private float energyScanSec_ = 10F;
      /**
       * <code>optional float energyScanSec = 5 [default = 10];</code>
       */
      public boolean hasEnergyScanSec() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float energyScanSec = 5 [default = 10];</code>
       */
      public float getEnergyScanSec() {
        return energyScanSec_;
      }
      /**
       * <code>optional float energyScanSec = 5 [default = 10];</code>
       */
      public Builder setEnergyScanSec(float value) {
        bitField0_ |= 0x00000010;
        energyScanSec_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float energyScanSec = 5 [default = 10];</code>
       */
      public Builder clearEnergyScanSec() {
        bitField0_ = (bitField0_ & ~0x00000010);
        energyScanSec_ = 10F;
        onChanged();
        return this;
      }

      // optional float energyTrackTime = 6 [default = 300];
      private float energyTrackTime_ = 300F;
      /**
       * <code>optional float energyTrackTime = 6 [default = 300];</code>
       */
      public boolean hasEnergyTrackTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float energyTrackTime = 6 [default = 300];</code>
       */
      public float getEnergyTrackTime() {
        return energyTrackTime_;
      }
      /**
       * <code>optional float energyTrackTime = 6 [default = 300];</code>
       */
      public Builder setEnergyTrackTime(float value) {
        bitField0_ |= 0x00000020;
        energyTrackTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float energyTrackTime = 6 [default = 300];</code>
       */
      public Builder clearEnergyTrackTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        energyTrackTime_ = 300F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.RFSwitchSerialConfig)
    }

    static {
      defaultInstance = new RFSwitchSerialConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.RFSwitchSerialConfig)
  }

  public interface CPSwitchConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "CPSWITCH_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "CPSWITCH_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "CPSWITCH_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "CPSWITCH_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional string IP = 2;
    /**
     * <code>optional string IP = 2;</code>
     */
    boolean hasIP();
    /**
     * <code>optional string IP = 2;</code>
     */
    java.lang.String getIP();
    /**
     * <code>optional string IP = 2;</code>
     */
    com.google.protobuf.ByteString
        getIPBytes();

    // optional int32 port = 3 [default = 23];
    /**
     * <code>optional int32 port = 3 [default = 23];</code>
     */
    boolean hasPort();
    /**
     * <code>optional int32 port = 3 [default = 23];</code>
     */
    int getPort();

    // optional int32 slaveTimeout = 4 [default = 180];
    /**
     * <code>optional int32 slaveTimeout = 4 [default = 180];</code>
     *
     * <pre>
     * 3 mins
     * </pre>
     */
    boolean hasSlaveTimeout();
    /**
     * <code>optional int32 slaveTimeout = 4 [default = 180];</code>
     *
     * <pre>
     * 3 mins
     * </pre>
     */
    int getSlaveTimeout();

    // optional float energyScanSec = 5 [default = 10];
    /**
     * <code>optional float energyScanSec = 5 [default = 10];</code>
     */
    boolean hasEnergyScanSec();
    /**
     * <code>optional float energyScanSec = 5 [default = 10];</code>
     */
    float getEnergyScanSec();

    // optional float energyTrackTime = 6 [default = 300];
    /**
     * <code>optional float energyTrackTime = 6 [default = 300];</code>
     */
    boolean hasEnergyTrackTime();
    /**
     * <code>optional float energyTrackTime = 6 [default = 300];</code>
     */
    float getEnergyTrackTime();
  }
  /**
   * Protobuf type {@code falcon_res_msg.CPSwitchConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the CP switch resource. These are populated
   * by ResourceCPSwitch.configureMessage() and from resources.xml
   *
   * msgName: CPSWITCH_CONFIG, used to indetify the message
   * IP: IP of the CP switch
   * port: port value of the CP switch
   * slaveTimeout: Timeout in seconds
   * enegeryScanSec: Number of seconds to stay on each port when energy scanning
   * energyTrackTime: Number of seconds between energy tracks
   * </pre>
   */
  public static final class CPSwitchConfig extends
      com.google.protobuf.GeneratedMessage
      implements CPSwitchConfigOrBuilder {
    // Use CPSwitchConfig.newBuilder() to construct.
    private CPSwitchConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CPSwitchConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CPSwitchConfig defaultInstance;
    public static CPSwitchConfig getDefaultInstance() {
      return defaultInstance;
    }

    public CPSwitchConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CPSwitchConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              iP_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              port_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              slaveTimeout_ = input.readInt32();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              energyScanSec_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              energyTrackTime_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_CPSwitchConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_CPSwitchConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig.class, fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<CPSwitchConfig> PARSER =
        new com.google.protobuf.AbstractParser<CPSwitchConfig>() {
      public CPSwitchConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CPSwitchConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CPSwitchConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "CPSWITCH_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "CPSWITCH_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "CPSWITCH_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "CPSWITCH_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string IP = 2;
    public static final int IP_FIELD_NUMBER = 2;
    private java.lang.Object iP_;
    /**
     * <code>optional string IP = 2;</code>
     */
    public boolean hasIP() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string IP = 2;</code>
     */
    public java.lang.String getIP() {
      java.lang.Object ref = iP_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          iP_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string IP = 2;</code>
     */
    public com.google.protobuf.ByteString
        getIPBytes() {
      java.lang.Object ref = iP_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        iP_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 port = 3 [default = 23];
    public static final int PORT_FIELD_NUMBER = 3;
    private int port_;
    /**
     * <code>optional int32 port = 3 [default = 23];</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 port = 3 [default = 23];</code>
     */
    public int getPort() {
      return port_;
    }

    // optional int32 slaveTimeout = 4 [default = 180];
    public static final int SLAVETIMEOUT_FIELD_NUMBER = 4;
    private int slaveTimeout_;
    /**
     * <code>optional int32 slaveTimeout = 4 [default = 180];</code>
     *
     * <pre>
     * 3 mins
     * </pre>
     */
    public boolean hasSlaveTimeout() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 slaveTimeout = 4 [default = 180];</code>
     *
     * <pre>
     * 3 mins
     * </pre>
     */
    public int getSlaveTimeout() {
      return slaveTimeout_;
    }

    // optional float energyScanSec = 5 [default = 10];
    public static final int ENERGYSCANSEC_FIELD_NUMBER = 5;
    private float energyScanSec_;
    /**
     * <code>optional float energyScanSec = 5 [default = 10];</code>
     */
    public boolean hasEnergyScanSec() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float energyScanSec = 5 [default = 10];</code>
     */
    public float getEnergyScanSec() {
      return energyScanSec_;
    }

    // optional float energyTrackTime = 6 [default = 300];
    public static final int ENERGYTRACKTIME_FIELD_NUMBER = 6;
    private float energyTrackTime_;
    /**
     * <code>optional float energyTrackTime = 6 [default = 300];</code>
     */
    public boolean hasEnergyTrackTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float energyTrackTime = 6 [default = 300];</code>
     */
    public float getEnergyTrackTime() {
      return energyTrackTime_;
    }

    private void initFields() {
      msgName_ = "CPSWITCH_CONFIG";
      iP_ = "";
      port_ = 23;
      slaveTimeout_ = 180;
      energyScanSec_ = 10F;
      energyTrackTime_ = 300F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIPBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, port_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, slaveTimeout_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, energyScanSec_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, energyTrackTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIPBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, port_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, slaveTimeout_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, energyScanSec_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, energyTrackTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.CPSwitchConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the CP switch resource. These are populated
     * by ResourceCPSwitch.configureMessage() and from resources.xml
     *
     * msgName: CPSWITCH_CONFIG, used to indetify the message
     * IP: IP of the CP switch
     * port: port value of the CP switch
     * slaveTimeout: Timeout in seconds
     * enegeryScanSec: Number of seconds to stay on each port when energy scanning
     * energyTrackTime: Number of seconds between energy tracks
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_CPSwitchConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_CPSwitchConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig.class, fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "CPSWITCH_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        iP_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        port_ = 23;
        bitField0_ = (bitField0_ & ~0x00000004);
        slaveTimeout_ = 180;
        bitField0_ = (bitField0_ & ~0x00000008);
        energyScanSec_ = 10F;
        bitField0_ = (bitField0_ & ~0x00000010);
        energyTrackTime_ = 300F;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_CPSwitchConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig result = new fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.iP_ = iP_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.slaveTimeout_ = slaveTimeout_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.energyScanSec_ = energyScanSec_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.energyTrackTime_ = energyTrackTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasIP()) {
          bitField0_ |= 0x00000002;
          iP_ = other.iP_;
          onChanged();
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasSlaveTimeout()) {
          setSlaveTimeout(other.getSlaveTimeout());
        }
        if (other.hasEnergyScanSec()) {
          setEnergyScanSec(other.getEnergyScanSec());
        }
        if (other.hasEnergyTrackTime()) {
          setEnergyTrackTime(other.getEnergyTrackTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.CPSwitchConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "CPSWITCH_CONFIG"];
      private java.lang.Object msgName_ = "CPSWITCH_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "CPSWITCH_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "CPSWITCH_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "CPSWITCH_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "CPSWITCH_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "CPSWITCH_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "CPSWITCH_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional string IP = 2;
      private java.lang.Object iP_ = "";
      /**
       * <code>optional string IP = 2;</code>
       */
      public boolean hasIP() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public java.lang.String getIP() {
        java.lang.Object ref = iP_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          iP_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public com.google.protobuf.ByteString
          getIPBytes() {
        java.lang.Object ref = iP_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          iP_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public Builder setIP(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public Builder clearIP() {
        bitField0_ = (bitField0_ & ~0x00000002);
        iP_ = getDefaultInstance().getIP();
        onChanged();
        return this;
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public Builder setIPBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iP_ = value;
        onChanged();
        return this;
      }

      // optional int32 port = 3 [default = 23];
      private int port_ = 23;
      /**
       * <code>optional int32 port = 3 [default = 23];</code>
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 port = 3 [default = 23];</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <code>optional int32 port = 3 [default = 23];</code>
       */
      public Builder setPort(int value) {
        bitField0_ |= 0x00000004;
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 port = 3 [default = 23];</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000004);
        port_ = 23;
        onChanged();
        return this;
      }

      // optional int32 slaveTimeout = 4 [default = 180];
      private int slaveTimeout_ = 180;
      /**
       * <code>optional int32 slaveTimeout = 4 [default = 180];</code>
       *
       * <pre>
       * 3 mins
       * </pre>
       */
      public boolean hasSlaveTimeout() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 slaveTimeout = 4 [default = 180];</code>
       *
       * <pre>
       * 3 mins
       * </pre>
       */
      public int getSlaveTimeout() {
        return slaveTimeout_;
      }
      /**
       * <code>optional int32 slaveTimeout = 4 [default = 180];</code>
       *
       * <pre>
       * 3 mins
       * </pre>
       */
      public Builder setSlaveTimeout(int value) {
        bitField0_ |= 0x00000008;
        slaveTimeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 slaveTimeout = 4 [default = 180];</code>
       *
       * <pre>
       * 3 mins
       * </pre>
       */
      public Builder clearSlaveTimeout() {
        bitField0_ = (bitField0_ & ~0x00000008);
        slaveTimeout_ = 180;
        onChanged();
        return this;
      }

      // optional float energyScanSec = 5 [default = 10];
      private float energyScanSec_ = 10F;
      /**
       * <code>optional float energyScanSec = 5 [default = 10];</code>
       */
      public boolean hasEnergyScanSec() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float energyScanSec = 5 [default = 10];</code>
       */
      public float getEnergyScanSec() {
        return energyScanSec_;
      }
      /**
       * <code>optional float energyScanSec = 5 [default = 10];</code>
       */
      public Builder setEnergyScanSec(float value) {
        bitField0_ |= 0x00000010;
        energyScanSec_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float energyScanSec = 5 [default = 10];</code>
       */
      public Builder clearEnergyScanSec() {
        bitField0_ = (bitField0_ & ~0x00000010);
        energyScanSec_ = 10F;
        onChanged();
        return this;
      }

      // optional float energyTrackTime = 6 [default = 300];
      private float energyTrackTime_ = 300F;
      /**
       * <code>optional float energyTrackTime = 6 [default = 300];</code>
       */
      public boolean hasEnergyTrackTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float energyTrackTime = 6 [default = 300];</code>
       */
      public float getEnergyTrackTime() {
        return energyTrackTime_;
      }
      /**
       * <code>optional float energyTrackTime = 6 [default = 300];</code>
       */
      public Builder setEnergyTrackTime(float value) {
        bitField0_ |= 0x00000020;
        energyTrackTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float energyTrackTime = 6 [default = 300];</code>
       */
      public Builder clearEnergyTrackTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        energyTrackTime_ = 300F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.CPSwitchConfig)
    }

    static {
      defaultInstance = new CPSwitchConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.CPSwitchConfig)
  }

  public interface AntennaConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "ANTENNA_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "ANTENNA_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "ANTENNA_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "ANTENNA_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional float minRF = 2;
    /**
     * <code>optional float minRF = 2;</code>
     */
    boolean hasMinRF();
    /**
     * <code>optional float minRF = 2;</code>
     */
    float getMinRF();

    // optional float maxRF = 3;
    /**
     * <code>optional float maxRF = 3;</code>
     */
    boolean hasMaxRF();
    /**
     * <code>optional float maxRF = 3;</code>
     */
    float getMaxRF();

    // optional float fixedAngle = 4 [default = -999];
    /**
     * <code>optional float fixedAngle = 4 [default = -999];</code>
     */
    boolean hasFixedAngle();
    /**
     * <code>optional float fixedAngle = 4 [default = -999];</code>
     */
    float getFixedAngle();

    // optional float latitude = 5 [default = 0];
    /**
     * <code>optional float latitude = 5 [default = 0];</code>
     */
    boolean hasLatitude();
    /**
     * <code>optional float latitude = 5 [default = 0];</code>
     */
    float getLatitude();

    // optional float longitude = 6 [default = 0];
    /**
     * <code>optional float longitude = 6 [default = 0];</code>
     */
    boolean hasLongitude();
    /**
     * <code>optional float longitude = 6 [default = 0];</code>
     */
    float getLongitude();

    // optional float altitude = 7 [default = 0];
    /**
     * <code>optional float altitude = 7 [default = 0];</code>
     */
    boolean hasAltitude();
    /**
     * <code>optional float altitude = 7 [default = 0];</code>
     */
    float getAltitude();

    // optional float beamwidth = 8 [default = 0];
    /**
     * <code>optional float beamwidth = 8 [default = 0];</code>
     */
    boolean hasBeamwidth();
    /**
     * <code>optional float beamwidth = 8 [default = 0];</code>
     */
    float getBeamwidth();

    // optional float dwncnvtLO = 9 [default = 0];
    /**
     * <code>optional float dwncnvtLO = 9 [default = 0];</code>
     */
    boolean hasDwncnvtLO();
    /**
     * <code>optional float dwncnvtLO = 9 [default = 0];</code>
     */
    float getDwncnvtLO();

    // optional int32 ssc = 10 [default = -1];
    /**
     * <code>optional int32 ssc = 10 [default = -1];</code>
     */
    boolean hasSsc();
    /**
     * <code>optional int32 ssc = 10 [default = -1];</code>
     */
    int getSsc();

    // optional string band = 11;
    /**
     * <code>optional string band = 11;</code>
     */
    boolean hasBand();
    /**
     * <code>optional string band = 11;</code>
     */
    java.lang.String getBand();
    /**
     * <code>optional string band = 11;</code>
     */
    com.google.protobuf.ByteString
        getBandBytes();

    // optional string polarization = 12;
    /**
     * <code>optional string polarization = 12;</code>
     */
    boolean hasPolarization();
    /**
     * <code>optional string polarization = 12;</code>
     */
    java.lang.String getPolarization();
    /**
     * <code>optional string polarization = 12;</code>
     */
    com.google.protobuf.ByteString
        getPolarizationBytes();

    // optional int32 group = 13;
    /**
     * <code>optional int32 group = 13;</code>
     */
    boolean hasGroup();
    /**
     * <code>optional int32 group = 13;</code>
     */
    int getGroup();

    // optional float sightDistance = 14 [default = 500];
    /**
     * <code>optional float sightDistance = 14 [default = 500];</code>
     */
    boolean hasSightDistance();
    /**
     * <code>optional float sightDistance = 14 [default = 500];</code>
     */
    float getSightDistance();

    // optional string noiseTest = 15 [default = "NO_TEST"];
    /**
     * <code>optional string noiseTest = 15 [default = "NO_TEST"];</code>
     */
    boolean hasNoiseTest();
    /**
     * <code>optional string noiseTest = 15 [default = "NO_TEST"];</code>
     */
    java.lang.String getNoiseTest();
    /**
     * <code>optional string noiseTest = 15 [default = "NO_TEST"];</code>
     */
    com.google.protobuf.ByteString
        getNoiseTestBytes();
  }
  /**
   * Protobuf type {@code falcon_res_msg.AntennaConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the antenna resource.  These are populated
   * by ResourceAntenna.configureMessage() and from resources.xml.
   *
   * msgName: ANTENNA_CONFIG, used to identify the message
   * minRF: Minimum RF of the antenna's range
   * maxRF: Maximum RF of the antenna's range
   * fixedAngle: If within the range [-360,360], the directional angle
   * latitude: Current position of the antenna if stationary
   * longitude: Current position of the antenna if stationary
   * altitude: Current position of the antenna if stationary
   * beamwidth: If specified, the antenna beamwidth
   * dwncnvtLO: Downconversion LO that is passed to apps
   * ssc: The unique SSC of a target satellite
   * band: The frequency band of the antenna
   * polarization: The polarization of the antenna
   * group: A number that can be assigned to antennas to group them together
   * sightDistance: The advertised distance of the antenna
   * noiseTest: The noise diode test to run
   * </pre>
   */
  public static final class AntennaConfig extends
      com.google.protobuf.GeneratedMessage
      implements AntennaConfigOrBuilder {
    // Use AntennaConfig.newBuilder() to construct.
    private AntennaConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AntennaConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AntennaConfig defaultInstance;
    public static AntennaConfig getDefaultInstance() {
      return defaultInstance;
    }

    public AntennaConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AntennaConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              minRF_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              maxRF_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              fixedAngle_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              latitude_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              longitude_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              altitude_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              beamwidth_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              dwncnvtLO_ = input.readFloat();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              ssc_ = input.readInt32();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              band_ = input.readBytes();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000800;
              polarization_ = input.readBytes();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              group_ = input.readInt32();
              break;
            }
            case 117: {
              bitField0_ |= 0x00002000;
              sightDistance_ = input.readFloat();
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              noiseTest_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_AntennaConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_AntennaConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig.class, fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<AntennaConfig> PARSER =
        new com.google.protobuf.AbstractParser<AntennaConfig>() {
      public AntennaConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AntennaConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AntennaConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "ANTENNA_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "ANTENNA_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "ANTENNA_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "ANTENNA_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional float minRF = 2;
    public static final int MINRF_FIELD_NUMBER = 2;
    private float minRF_;
    /**
     * <code>optional float minRF = 2;</code>
     */
    public boolean hasMinRF() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float minRF = 2;</code>
     */
    public float getMinRF() {
      return minRF_;
    }

    // optional float maxRF = 3;
    public static final int MAXRF_FIELD_NUMBER = 3;
    private float maxRF_;
    /**
     * <code>optional float maxRF = 3;</code>
     */
    public boolean hasMaxRF() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float maxRF = 3;</code>
     */
    public float getMaxRF() {
      return maxRF_;
    }

    // optional float fixedAngle = 4 [default = -999];
    public static final int FIXEDANGLE_FIELD_NUMBER = 4;
    private float fixedAngle_;
    /**
     * <code>optional float fixedAngle = 4 [default = -999];</code>
     */
    public boolean hasFixedAngle() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float fixedAngle = 4 [default = -999];</code>
     */
    public float getFixedAngle() {
      return fixedAngle_;
    }

    // optional float latitude = 5 [default = 0];
    public static final int LATITUDE_FIELD_NUMBER = 5;
    private float latitude_;
    /**
     * <code>optional float latitude = 5 [default = 0];</code>
     */
    public boolean hasLatitude() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float latitude = 5 [default = 0];</code>
     */
    public float getLatitude() {
      return latitude_;
    }

    // optional float longitude = 6 [default = 0];
    public static final int LONGITUDE_FIELD_NUMBER = 6;
    private float longitude_;
    /**
     * <code>optional float longitude = 6 [default = 0];</code>
     */
    public boolean hasLongitude() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float longitude = 6 [default = 0];</code>
     */
    public float getLongitude() {
      return longitude_;
    }

    // optional float altitude = 7 [default = 0];
    public static final int ALTITUDE_FIELD_NUMBER = 7;
    private float altitude_;
    /**
     * <code>optional float altitude = 7 [default = 0];</code>
     */
    public boolean hasAltitude() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float altitude = 7 [default = 0];</code>
     */
    public float getAltitude() {
      return altitude_;
    }

    // optional float beamwidth = 8 [default = 0];
    public static final int BEAMWIDTH_FIELD_NUMBER = 8;
    private float beamwidth_;
    /**
     * <code>optional float beamwidth = 8 [default = 0];</code>
     */
    public boolean hasBeamwidth() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float beamwidth = 8 [default = 0];</code>
     */
    public float getBeamwidth() {
      return beamwidth_;
    }

    // optional float dwncnvtLO = 9 [default = 0];
    public static final int DWNCNVTLO_FIELD_NUMBER = 9;
    private float dwncnvtLO_;
    /**
     * <code>optional float dwncnvtLO = 9 [default = 0];</code>
     */
    public boolean hasDwncnvtLO() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float dwncnvtLO = 9 [default = 0];</code>
     */
    public float getDwncnvtLO() {
      return dwncnvtLO_;
    }

    // optional int32 ssc = 10 [default = -1];
    public static final int SSC_FIELD_NUMBER = 10;
    private int ssc_;
    /**
     * <code>optional int32 ssc = 10 [default = -1];</code>
     */
    public boolean hasSsc() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 ssc = 10 [default = -1];</code>
     */
    public int getSsc() {
      return ssc_;
    }

    // optional string band = 11;
    public static final int BAND_FIELD_NUMBER = 11;
    private java.lang.Object band_;
    /**
     * <code>optional string band = 11;</code>
     */
    public boolean hasBand() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string band = 11;</code>
     */
    public java.lang.String getBand() {
      java.lang.Object ref = band_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          band_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string band = 11;</code>
     */
    public com.google.protobuf.ByteString
        getBandBytes() {
      java.lang.Object ref = band_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        band_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string polarization = 12;
    public static final int POLARIZATION_FIELD_NUMBER = 12;
    private java.lang.Object polarization_;
    /**
     * <code>optional string polarization = 12;</code>
     */
    public boolean hasPolarization() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string polarization = 12;</code>
     */
    public java.lang.String getPolarization() {
      java.lang.Object ref = polarization_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          polarization_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string polarization = 12;</code>
     */
    public com.google.protobuf.ByteString
        getPolarizationBytes() {
      java.lang.Object ref = polarization_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        polarization_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 group = 13;
    public static final int GROUP_FIELD_NUMBER = 13;
    private int group_;
    /**
     * <code>optional int32 group = 13;</code>
     */
    public boolean hasGroup() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 group = 13;</code>
     */
    public int getGroup() {
      return group_;
    }

    // optional float sightDistance = 14 [default = 500];
    public static final int SIGHTDISTANCE_FIELD_NUMBER = 14;
    private float sightDistance_;
    /**
     * <code>optional float sightDistance = 14 [default = 500];</code>
     */
    public boolean hasSightDistance() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional float sightDistance = 14 [default = 500];</code>
     */
    public float getSightDistance() {
      return sightDistance_;
    }

    // optional string noiseTest = 15 [default = "NO_TEST"];
    public static final int NOISETEST_FIELD_NUMBER = 15;
    private java.lang.Object noiseTest_;
    /**
     * <code>optional string noiseTest = 15 [default = "NO_TEST"];</code>
     */
    public boolean hasNoiseTest() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string noiseTest = 15 [default = "NO_TEST"];</code>
     */
    public java.lang.String getNoiseTest() {
      java.lang.Object ref = noiseTest_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          noiseTest_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string noiseTest = 15 [default = "NO_TEST"];</code>
     */
    public com.google.protobuf.ByteString
        getNoiseTestBytes() {
      java.lang.Object ref = noiseTest_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        noiseTest_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      msgName_ = "ANTENNA_CONFIG";
      minRF_ = 0F;
      maxRF_ = 0F;
      fixedAngle_ = -999F;
      latitude_ = 0F;
      longitude_ = 0F;
      altitude_ = 0F;
      beamwidth_ = 0F;
      dwncnvtLO_ = 0F;
      ssc_ = -1;
      band_ = "";
      polarization_ = "";
      group_ = 0;
      sightDistance_ = 500F;
      noiseTest_ = "NO_TEST";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, minRF_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, maxRF_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, fixedAngle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, latitude_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, longitude_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, altitude_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, beamwidth_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, dwncnvtLO_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, ssc_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getBandBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getPolarizationBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, group_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeFloat(14, sightDistance_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, getNoiseTestBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, minRF_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, maxRF_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, fixedAngle_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, latitude_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, longitude_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, altitude_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, beamwidth_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, dwncnvtLO_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, ssc_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getBandBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getPolarizationBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, group_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, sightDistance_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getNoiseTestBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.AntennaConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the antenna resource.  These are populated
     * by ResourceAntenna.configureMessage() and from resources.xml.
     *
     * msgName: ANTENNA_CONFIG, used to identify the message
     * minRF: Minimum RF of the antenna's range
     * maxRF: Maximum RF of the antenna's range
     * fixedAngle: If within the range [-360,360], the directional angle
     * latitude: Current position of the antenna if stationary
     * longitude: Current position of the antenna if stationary
     * altitude: Current position of the antenna if stationary
     * beamwidth: If specified, the antenna beamwidth
     * dwncnvtLO: Downconversion LO that is passed to apps
     * ssc: The unique SSC of a target satellite
     * band: The frequency band of the antenna
     * polarization: The polarization of the antenna
     * group: A number that can be assigned to antennas to group them together
     * sightDistance: The advertised distance of the antenna
     * noiseTest: The noise diode test to run
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.AntennaConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_AntennaConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_AntennaConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig.class, fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "ANTENNA_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        minRF_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        maxRF_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        fixedAngle_ = -999F;
        bitField0_ = (bitField0_ & ~0x00000008);
        latitude_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        longitude_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        altitude_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        beamwidth_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        dwncnvtLO_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        ssc_ = -1;
        bitField0_ = (bitField0_ & ~0x00000200);
        band_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        polarization_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        group_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        sightDistance_ = 500F;
        bitField0_ = (bitField0_ & ~0x00002000);
        noiseTest_ = "NO_TEST";
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_AntennaConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig result = new fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.minRF_ = minRF_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.maxRF_ = maxRF_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fixedAngle_ = fixedAngle_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.latitude_ = latitude_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.longitude_ = longitude_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.altitude_ = altitude_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.beamwidth_ = beamwidth_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.dwncnvtLO_ = dwncnvtLO_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.ssc_ = ssc_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.band_ = band_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.polarization_ = polarization_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.group_ = group_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.sightDistance_ = sightDistance_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.noiseTest_ = noiseTest_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasMinRF()) {
          setMinRF(other.getMinRF());
        }
        if (other.hasMaxRF()) {
          setMaxRF(other.getMaxRF());
        }
        if (other.hasFixedAngle()) {
          setFixedAngle(other.getFixedAngle());
        }
        if (other.hasLatitude()) {
          setLatitude(other.getLatitude());
        }
        if (other.hasLongitude()) {
          setLongitude(other.getLongitude());
        }
        if (other.hasAltitude()) {
          setAltitude(other.getAltitude());
        }
        if (other.hasBeamwidth()) {
          setBeamwidth(other.getBeamwidth());
        }
        if (other.hasDwncnvtLO()) {
          setDwncnvtLO(other.getDwncnvtLO());
        }
        if (other.hasSsc()) {
          setSsc(other.getSsc());
        }
        if (other.hasBand()) {
          bitField0_ |= 0x00000400;
          band_ = other.band_;
          onChanged();
        }
        if (other.hasPolarization()) {
          bitField0_ |= 0x00000800;
          polarization_ = other.polarization_;
          onChanged();
        }
        if (other.hasGroup()) {
          setGroup(other.getGroup());
        }
        if (other.hasSightDistance()) {
          setSightDistance(other.getSightDistance());
        }
        if (other.hasNoiseTest()) {
          bitField0_ |= 0x00004000;
          noiseTest_ = other.noiseTest_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.AntennaConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "ANTENNA_CONFIG"];
      private java.lang.Object msgName_ = "ANTENNA_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "ANTENNA_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "ANTENNA_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "ANTENNA_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "ANTENNA_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "ANTENNA_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "ANTENNA_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional float minRF = 2;
      private float minRF_ ;
      /**
       * <code>optional float minRF = 2;</code>
       */
      public boolean hasMinRF() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float minRF = 2;</code>
       */
      public float getMinRF() {
        return minRF_;
      }
      /**
       * <code>optional float minRF = 2;</code>
       */
      public Builder setMinRF(float value) {
        bitField0_ |= 0x00000002;
        minRF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float minRF = 2;</code>
       */
      public Builder clearMinRF() {
        bitField0_ = (bitField0_ & ~0x00000002);
        minRF_ = 0F;
        onChanged();
        return this;
      }

      // optional float maxRF = 3;
      private float maxRF_ ;
      /**
       * <code>optional float maxRF = 3;</code>
       */
      public boolean hasMaxRF() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float maxRF = 3;</code>
       */
      public float getMaxRF() {
        return maxRF_;
      }
      /**
       * <code>optional float maxRF = 3;</code>
       */
      public Builder setMaxRF(float value) {
        bitField0_ |= 0x00000004;
        maxRF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxRF = 3;</code>
       */
      public Builder clearMaxRF() {
        bitField0_ = (bitField0_ & ~0x00000004);
        maxRF_ = 0F;
        onChanged();
        return this;
      }

      // optional float fixedAngle = 4 [default = -999];
      private float fixedAngle_ = -999F;
      /**
       * <code>optional float fixedAngle = 4 [default = -999];</code>
       */
      public boolean hasFixedAngle() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float fixedAngle = 4 [default = -999];</code>
       */
      public float getFixedAngle() {
        return fixedAngle_;
      }
      /**
       * <code>optional float fixedAngle = 4 [default = -999];</code>
       */
      public Builder setFixedAngle(float value) {
        bitField0_ |= 0x00000008;
        fixedAngle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float fixedAngle = 4 [default = -999];</code>
       */
      public Builder clearFixedAngle() {
        bitField0_ = (bitField0_ & ~0x00000008);
        fixedAngle_ = -999F;
        onChanged();
        return this;
      }

      // optional float latitude = 5 [default = 0];
      private float latitude_ ;
      /**
       * <code>optional float latitude = 5 [default = 0];</code>
       */
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float latitude = 5 [default = 0];</code>
       */
      public float getLatitude() {
        return latitude_;
      }
      /**
       * <code>optional float latitude = 5 [default = 0];</code>
       */
      public Builder setLatitude(float value) {
        bitField0_ |= 0x00000010;
        latitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float latitude = 5 [default = 0];</code>
       */
      public Builder clearLatitude() {
        bitField0_ = (bitField0_ & ~0x00000010);
        latitude_ = 0F;
        onChanged();
        return this;
      }

      // optional float longitude = 6 [default = 0];
      private float longitude_ ;
      /**
       * <code>optional float longitude = 6 [default = 0];</code>
       */
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float longitude = 6 [default = 0];</code>
       */
      public float getLongitude() {
        return longitude_;
      }
      /**
       * <code>optional float longitude = 6 [default = 0];</code>
       */
      public Builder setLongitude(float value) {
        bitField0_ |= 0x00000020;
        longitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float longitude = 6 [default = 0];</code>
       */
      public Builder clearLongitude() {
        bitField0_ = (bitField0_ & ~0x00000020);
        longitude_ = 0F;
        onChanged();
        return this;
      }

      // optional float altitude = 7 [default = 0];
      private float altitude_ ;
      /**
       * <code>optional float altitude = 7 [default = 0];</code>
       */
      public boolean hasAltitude() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float altitude = 7 [default = 0];</code>
       */
      public float getAltitude() {
        return altitude_;
      }
      /**
       * <code>optional float altitude = 7 [default = 0];</code>
       */
      public Builder setAltitude(float value) {
        bitField0_ |= 0x00000040;
        altitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float altitude = 7 [default = 0];</code>
       */
      public Builder clearAltitude() {
        bitField0_ = (bitField0_ & ~0x00000040);
        altitude_ = 0F;
        onChanged();
        return this;
      }

      // optional float beamwidth = 8 [default = 0];
      private float beamwidth_ ;
      /**
       * <code>optional float beamwidth = 8 [default = 0];</code>
       */
      public boolean hasBeamwidth() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float beamwidth = 8 [default = 0];</code>
       */
      public float getBeamwidth() {
        return beamwidth_;
      }
      /**
       * <code>optional float beamwidth = 8 [default = 0];</code>
       */
      public Builder setBeamwidth(float value) {
        bitField0_ |= 0x00000080;
        beamwidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float beamwidth = 8 [default = 0];</code>
       */
      public Builder clearBeamwidth() {
        bitField0_ = (bitField0_ & ~0x00000080);
        beamwidth_ = 0F;
        onChanged();
        return this;
      }

      // optional float dwncnvtLO = 9 [default = 0];
      private float dwncnvtLO_ ;
      /**
       * <code>optional float dwncnvtLO = 9 [default = 0];</code>
       */
      public boolean hasDwncnvtLO() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float dwncnvtLO = 9 [default = 0];</code>
       */
      public float getDwncnvtLO() {
        return dwncnvtLO_;
      }
      /**
       * <code>optional float dwncnvtLO = 9 [default = 0];</code>
       */
      public Builder setDwncnvtLO(float value) {
        bitField0_ |= 0x00000100;
        dwncnvtLO_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float dwncnvtLO = 9 [default = 0];</code>
       */
      public Builder clearDwncnvtLO() {
        bitField0_ = (bitField0_ & ~0x00000100);
        dwncnvtLO_ = 0F;
        onChanged();
        return this;
      }

      // optional int32 ssc = 10 [default = -1];
      private int ssc_ = -1;
      /**
       * <code>optional int32 ssc = 10 [default = -1];</code>
       */
      public boolean hasSsc() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 ssc = 10 [default = -1];</code>
       */
      public int getSsc() {
        return ssc_;
      }
      /**
       * <code>optional int32 ssc = 10 [default = -1];</code>
       */
      public Builder setSsc(int value) {
        bitField0_ |= 0x00000200;
        ssc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ssc = 10 [default = -1];</code>
       */
      public Builder clearSsc() {
        bitField0_ = (bitField0_ & ~0x00000200);
        ssc_ = -1;
        onChanged();
        return this;
      }

      // optional string band = 11;
      private java.lang.Object band_ = "";
      /**
       * <code>optional string band = 11;</code>
       */
      public boolean hasBand() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string band = 11;</code>
       */
      public java.lang.String getBand() {
        java.lang.Object ref = band_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          band_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string band = 11;</code>
       */
      public com.google.protobuf.ByteString
          getBandBytes() {
        java.lang.Object ref = band_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          band_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string band = 11;</code>
       */
      public Builder setBand(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        band_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string band = 11;</code>
       */
      public Builder clearBand() {
        bitField0_ = (bitField0_ & ~0x00000400);
        band_ = getDefaultInstance().getBand();
        onChanged();
        return this;
      }
      /**
       * <code>optional string band = 11;</code>
       */
      public Builder setBandBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        band_ = value;
        onChanged();
        return this;
      }

      // optional string polarization = 12;
      private java.lang.Object polarization_ = "";
      /**
       * <code>optional string polarization = 12;</code>
       */
      public boolean hasPolarization() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string polarization = 12;</code>
       */
      public java.lang.String getPolarization() {
        java.lang.Object ref = polarization_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          polarization_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string polarization = 12;</code>
       */
      public com.google.protobuf.ByteString
          getPolarizationBytes() {
        java.lang.Object ref = polarization_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          polarization_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string polarization = 12;</code>
       */
      public Builder setPolarization(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        polarization_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string polarization = 12;</code>
       */
      public Builder clearPolarization() {
        bitField0_ = (bitField0_ & ~0x00000800);
        polarization_ = getDefaultInstance().getPolarization();
        onChanged();
        return this;
      }
      /**
       * <code>optional string polarization = 12;</code>
       */
      public Builder setPolarizationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        polarization_ = value;
        onChanged();
        return this;
      }

      // optional int32 group = 13;
      private int group_ ;
      /**
       * <code>optional int32 group = 13;</code>
       */
      public boolean hasGroup() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 group = 13;</code>
       */
      public int getGroup() {
        return group_;
      }
      /**
       * <code>optional int32 group = 13;</code>
       */
      public Builder setGroup(int value) {
        bitField0_ |= 0x00001000;
        group_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 group = 13;</code>
       */
      public Builder clearGroup() {
        bitField0_ = (bitField0_ & ~0x00001000);
        group_ = 0;
        onChanged();
        return this;
      }

      // optional float sightDistance = 14 [default = 500];
      private float sightDistance_ = 500F;
      /**
       * <code>optional float sightDistance = 14 [default = 500];</code>
       */
      public boolean hasSightDistance() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional float sightDistance = 14 [default = 500];</code>
       */
      public float getSightDistance() {
        return sightDistance_;
      }
      /**
       * <code>optional float sightDistance = 14 [default = 500];</code>
       */
      public Builder setSightDistance(float value) {
        bitField0_ |= 0x00002000;
        sightDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float sightDistance = 14 [default = 500];</code>
       */
      public Builder clearSightDistance() {
        bitField0_ = (bitField0_ & ~0x00002000);
        sightDistance_ = 500F;
        onChanged();
        return this;
      }

      // optional string noiseTest = 15 [default = "NO_TEST"];
      private java.lang.Object noiseTest_ = "NO_TEST";
      /**
       * <code>optional string noiseTest = 15 [default = "NO_TEST"];</code>
       */
      public boolean hasNoiseTest() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional string noiseTest = 15 [default = "NO_TEST"];</code>
       */
      public java.lang.String getNoiseTest() {
        java.lang.Object ref = noiseTest_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          noiseTest_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string noiseTest = 15 [default = "NO_TEST"];</code>
       */
      public com.google.protobuf.ByteString
          getNoiseTestBytes() {
        java.lang.Object ref = noiseTest_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          noiseTest_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string noiseTest = 15 [default = "NO_TEST"];</code>
       */
      public Builder setNoiseTest(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        noiseTest_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string noiseTest = 15 [default = "NO_TEST"];</code>
       */
      public Builder clearNoiseTest() {
        bitField0_ = (bitField0_ & ~0x00004000);
        noiseTest_ = getDefaultInstance().getNoiseTest();
        onChanged();
        return this;
      }
      /**
       * <code>optional string noiseTest = 15 [default = "NO_TEST"];</code>
       */
      public Builder setNoiseTestBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        noiseTest_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.AntennaConfig)
    }

    static {
      defaultInstance = new AntennaConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.AntennaConfig)
  }

  public interface RotorRPMConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "ROTOR_RPM_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_RPM_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_RPM_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_RPM_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional string IP = 2;
    /**
     * <code>optional string IP = 2;</code>
     */
    boolean hasIP();
    /**
     * <code>optional string IP = 2;</code>
     */
    java.lang.String getIP();
    /**
     * <code>optional string IP = 2;</code>
     */
    com.google.protobuf.ByteString
        getIPBytes();

    // optional int32 port = 3;
    /**
     * <code>optional int32 port = 3;</code>
     */
    boolean hasPort();
    /**
     * <code>optional int32 port = 3;</code>
     */
    int getPort();

    // optional float AzOffset = 4;
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    boolean hasAzOffset();
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    float getAzOffset();

    // optional float ElOffset = 5;
    /**
     * <code>optional float ElOffset = 5;</code>
     */
    boolean hasElOffset();
    /**
     * <code>optional float ElOffset = 5;</code>
     */
    float getElOffset();

    // optional bool hardLimit = 6;
    /**
     * <code>optional bool hardLimit = 6;</code>
     */
    boolean hasHardLimit();
    /**
     * <code>optional bool hardLimit = 6;</code>
     */
    boolean getHardLimit();

    // optional float minScanAngle = 7;
    /**
     * <code>optional float minScanAngle = 7;</code>
     */
    boolean hasMinScanAngle();
    /**
     * <code>optional float minScanAngle = 7;</code>
     */
    float getMinScanAngle();

    // optional float maxScanAngle = 8;
    /**
     * <code>optional float maxScanAngle = 8;</code>
     */
    boolean hasMaxScanAngle();
    /**
     * <code>optional float maxScanAngle = 8;</code>
     */
    float getMaxScanAngle();

    // optional float minElevation = 9;
    /**
     * <code>optional float minElevation = 9;</code>
     */
    boolean hasMinElevation();
    /**
     * <code>optional float minElevation = 9;</code>
     */
    float getMinElevation();

    // optional float maxElevation = 10;
    /**
     * <code>optional float maxElevation = 10;</code>
     */
    boolean hasMaxElevation();
    /**
     * <code>optional float maxElevation = 10;</code>
     */
    float getMaxElevation();

    // optional float scanElevation = 11;
    /**
     * <code>optional float scanElevation = 11;</code>
     */
    boolean hasScanElevation();
    /**
     * <code>optional float scanElevation = 11;</code>
     */
    float getScanElevation();

    // optional float multicastRate = 12;
    /**
     * <code>optional float multicastRate = 12;</code>
     */
    boolean hasMulticastRate();
    /**
     * <code>optional float multicastRate = 12;</code>
     */
    float getMulticastRate();

    // optional float pointHoldIncrement = 13;
    /**
     * <code>optional float pointHoldIncrement = 13;</code>
     */
    boolean hasPointHoldIncrement();
    /**
     * <code>optional float pointHoldIncrement = 13;</code>
     */
    float getPointHoldIncrement();

    // optional float energyScanSpeed = 14 [default = 4];
    /**
     * <code>optional float energyScanSpeed = 14 [default = 4];</code>
     */
    boolean hasEnergyScanSpeed();
    /**
     * <code>optional float energyScanSpeed = 14 [default = 4];</code>
     */
    float getEnergyScanSpeed();

    // optional float startDeviation = 15 [default = 180];
    /**
     * <code>optional float startDeviation = 15 [default = 180];</code>
     */
    boolean hasStartDeviation();
    /**
     * <code>optional float startDeviation = 15 [default = 180];</code>
     */
    float getStartDeviation();

    // optional float energyTrackTime = 16 [default = 30];
    /**
     * <code>optional float energyTrackTime = 16 [default = 30];</code>
     */
    boolean hasEnergyTrackTime();
    /**
     * <code>optional float energyTrackTime = 16 [default = 30];</code>
     */
    float getEnergyTrackTime();

    // optional string scanScrypt = 17 [default = "NONE"];
    /**
     * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
     */
    boolean hasScanScrypt();
    /**
     * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
     */
    java.lang.String getScanScrypt();
    /**
     * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
     */
    com.google.protobuf.ByteString
        getScanScryptBytes();

    // optional string gpsServer = 18 [default = "OFF"];
    /**
     * <code>optional string gpsServer = 18 [default = "OFF"];</code>
     */
    boolean hasGpsServer();
    /**
     * <code>optional string gpsServer = 18 [default = "OFF"];</code>
     */
    java.lang.String getGpsServer();
    /**
     * <code>optional string gpsServer = 18 [default = "OFF"];</code>
     */
    com.google.protobuf.ByteString
        getGpsServerBytes();

    // optional string gpsUpdate = 19 [default = "ON"];
    /**
     * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
     */
    boolean hasGpsUpdate();
    /**
     * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
     */
    java.lang.String getGpsUpdate();
    /**
     * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
     */
    com.google.protobuf.ByteString
        getGpsUpdateBytes();

    // optional bool elDisabled = 20 [default = false];
    /**
     * <code>optional bool elDisabled = 20 [default = false];</code>
     */
    boolean hasElDisabled();
    /**
     * <code>optional bool elDisabled = 20 [default = false];</code>
     */
    boolean getElDisabled();

    // optional bool invertAz = 21 [default = false];
    /**
     * <code>optional bool invertAz = 21 [default = false];</code>
     */
    boolean hasInvertAz();
    /**
     * <code>optional bool invertAz = 21 [default = false];</code>
     */
    boolean getInvertAz();

    // optional float maxVelocity = 22 [default = 10];
    /**
     * <code>optional float maxVelocity = 22 [default = 10];</code>
     */
    boolean hasMaxVelocity();
    /**
     * <code>optional float maxVelocity = 22 [default = 10];</code>
     */
    float getMaxVelocity();

    // optional bool dynamicVel = 23 [default = false];
    /**
     * <code>optional bool dynamicVel = 23 [default = false];</code>
     */
    boolean hasDynamicVel();
    /**
     * <code>optional bool dynamicVel = 23 [default = false];</code>
     */
    boolean getDynamicVel();

    // optional bool slewEnabled = 24 [default = false];
    /**
     * <code>optional bool slewEnabled = 24 [default = false];</code>
     */
    boolean hasSlewEnabled();
    /**
     * <code>optional bool slewEnabled = 24 [default = false];</code>
     */
    boolean getSlewEnabled();

    // optional float azCloseEnough = 25 [default = 0.5];
    /**
     * <code>optional float azCloseEnough = 25 [default = 0.5];</code>
     */
    boolean hasAzCloseEnough();
    /**
     * <code>optional float azCloseEnough = 25 [default = 0.5];</code>
     */
    float getAzCloseEnough();
  }
  /**
   * Protobuf type {@code falcon_res_msg.RotorRPMConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the rotor resource.  These are populated
   * by ResourceRotor.configureMessage() and from resources.xml.
   *
   * msgName: ROTOR_RPM_CONFIG, used to identify the message
   * IP: IP address to use for communication to the rotor
   * port: Port number to use for communication to the rotor
   * AzOffset: Offset in azimuth of the rotor
   * ElOffset: Offset in elevation of the rotor
   * hardLimit: Enable or disable limits
   * minScanAngle: Minimum angle to scan (e.g. for FAST scans)
   * maxScanAngle: Maximum angle to scan (e.g. for FAST scans)
   * minElevation: Minimum elevation angle to maintain
   * maxElevation: Maximum elevation angle to maintain
   * scanElevation: Elevation angle to use when scanning (e.g. for FAST scans)
   * multicastRate: Rate of multicasting from GlobalConfig hardware
   * pointHoldIncrement: Degrees to step when stepping
   * energyScanSpeed: Velocity in degrees/sec to use when energy scanning
   * scanScrypt: scan scrypt to use for antenna angles
   * gpsServer: Server to get GPS points from
   * gpsUpdate: ???
   * elDisabled: Enable or disable azimuth only operation
   * invertAz: Enable or disable azimuth inversion
   * maxVelocity: set the max velocity for the Rotor (in deg/sec - highest is 30)
   * dynamicVel: set to true to use dynamic velocity stepping for RPM
   * slewEnabled: set to true to allow slew scanning
   * azCloseEnough: value used to tell if the antenna is close enough to the commanded angle
   * </pre>
   */
  public static final class RotorRPMConfig extends
      com.google.protobuf.GeneratedMessage
      implements RotorRPMConfigOrBuilder {
    // Use RotorRPMConfig.newBuilder() to construct.
    private RotorRPMConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RotorRPMConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RotorRPMConfig defaultInstance;
    public static RotorRPMConfig getDefaultInstance() {
      return defaultInstance;
    }

    public RotorRPMConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RotorRPMConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              iP_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              port_ = input.readInt32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              azOffset_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              elOffset_ = input.readFloat();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              hardLimit_ = input.readBool();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              minScanAngle_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              maxScanAngle_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              minElevation_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              maxElevation_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              scanElevation_ = input.readFloat();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              multicastRate_ = input.readFloat();
              break;
            }
            case 109: {
              bitField0_ |= 0x00001000;
              pointHoldIncrement_ = input.readFloat();
              break;
            }
            case 117: {
              bitField0_ |= 0x00002000;
              energyScanSpeed_ = input.readFloat();
              break;
            }
            case 125: {
              bitField0_ |= 0x00004000;
              startDeviation_ = input.readFloat();
              break;
            }
            case 133: {
              bitField0_ |= 0x00008000;
              energyTrackTime_ = input.readFloat();
              break;
            }
            case 138: {
              bitField0_ |= 0x00010000;
              scanScrypt_ = input.readBytes();
              break;
            }
            case 146: {
              bitField0_ |= 0x00020000;
              gpsServer_ = input.readBytes();
              break;
            }
            case 154: {
              bitField0_ |= 0x00040000;
              gpsUpdate_ = input.readBytes();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              elDisabled_ = input.readBool();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              invertAz_ = input.readBool();
              break;
            }
            case 181: {
              bitField0_ |= 0x00200000;
              maxVelocity_ = input.readFloat();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              dynamicVel_ = input.readBool();
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              slewEnabled_ = input.readBool();
              break;
            }
            case 205: {
              bitField0_ |= 0x01000000;
              azCloseEnough_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorRPMConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorRPMConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig.class, fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<RotorRPMConfig> PARSER =
        new com.google.protobuf.AbstractParser<RotorRPMConfig>() {
      public RotorRPMConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RotorRPMConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RotorRPMConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "ROTOR_RPM_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_RPM_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_RPM_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_RPM_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string IP = 2;
    public static final int IP_FIELD_NUMBER = 2;
    private java.lang.Object iP_;
    /**
     * <code>optional string IP = 2;</code>
     */
    public boolean hasIP() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string IP = 2;</code>
     */
    public java.lang.String getIP() {
      java.lang.Object ref = iP_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          iP_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string IP = 2;</code>
     */
    public com.google.protobuf.ByteString
        getIPBytes() {
      java.lang.Object ref = iP_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        iP_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 port = 3;
    public static final int PORT_FIELD_NUMBER = 3;
    private int port_;
    /**
     * <code>optional int32 port = 3;</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 port = 3;</code>
     */
    public int getPort() {
      return port_;
    }

    // optional float AzOffset = 4;
    public static final int AZOFFSET_FIELD_NUMBER = 4;
    private float azOffset_;
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    public boolean hasAzOffset() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    public float getAzOffset() {
      return azOffset_;
    }

    // optional float ElOffset = 5;
    public static final int ELOFFSET_FIELD_NUMBER = 5;
    private float elOffset_;
    /**
     * <code>optional float ElOffset = 5;</code>
     */
    public boolean hasElOffset() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional float ElOffset = 5;</code>
     */
    public float getElOffset() {
      return elOffset_;
    }

    // optional bool hardLimit = 6;
    public static final int HARDLIMIT_FIELD_NUMBER = 6;
    private boolean hardLimit_;
    /**
     * <code>optional bool hardLimit = 6;</code>
     */
    public boolean hasHardLimit() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool hardLimit = 6;</code>
     */
    public boolean getHardLimit() {
      return hardLimit_;
    }

    // optional float minScanAngle = 7;
    public static final int MINSCANANGLE_FIELD_NUMBER = 7;
    private float minScanAngle_;
    /**
     * <code>optional float minScanAngle = 7;</code>
     */
    public boolean hasMinScanAngle() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float minScanAngle = 7;</code>
     */
    public float getMinScanAngle() {
      return minScanAngle_;
    }

    // optional float maxScanAngle = 8;
    public static final int MAXSCANANGLE_FIELD_NUMBER = 8;
    private float maxScanAngle_;
    /**
     * <code>optional float maxScanAngle = 8;</code>
     */
    public boolean hasMaxScanAngle() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float maxScanAngle = 8;</code>
     */
    public float getMaxScanAngle() {
      return maxScanAngle_;
    }

    // optional float minElevation = 9;
    public static final int MINELEVATION_FIELD_NUMBER = 9;
    private float minElevation_;
    /**
     * <code>optional float minElevation = 9;</code>
     */
    public boolean hasMinElevation() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float minElevation = 9;</code>
     */
    public float getMinElevation() {
      return minElevation_;
    }

    // optional float maxElevation = 10;
    public static final int MAXELEVATION_FIELD_NUMBER = 10;
    private float maxElevation_;
    /**
     * <code>optional float maxElevation = 10;</code>
     */
    public boolean hasMaxElevation() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float maxElevation = 10;</code>
     */
    public float getMaxElevation() {
      return maxElevation_;
    }

    // optional float scanElevation = 11;
    public static final int SCANELEVATION_FIELD_NUMBER = 11;
    private float scanElevation_;
    /**
     * <code>optional float scanElevation = 11;</code>
     */
    public boolean hasScanElevation() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional float scanElevation = 11;</code>
     */
    public float getScanElevation() {
      return scanElevation_;
    }

    // optional float multicastRate = 12;
    public static final int MULTICASTRATE_FIELD_NUMBER = 12;
    private float multicastRate_;
    /**
     * <code>optional float multicastRate = 12;</code>
     */
    public boolean hasMulticastRate() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional float multicastRate = 12;</code>
     */
    public float getMulticastRate() {
      return multicastRate_;
    }

    // optional float pointHoldIncrement = 13;
    public static final int POINTHOLDINCREMENT_FIELD_NUMBER = 13;
    private float pointHoldIncrement_;
    /**
     * <code>optional float pointHoldIncrement = 13;</code>
     */
    public boolean hasPointHoldIncrement() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional float pointHoldIncrement = 13;</code>
     */
    public float getPointHoldIncrement() {
      return pointHoldIncrement_;
    }

    // optional float energyScanSpeed = 14 [default = 4];
    public static final int ENERGYSCANSPEED_FIELD_NUMBER = 14;
    private float energyScanSpeed_;
    /**
     * <code>optional float energyScanSpeed = 14 [default = 4];</code>
     */
    public boolean hasEnergyScanSpeed() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional float energyScanSpeed = 14 [default = 4];</code>
     */
    public float getEnergyScanSpeed() {
      return energyScanSpeed_;
    }

    // optional float startDeviation = 15 [default = 180];
    public static final int STARTDEVIATION_FIELD_NUMBER = 15;
    private float startDeviation_;
    /**
     * <code>optional float startDeviation = 15 [default = 180];</code>
     */
    public boolean hasStartDeviation() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional float startDeviation = 15 [default = 180];</code>
     */
    public float getStartDeviation() {
      return startDeviation_;
    }

    // optional float energyTrackTime = 16 [default = 30];
    public static final int ENERGYTRACKTIME_FIELD_NUMBER = 16;
    private float energyTrackTime_;
    /**
     * <code>optional float energyTrackTime = 16 [default = 30];</code>
     */
    public boolean hasEnergyTrackTime() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional float energyTrackTime = 16 [default = 30];</code>
     */
    public float getEnergyTrackTime() {
      return energyTrackTime_;
    }

    // optional string scanScrypt = 17 [default = "NONE"];
    public static final int SCANSCRYPT_FIELD_NUMBER = 17;
    private java.lang.Object scanScrypt_;
    /**
     * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
     */
    public boolean hasScanScrypt() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
     */
    public java.lang.String getScanScrypt() {
      java.lang.Object ref = scanScrypt_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          scanScrypt_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
     */
    public com.google.protobuf.ByteString
        getScanScryptBytes() {
      java.lang.Object ref = scanScrypt_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        scanScrypt_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string gpsServer = 18 [default = "OFF"];
    public static final int GPSSERVER_FIELD_NUMBER = 18;
    private java.lang.Object gpsServer_;
    /**
     * <code>optional string gpsServer = 18 [default = "OFF"];</code>
     */
    public boolean hasGpsServer() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional string gpsServer = 18 [default = "OFF"];</code>
     */
    public java.lang.String getGpsServer() {
      java.lang.Object ref = gpsServer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gpsServer_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gpsServer = 18 [default = "OFF"];</code>
     */
    public com.google.protobuf.ByteString
        getGpsServerBytes() {
      java.lang.Object ref = gpsServer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gpsServer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string gpsUpdate = 19 [default = "ON"];
    public static final int GPSUPDATE_FIELD_NUMBER = 19;
    private java.lang.Object gpsUpdate_;
    /**
     * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
     */
    public boolean hasGpsUpdate() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
     */
    public java.lang.String getGpsUpdate() {
      java.lang.Object ref = gpsUpdate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gpsUpdate_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
     */
    public com.google.protobuf.ByteString
        getGpsUpdateBytes() {
      java.lang.Object ref = gpsUpdate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gpsUpdate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional bool elDisabled = 20 [default = false];
    public static final int ELDISABLED_FIELD_NUMBER = 20;
    private boolean elDisabled_;
    /**
     * <code>optional bool elDisabled = 20 [default = false];</code>
     */
    public boolean hasElDisabled() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional bool elDisabled = 20 [default = false];</code>
     */
    public boolean getElDisabled() {
      return elDisabled_;
    }

    // optional bool invertAz = 21 [default = false];
    public static final int INVERTAZ_FIELD_NUMBER = 21;
    private boolean invertAz_;
    /**
     * <code>optional bool invertAz = 21 [default = false];</code>
     */
    public boolean hasInvertAz() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional bool invertAz = 21 [default = false];</code>
     */
    public boolean getInvertAz() {
      return invertAz_;
    }

    // optional float maxVelocity = 22 [default = 10];
    public static final int MAXVELOCITY_FIELD_NUMBER = 22;
    private float maxVelocity_;
    /**
     * <code>optional float maxVelocity = 22 [default = 10];</code>
     */
    public boolean hasMaxVelocity() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional float maxVelocity = 22 [default = 10];</code>
     */
    public float getMaxVelocity() {
      return maxVelocity_;
    }

    // optional bool dynamicVel = 23 [default = false];
    public static final int DYNAMICVEL_FIELD_NUMBER = 23;
    private boolean dynamicVel_;
    /**
     * <code>optional bool dynamicVel = 23 [default = false];</code>
     */
    public boolean hasDynamicVel() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional bool dynamicVel = 23 [default = false];</code>
     */
    public boolean getDynamicVel() {
      return dynamicVel_;
    }

    // optional bool slewEnabled = 24 [default = false];
    public static final int SLEWENABLED_FIELD_NUMBER = 24;
    private boolean slewEnabled_;
    /**
     * <code>optional bool slewEnabled = 24 [default = false];</code>
     */
    public boolean hasSlewEnabled() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional bool slewEnabled = 24 [default = false];</code>
     */
    public boolean getSlewEnabled() {
      return slewEnabled_;
    }

    // optional float azCloseEnough = 25 [default = 0.5];
    public static final int AZCLOSEENOUGH_FIELD_NUMBER = 25;
    private float azCloseEnough_;
    /**
     * <code>optional float azCloseEnough = 25 [default = 0.5];</code>
     */
    public boolean hasAzCloseEnough() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional float azCloseEnough = 25 [default = 0.5];</code>
     */
    public float getAzCloseEnough() {
      return azCloseEnough_;
    }

    private void initFields() {
      msgName_ = "ROTOR_RPM_CONFIG";
      iP_ = "";
      port_ = 0;
      azOffset_ = 0F;
      elOffset_ = 0F;
      hardLimit_ = false;
      minScanAngle_ = 0F;
      maxScanAngle_ = 0F;
      minElevation_ = 0F;
      maxElevation_ = 0F;
      scanElevation_ = 0F;
      multicastRate_ = 0F;
      pointHoldIncrement_ = 0F;
      energyScanSpeed_ = 4F;
      startDeviation_ = 180F;
      energyTrackTime_ = 30F;
      scanScrypt_ = "NONE";
      gpsServer_ = "OFF";
      gpsUpdate_ = "ON";
      elDisabled_ = false;
      invertAz_ = false;
      maxVelocity_ = 10F;
      dynamicVel_ = false;
      slewEnabled_ = false;
      azCloseEnough_ = 0.5F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIPBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, port_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, azOffset_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, elOffset_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, hardLimit_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, minScanAngle_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, maxScanAngle_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, minElevation_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, maxElevation_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, scanElevation_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(12, multicastRate_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(13, pointHoldIncrement_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeFloat(14, energyScanSpeed_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeFloat(15, startDeviation_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeFloat(16, energyTrackTime_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBytes(17, getScanScryptBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBytes(18, getGpsServerBytes());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBytes(19, getGpsUpdateBytes());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeBool(20, elDisabled_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeBool(21, invertAz_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeFloat(22, maxVelocity_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeBool(23, dynamicVel_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeBool(24, slewEnabled_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeFloat(25, azCloseEnough_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIPBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, port_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, azOffset_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, elOffset_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, hardLimit_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, minScanAngle_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, maxScanAngle_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, minElevation_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, maxElevation_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, scanElevation_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, multicastRate_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, pointHoldIncrement_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, energyScanSpeed_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, startDeviation_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(16, energyTrackTime_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(17, getScanScryptBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(18, getGpsServerBytes());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(19, getGpsUpdateBytes());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(20, elDisabled_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(21, invertAz_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(22, maxVelocity_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(23, dynamicVel_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(24, slewEnabled_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(25, azCloseEnough_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.RotorRPMConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the rotor resource.  These are populated
     * by ResourceRotor.configureMessage() and from resources.xml.
     *
     * msgName: ROTOR_RPM_CONFIG, used to identify the message
     * IP: IP address to use for communication to the rotor
     * port: Port number to use for communication to the rotor
     * AzOffset: Offset in azimuth of the rotor
     * ElOffset: Offset in elevation of the rotor
     * hardLimit: Enable or disable limits
     * minScanAngle: Minimum angle to scan (e.g. for FAST scans)
     * maxScanAngle: Maximum angle to scan (e.g. for FAST scans)
     * minElevation: Minimum elevation angle to maintain
     * maxElevation: Maximum elevation angle to maintain
     * scanElevation: Elevation angle to use when scanning (e.g. for FAST scans)
     * multicastRate: Rate of multicasting from GlobalConfig hardware
     * pointHoldIncrement: Degrees to step when stepping
     * energyScanSpeed: Velocity in degrees/sec to use when energy scanning
     * scanScrypt: scan scrypt to use for antenna angles
     * gpsServer: Server to get GPS points from
     * gpsUpdate: ???
     * elDisabled: Enable or disable azimuth only operation
     * invertAz: Enable or disable azimuth inversion
     * maxVelocity: set the max velocity for the Rotor (in deg/sec - highest is 30)
     * dynamicVel: set to true to use dynamic velocity stepping for RPM
     * slewEnabled: set to true to allow slew scanning
     * azCloseEnough: value used to tell if the antenna is close enough to the commanded angle
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorRPMConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorRPMConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig.class, fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "ROTOR_RPM_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        iP_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        azOffset_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        elOffset_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        hardLimit_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        minScanAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        maxScanAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        minElevation_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        maxElevation_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        scanElevation_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        multicastRate_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        pointHoldIncrement_ = 0F;
        bitField0_ = (bitField0_ & ~0x00001000);
        energyScanSpeed_ = 4F;
        bitField0_ = (bitField0_ & ~0x00002000);
        startDeviation_ = 180F;
        bitField0_ = (bitField0_ & ~0x00004000);
        energyTrackTime_ = 30F;
        bitField0_ = (bitField0_ & ~0x00008000);
        scanScrypt_ = "NONE";
        bitField0_ = (bitField0_ & ~0x00010000);
        gpsServer_ = "OFF";
        bitField0_ = (bitField0_ & ~0x00020000);
        gpsUpdate_ = "ON";
        bitField0_ = (bitField0_ & ~0x00040000);
        elDisabled_ = false;
        bitField0_ = (bitField0_ & ~0x00080000);
        invertAz_ = false;
        bitField0_ = (bitField0_ & ~0x00100000);
        maxVelocity_ = 10F;
        bitField0_ = (bitField0_ & ~0x00200000);
        dynamicVel_ = false;
        bitField0_ = (bitField0_ & ~0x00400000);
        slewEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00800000);
        azCloseEnough_ = 0.5F;
        bitField0_ = (bitField0_ & ~0x01000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorRPMConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig result = new fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.iP_ = iP_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.azOffset_ = azOffset_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.elOffset_ = elOffset_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.hardLimit_ = hardLimit_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.minScanAngle_ = minScanAngle_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.maxScanAngle_ = maxScanAngle_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.minElevation_ = minElevation_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.maxElevation_ = maxElevation_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.scanElevation_ = scanElevation_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.multicastRate_ = multicastRate_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.pointHoldIncrement_ = pointHoldIncrement_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.energyScanSpeed_ = energyScanSpeed_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.startDeviation_ = startDeviation_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.energyTrackTime_ = energyTrackTime_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.scanScrypt_ = scanScrypt_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.gpsServer_ = gpsServer_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.gpsUpdate_ = gpsUpdate_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.elDisabled_ = elDisabled_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.invertAz_ = invertAz_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.maxVelocity_ = maxVelocity_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.dynamicVel_ = dynamicVel_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.slewEnabled_ = slewEnabled_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.azCloseEnough_ = azCloseEnough_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasIP()) {
          bitField0_ |= 0x00000002;
          iP_ = other.iP_;
          onChanged();
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasAzOffset()) {
          setAzOffset(other.getAzOffset());
        }
        if (other.hasElOffset()) {
          setElOffset(other.getElOffset());
        }
        if (other.hasHardLimit()) {
          setHardLimit(other.getHardLimit());
        }
        if (other.hasMinScanAngle()) {
          setMinScanAngle(other.getMinScanAngle());
        }
        if (other.hasMaxScanAngle()) {
          setMaxScanAngle(other.getMaxScanAngle());
        }
        if (other.hasMinElevation()) {
          setMinElevation(other.getMinElevation());
        }
        if (other.hasMaxElevation()) {
          setMaxElevation(other.getMaxElevation());
        }
        if (other.hasScanElevation()) {
          setScanElevation(other.getScanElevation());
        }
        if (other.hasMulticastRate()) {
          setMulticastRate(other.getMulticastRate());
        }
        if (other.hasPointHoldIncrement()) {
          setPointHoldIncrement(other.getPointHoldIncrement());
        }
        if (other.hasEnergyScanSpeed()) {
          setEnergyScanSpeed(other.getEnergyScanSpeed());
        }
        if (other.hasStartDeviation()) {
          setStartDeviation(other.getStartDeviation());
        }
        if (other.hasEnergyTrackTime()) {
          setEnergyTrackTime(other.getEnergyTrackTime());
        }
        if (other.hasScanScrypt()) {
          bitField0_ |= 0x00010000;
          scanScrypt_ = other.scanScrypt_;
          onChanged();
        }
        if (other.hasGpsServer()) {
          bitField0_ |= 0x00020000;
          gpsServer_ = other.gpsServer_;
          onChanged();
        }
        if (other.hasGpsUpdate()) {
          bitField0_ |= 0x00040000;
          gpsUpdate_ = other.gpsUpdate_;
          onChanged();
        }
        if (other.hasElDisabled()) {
          setElDisabled(other.getElDisabled());
        }
        if (other.hasInvertAz()) {
          setInvertAz(other.getInvertAz());
        }
        if (other.hasMaxVelocity()) {
          setMaxVelocity(other.getMaxVelocity());
        }
        if (other.hasDynamicVel()) {
          setDynamicVel(other.getDynamicVel());
        }
        if (other.hasSlewEnabled()) {
          setSlewEnabled(other.getSlewEnabled());
        }
        if (other.hasAzCloseEnough()) {
          setAzCloseEnough(other.getAzCloseEnough());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.RotorRPMConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "ROTOR_RPM_CONFIG"];
      private java.lang.Object msgName_ = "ROTOR_RPM_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_RPM_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_RPM_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_RPM_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_RPM_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_RPM_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_RPM_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional string IP = 2;
      private java.lang.Object iP_ = "";
      /**
       * <code>optional string IP = 2;</code>
       */
      public boolean hasIP() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public java.lang.String getIP() {
        java.lang.Object ref = iP_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          iP_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public com.google.protobuf.ByteString
          getIPBytes() {
        java.lang.Object ref = iP_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          iP_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public Builder setIP(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public Builder clearIP() {
        bitField0_ = (bitField0_ & ~0x00000002);
        iP_ = getDefaultInstance().getIP();
        onChanged();
        return this;
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public Builder setIPBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iP_ = value;
        onChanged();
        return this;
      }

      // optional int32 port = 3;
      private int port_ ;
      /**
       * <code>optional int32 port = 3;</code>
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 port = 3;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <code>optional int32 port = 3;</code>
       */
      public Builder setPort(int value) {
        bitField0_ |= 0x00000004;
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 port = 3;</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000004);
        port_ = 0;
        onChanged();
        return this;
      }

      // optional float AzOffset = 4;
      private float azOffset_ ;
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public boolean hasAzOffset() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public float getAzOffset() {
        return azOffset_;
      }
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public Builder setAzOffset(float value) {
        bitField0_ |= 0x00000008;
        azOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public Builder clearAzOffset() {
        bitField0_ = (bitField0_ & ~0x00000008);
        azOffset_ = 0F;
        onChanged();
        return this;
      }

      // optional float ElOffset = 5;
      private float elOffset_ ;
      /**
       * <code>optional float ElOffset = 5;</code>
       */
      public boolean hasElOffset() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float ElOffset = 5;</code>
       */
      public float getElOffset() {
        return elOffset_;
      }
      /**
       * <code>optional float ElOffset = 5;</code>
       */
      public Builder setElOffset(float value) {
        bitField0_ |= 0x00000010;
        elOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float ElOffset = 5;</code>
       */
      public Builder clearElOffset() {
        bitField0_ = (bitField0_ & ~0x00000010);
        elOffset_ = 0F;
        onChanged();
        return this;
      }

      // optional bool hardLimit = 6;
      private boolean hardLimit_ ;
      /**
       * <code>optional bool hardLimit = 6;</code>
       */
      public boolean hasHardLimit() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool hardLimit = 6;</code>
       */
      public boolean getHardLimit() {
        return hardLimit_;
      }
      /**
       * <code>optional bool hardLimit = 6;</code>
       */
      public Builder setHardLimit(boolean value) {
        bitField0_ |= 0x00000020;
        hardLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hardLimit = 6;</code>
       */
      public Builder clearHardLimit() {
        bitField0_ = (bitField0_ & ~0x00000020);
        hardLimit_ = false;
        onChanged();
        return this;
      }

      // optional float minScanAngle = 7;
      private float minScanAngle_ ;
      /**
       * <code>optional float minScanAngle = 7;</code>
       */
      public boolean hasMinScanAngle() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float minScanAngle = 7;</code>
       */
      public float getMinScanAngle() {
        return minScanAngle_;
      }
      /**
       * <code>optional float minScanAngle = 7;</code>
       */
      public Builder setMinScanAngle(float value) {
        bitField0_ |= 0x00000040;
        minScanAngle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float minScanAngle = 7;</code>
       */
      public Builder clearMinScanAngle() {
        bitField0_ = (bitField0_ & ~0x00000040);
        minScanAngle_ = 0F;
        onChanged();
        return this;
      }

      // optional float maxScanAngle = 8;
      private float maxScanAngle_ ;
      /**
       * <code>optional float maxScanAngle = 8;</code>
       */
      public boolean hasMaxScanAngle() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float maxScanAngle = 8;</code>
       */
      public float getMaxScanAngle() {
        return maxScanAngle_;
      }
      /**
       * <code>optional float maxScanAngle = 8;</code>
       */
      public Builder setMaxScanAngle(float value) {
        bitField0_ |= 0x00000080;
        maxScanAngle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxScanAngle = 8;</code>
       */
      public Builder clearMaxScanAngle() {
        bitField0_ = (bitField0_ & ~0x00000080);
        maxScanAngle_ = 0F;
        onChanged();
        return this;
      }

      // optional float minElevation = 9;
      private float minElevation_ ;
      /**
       * <code>optional float minElevation = 9;</code>
       */
      public boolean hasMinElevation() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float minElevation = 9;</code>
       */
      public float getMinElevation() {
        return minElevation_;
      }
      /**
       * <code>optional float minElevation = 9;</code>
       */
      public Builder setMinElevation(float value) {
        bitField0_ |= 0x00000100;
        minElevation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float minElevation = 9;</code>
       */
      public Builder clearMinElevation() {
        bitField0_ = (bitField0_ & ~0x00000100);
        minElevation_ = 0F;
        onChanged();
        return this;
      }

      // optional float maxElevation = 10;
      private float maxElevation_ ;
      /**
       * <code>optional float maxElevation = 10;</code>
       */
      public boolean hasMaxElevation() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float maxElevation = 10;</code>
       */
      public float getMaxElevation() {
        return maxElevation_;
      }
      /**
       * <code>optional float maxElevation = 10;</code>
       */
      public Builder setMaxElevation(float value) {
        bitField0_ |= 0x00000200;
        maxElevation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxElevation = 10;</code>
       */
      public Builder clearMaxElevation() {
        bitField0_ = (bitField0_ & ~0x00000200);
        maxElevation_ = 0F;
        onChanged();
        return this;
      }

      // optional float scanElevation = 11;
      private float scanElevation_ ;
      /**
       * <code>optional float scanElevation = 11;</code>
       */
      public boolean hasScanElevation() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional float scanElevation = 11;</code>
       */
      public float getScanElevation() {
        return scanElevation_;
      }
      /**
       * <code>optional float scanElevation = 11;</code>
       */
      public Builder setScanElevation(float value) {
        bitField0_ |= 0x00000400;
        scanElevation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float scanElevation = 11;</code>
       */
      public Builder clearScanElevation() {
        bitField0_ = (bitField0_ & ~0x00000400);
        scanElevation_ = 0F;
        onChanged();
        return this;
      }

      // optional float multicastRate = 12;
      private float multicastRate_ ;
      /**
       * <code>optional float multicastRate = 12;</code>
       */
      public boolean hasMulticastRate() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float multicastRate = 12;</code>
       */
      public float getMulticastRate() {
        return multicastRate_;
      }
      /**
       * <code>optional float multicastRate = 12;</code>
       */
      public Builder setMulticastRate(float value) {
        bitField0_ |= 0x00000800;
        multicastRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float multicastRate = 12;</code>
       */
      public Builder clearMulticastRate() {
        bitField0_ = (bitField0_ & ~0x00000800);
        multicastRate_ = 0F;
        onChanged();
        return this;
      }

      // optional float pointHoldIncrement = 13;
      private float pointHoldIncrement_ ;
      /**
       * <code>optional float pointHoldIncrement = 13;</code>
       */
      public boolean hasPointHoldIncrement() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional float pointHoldIncrement = 13;</code>
       */
      public float getPointHoldIncrement() {
        return pointHoldIncrement_;
      }
      /**
       * <code>optional float pointHoldIncrement = 13;</code>
       */
      public Builder setPointHoldIncrement(float value) {
        bitField0_ |= 0x00001000;
        pointHoldIncrement_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float pointHoldIncrement = 13;</code>
       */
      public Builder clearPointHoldIncrement() {
        bitField0_ = (bitField0_ & ~0x00001000);
        pointHoldIncrement_ = 0F;
        onChanged();
        return this;
      }

      // optional float energyScanSpeed = 14 [default = 4];
      private float energyScanSpeed_ = 4F;
      /**
       * <code>optional float energyScanSpeed = 14 [default = 4];</code>
       */
      public boolean hasEnergyScanSpeed() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional float energyScanSpeed = 14 [default = 4];</code>
       */
      public float getEnergyScanSpeed() {
        return energyScanSpeed_;
      }
      /**
       * <code>optional float energyScanSpeed = 14 [default = 4];</code>
       */
      public Builder setEnergyScanSpeed(float value) {
        bitField0_ |= 0x00002000;
        energyScanSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float energyScanSpeed = 14 [default = 4];</code>
       */
      public Builder clearEnergyScanSpeed() {
        bitField0_ = (bitField0_ & ~0x00002000);
        energyScanSpeed_ = 4F;
        onChanged();
        return this;
      }

      // optional float startDeviation = 15 [default = 180];
      private float startDeviation_ = 180F;
      /**
       * <code>optional float startDeviation = 15 [default = 180];</code>
       */
      public boolean hasStartDeviation() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional float startDeviation = 15 [default = 180];</code>
       */
      public float getStartDeviation() {
        return startDeviation_;
      }
      /**
       * <code>optional float startDeviation = 15 [default = 180];</code>
       */
      public Builder setStartDeviation(float value) {
        bitField0_ |= 0x00004000;
        startDeviation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float startDeviation = 15 [default = 180];</code>
       */
      public Builder clearStartDeviation() {
        bitField0_ = (bitField0_ & ~0x00004000);
        startDeviation_ = 180F;
        onChanged();
        return this;
      }

      // optional float energyTrackTime = 16 [default = 30];
      private float energyTrackTime_ = 30F;
      /**
       * <code>optional float energyTrackTime = 16 [default = 30];</code>
       */
      public boolean hasEnergyTrackTime() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional float energyTrackTime = 16 [default = 30];</code>
       */
      public float getEnergyTrackTime() {
        return energyTrackTime_;
      }
      /**
       * <code>optional float energyTrackTime = 16 [default = 30];</code>
       */
      public Builder setEnergyTrackTime(float value) {
        bitField0_ |= 0x00008000;
        energyTrackTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float energyTrackTime = 16 [default = 30];</code>
       */
      public Builder clearEnergyTrackTime() {
        bitField0_ = (bitField0_ & ~0x00008000);
        energyTrackTime_ = 30F;
        onChanged();
        return this;
      }

      // optional string scanScrypt = 17 [default = "NONE"];
      private java.lang.Object scanScrypt_ = "NONE";
      /**
       * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
       */
      public boolean hasScanScrypt() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
       */
      public java.lang.String getScanScrypt() {
        java.lang.Object ref = scanScrypt_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          scanScrypt_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
       */
      public com.google.protobuf.ByteString
          getScanScryptBytes() {
        java.lang.Object ref = scanScrypt_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          scanScrypt_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
       */
      public Builder setScanScrypt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        scanScrypt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
       */
      public Builder clearScanScrypt() {
        bitField0_ = (bitField0_ & ~0x00010000);
        scanScrypt_ = getDefaultInstance().getScanScrypt();
        onChanged();
        return this;
      }
      /**
       * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
       */
      public Builder setScanScryptBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        scanScrypt_ = value;
        onChanged();
        return this;
      }

      // optional string gpsServer = 18 [default = "OFF"];
      private java.lang.Object gpsServer_ = "OFF";
      /**
       * <code>optional string gpsServer = 18 [default = "OFF"];</code>
       */
      public boolean hasGpsServer() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional string gpsServer = 18 [default = "OFF"];</code>
       */
      public java.lang.String getGpsServer() {
        java.lang.Object ref = gpsServer_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gpsServer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gpsServer = 18 [default = "OFF"];</code>
       */
      public com.google.protobuf.ByteString
          getGpsServerBytes() {
        java.lang.Object ref = gpsServer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gpsServer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gpsServer = 18 [default = "OFF"];</code>
       */
      public Builder setGpsServer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
        gpsServer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpsServer = 18 [default = "OFF"];</code>
       */
      public Builder clearGpsServer() {
        bitField0_ = (bitField0_ & ~0x00020000);
        gpsServer_ = getDefaultInstance().getGpsServer();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpsServer = 18 [default = "OFF"];</code>
       */
      public Builder setGpsServerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
        gpsServer_ = value;
        onChanged();
        return this;
      }

      // optional string gpsUpdate = 19 [default = "ON"];
      private java.lang.Object gpsUpdate_ = "ON";
      /**
       * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
       */
      public boolean hasGpsUpdate() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
       */
      public java.lang.String getGpsUpdate() {
        java.lang.Object ref = gpsUpdate_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gpsUpdate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
       */
      public com.google.protobuf.ByteString
          getGpsUpdateBytes() {
        java.lang.Object ref = gpsUpdate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gpsUpdate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
       */
      public Builder setGpsUpdate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        gpsUpdate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
       */
      public Builder clearGpsUpdate() {
        bitField0_ = (bitField0_ & ~0x00040000);
        gpsUpdate_ = getDefaultInstance().getGpsUpdate();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
       */
      public Builder setGpsUpdateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        gpsUpdate_ = value;
        onChanged();
        return this;
      }

      // optional bool elDisabled = 20 [default = false];
      private boolean elDisabled_ ;
      /**
       * <code>optional bool elDisabled = 20 [default = false];</code>
       */
      public boolean hasElDisabled() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional bool elDisabled = 20 [default = false];</code>
       */
      public boolean getElDisabled() {
        return elDisabled_;
      }
      /**
       * <code>optional bool elDisabled = 20 [default = false];</code>
       */
      public Builder setElDisabled(boolean value) {
        bitField0_ |= 0x00080000;
        elDisabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool elDisabled = 20 [default = false];</code>
       */
      public Builder clearElDisabled() {
        bitField0_ = (bitField0_ & ~0x00080000);
        elDisabled_ = false;
        onChanged();
        return this;
      }

      // optional bool invertAz = 21 [default = false];
      private boolean invertAz_ ;
      /**
       * <code>optional bool invertAz = 21 [default = false];</code>
       */
      public boolean hasInvertAz() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional bool invertAz = 21 [default = false];</code>
       */
      public boolean getInvertAz() {
        return invertAz_;
      }
      /**
       * <code>optional bool invertAz = 21 [default = false];</code>
       */
      public Builder setInvertAz(boolean value) {
        bitField0_ |= 0x00100000;
        invertAz_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool invertAz = 21 [default = false];</code>
       */
      public Builder clearInvertAz() {
        bitField0_ = (bitField0_ & ~0x00100000);
        invertAz_ = false;
        onChanged();
        return this;
      }

      // optional float maxVelocity = 22 [default = 10];
      private float maxVelocity_ = 10F;
      /**
       * <code>optional float maxVelocity = 22 [default = 10];</code>
       */
      public boolean hasMaxVelocity() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional float maxVelocity = 22 [default = 10];</code>
       */
      public float getMaxVelocity() {
        return maxVelocity_;
      }
      /**
       * <code>optional float maxVelocity = 22 [default = 10];</code>
       */
      public Builder setMaxVelocity(float value) {
        bitField0_ |= 0x00200000;
        maxVelocity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxVelocity = 22 [default = 10];</code>
       */
      public Builder clearMaxVelocity() {
        bitField0_ = (bitField0_ & ~0x00200000);
        maxVelocity_ = 10F;
        onChanged();
        return this;
      }

      // optional bool dynamicVel = 23 [default = false];
      private boolean dynamicVel_ ;
      /**
       * <code>optional bool dynamicVel = 23 [default = false];</code>
       */
      public boolean hasDynamicVel() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional bool dynamicVel = 23 [default = false];</code>
       */
      public boolean getDynamicVel() {
        return dynamicVel_;
      }
      /**
       * <code>optional bool dynamicVel = 23 [default = false];</code>
       */
      public Builder setDynamicVel(boolean value) {
        bitField0_ |= 0x00400000;
        dynamicVel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool dynamicVel = 23 [default = false];</code>
       */
      public Builder clearDynamicVel() {
        bitField0_ = (bitField0_ & ~0x00400000);
        dynamicVel_ = false;
        onChanged();
        return this;
      }

      // optional bool slewEnabled = 24 [default = false];
      private boolean slewEnabled_ ;
      /**
       * <code>optional bool slewEnabled = 24 [default = false];</code>
       */
      public boolean hasSlewEnabled() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional bool slewEnabled = 24 [default = false];</code>
       */
      public boolean getSlewEnabled() {
        return slewEnabled_;
      }
      /**
       * <code>optional bool slewEnabled = 24 [default = false];</code>
       */
      public Builder setSlewEnabled(boolean value) {
        bitField0_ |= 0x00800000;
        slewEnabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool slewEnabled = 24 [default = false];</code>
       */
      public Builder clearSlewEnabled() {
        bitField0_ = (bitField0_ & ~0x00800000);
        slewEnabled_ = false;
        onChanged();
        return this;
      }

      // optional float azCloseEnough = 25 [default = 0.5];
      private float azCloseEnough_ = 0.5F;
      /**
       * <code>optional float azCloseEnough = 25 [default = 0.5];</code>
       */
      public boolean hasAzCloseEnough() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional float azCloseEnough = 25 [default = 0.5];</code>
       */
      public float getAzCloseEnough() {
        return azCloseEnough_;
      }
      /**
       * <code>optional float azCloseEnough = 25 [default = 0.5];</code>
       */
      public Builder setAzCloseEnough(float value) {
        bitField0_ |= 0x01000000;
        azCloseEnough_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float azCloseEnough = 25 [default = 0.5];</code>
       */
      public Builder clearAzCloseEnough() {
        bitField0_ = (bitField0_ & ~0x01000000);
        azCloseEnough_ = 0.5F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.RotorRPMConfig)
    }

    static {
      defaultInstance = new RotorRPMConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.RotorRPMConfig)
  }

  public interface RotorProtatorConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "ROTOR_PROTATOR_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_PROTATOR_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_PROTATOR_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_PROTATOR_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional string IP = 2;
    /**
     * <code>optional string IP = 2;</code>
     */
    boolean hasIP();
    /**
     * <code>optional string IP = 2;</code>
     */
    java.lang.String getIP();
    /**
     * <code>optional string IP = 2;</code>
     */
    com.google.protobuf.ByteString
        getIPBytes();

    // optional int32 port = 3;
    /**
     * <code>optional int32 port = 3;</code>
     */
    boolean hasPort();
    /**
     * <code>optional int32 port = 3;</code>
     */
    int getPort();

    // optional float AzOffset = 4;
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    boolean hasAzOffset();
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    float getAzOffset();

    // optional bool hardLimit = 5;
    /**
     * <code>optional bool hardLimit = 5;</code>
     */
    boolean hasHardLimit();
    /**
     * <code>optional bool hardLimit = 5;</code>
     */
    boolean getHardLimit();

    // optional float minScanAngle = 6;
    /**
     * <code>optional float minScanAngle = 6;</code>
     */
    boolean hasMinScanAngle();
    /**
     * <code>optional float minScanAngle = 6;</code>
     */
    float getMinScanAngle();

    // optional float maxScanAngle = 7;
    /**
     * <code>optional float maxScanAngle = 7;</code>
     */
    boolean hasMaxScanAngle();
    /**
     * <code>optional float maxScanAngle = 7;</code>
     */
    float getMaxScanAngle();

    // optional float multicastRate = 8;
    /**
     * <code>optional float multicastRate = 8;</code>
     */
    boolean hasMulticastRate();
    /**
     * <code>optional float multicastRate = 8;</code>
     */
    float getMulticastRate();

    // optional float pointHoldIncrement = 9;
    /**
     * <code>optional float pointHoldIncrement = 9;</code>
     */
    boolean hasPointHoldIncrement();
    /**
     * <code>optional float pointHoldIncrement = 9;</code>
     */
    float getPointHoldIncrement();

    // optional float energyScanSpeed = 10 [default = 20];
    /**
     * <code>optional float energyScanSpeed = 10 [default = 20];</code>
     */
    boolean hasEnergyScanSpeed();
    /**
     * <code>optional float energyScanSpeed = 10 [default = 20];</code>
     */
    float getEnergyScanSpeed();

    // optional float startDeviation = 11 [default = 180];
    /**
     * <code>optional float startDeviation = 11 [default = 180];</code>
     */
    boolean hasStartDeviation();
    /**
     * <code>optional float startDeviation = 11 [default = 180];</code>
     */
    float getStartDeviation();

    // optional float energyTrackTime = 12 [default = 500];
    /**
     * <code>optional float energyTrackTime = 12 [default = 500];</code>
     */
    boolean hasEnergyTrackTime();
    /**
     * <code>optional float energyTrackTime = 12 [default = 500];</code>
     */
    float getEnergyTrackTime();

    // optional string scanScrypt = 13 [default = "NONE"];
    /**
     * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
     */
    boolean hasScanScrypt();
    /**
     * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
     */
    java.lang.String getScanScrypt();
    /**
     * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
     */
    com.google.protobuf.ByteString
        getScanScryptBytes();

    // optional string gpsServer = 14 [default = "OFF"];
    /**
     * <code>optional string gpsServer = 14 [default = "OFF"];</code>
     */
    boolean hasGpsServer();
    /**
     * <code>optional string gpsServer = 14 [default = "OFF"];</code>
     */
    java.lang.String getGpsServer();
    /**
     * <code>optional string gpsServer = 14 [default = "OFF"];</code>
     */
    com.google.protobuf.ByteString
        getGpsServerBytes();

    // optional string gpsUpdate = 15 [default = "ON"];
    /**
     * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
     */
    boolean hasGpsUpdate();
    /**
     * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
     */
    java.lang.String getGpsUpdate();
    /**
     * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
     */
    com.google.protobuf.ByteString
        getGpsUpdateBytes();

    // optional float azCloseEnough = 16 [default = 5];
    /**
     * <code>optional float azCloseEnough = 16 [default = 5];</code>
     */
    boolean hasAzCloseEnough();
    /**
     * <code>optional float azCloseEnough = 16 [default = 5];</code>
     */
    float getAzCloseEnough();

    // optional bool elDisabled = 17 [default = true];
    /**
     * <code>optional bool elDisabled = 17 [default = true];</code>
     */
    boolean hasElDisabled();
    /**
     * <code>optional bool elDisabled = 17 [default = true];</code>
     */
    boolean getElDisabled();
  }
  /**
   * Protobuf type {@code falcon_res_msg.RotorProtatorConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the rotor resource.  These are populated
   * by ResourceRotor.configureMessage() and from resources.xml.
   *
   * msgName: ROTOR_PROTATOR_CONFIG, used to identify the message
   * IP: IP address to use for communication to the rotor
   * port: Port number to use for communication to the rotor
   * AzOffset: Offset in azimuth of the rotor
   * hardLimit: Enable or disable limits
   * minScanAngle: Minimum angle to scan (e.g. for FAST scans)
   * maxScanAngle: Maximum angle to scan (e.g. for FAST scans)
   * multicastRate: Rate of multicasting from GlobalConfig hardware
   * pointHoldIncrement: Degrees to step when stepping
   * energyScanSpeed: Velocity in degrees
   * scanScrypt: scan scrypt to use for antenna angles
   * gpsServer: Server to get GPS points from
   * gpsUpdate: ???
   * azCloseEnough: value used to tell if the antenna is close enough to the commanded angle
   * </pre>
   */
  public static final class RotorProtatorConfig extends
      com.google.protobuf.GeneratedMessage
      implements RotorProtatorConfigOrBuilder {
    // Use RotorProtatorConfig.newBuilder() to construct.
    private RotorProtatorConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RotorProtatorConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RotorProtatorConfig defaultInstance;
    public static RotorProtatorConfig getDefaultInstance() {
      return defaultInstance;
    }

    public RotorProtatorConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RotorProtatorConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              iP_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              port_ = input.readInt32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              azOffset_ = input.readFloat();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              hardLimit_ = input.readBool();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              minScanAngle_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              maxScanAngle_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              multicastRate_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              pointHoldIncrement_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              energyScanSpeed_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              startDeviation_ = input.readFloat();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              energyTrackTime_ = input.readFloat();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              scanScrypt_ = input.readBytes();
              break;
            }
            case 114: {
              bitField0_ |= 0x00002000;
              gpsServer_ = input.readBytes();
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              gpsUpdate_ = input.readBytes();
              break;
            }
            case 133: {
              bitField0_ |= 0x00008000;
              azCloseEnough_ = input.readFloat();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              elDisabled_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorProtatorConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorProtatorConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig.class, fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<RotorProtatorConfig> PARSER =
        new com.google.protobuf.AbstractParser<RotorProtatorConfig>() {
      public RotorProtatorConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RotorProtatorConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RotorProtatorConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "ROTOR_PROTATOR_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_PROTATOR_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_PROTATOR_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_PROTATOR_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string IP = 2;
    public static final int IP_FIELD_NUMBER = 2;
    private java.lang.Object iP_;
    /**
     * <code>optional string IP = 2;</code>
     */
    public boolean hasIP() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string IP = 2;</code>
     */
    public java.lang.String getIP() {
      java.lang.Object ref = iP_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          iP_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string IP = 2;</code>
     */
    public com.google.protobuf.ByteString
        getIPBytes() {
      java.lang.Object ref = iP_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        iP_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 port = 3;
    public static final int PORT_FIELD_NUMBER = 3;
    private int port_;
    /**
     * <code>optional int32 port = 3;</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 port = 3;</code>
     */
    public int getPort() {
      return port_;
    }

    // optional float AzOffset = 4;
    public static final int AZOFFSET_FIELD_NUMBER = 4;
    private float azOffset_;
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    public boolean hasAzOffset() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    public float getAzOffset() {
      return azOffset_;
    }

    // optional bool hardLimit = 5;
    public static final int HARDLIMIT_FIELD_NUMBER = 5;
    private boolean hardLimit_;
    /**
     * <code>optional bool hardLimit = 5;</code>
     */
    public boolean hasHardLimit() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool hardLimit = 5;</code>
     */
    public boolean getHardLimit() {
      return hardLimit_;
    }

    // optional float minScanAngle = 6;
    public static final int MINSCANANGLE_FIELD_NUMBER = 6;
    private float minScanAngle_;
    /**
     * <code>optional float minScanAngle = 6;</code>
     */
    public boolean hasMinScanAngle() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float minScanAngle = 6;</code>
     */
    public float getMinScanAngle() {
      return minScanAngle_;
    }

    // optional float maxScanAngle = 7;
    public static final int MAXSCANANGLE_FIELD_NUMBER = 7;
    private float maxScanAngle_;
    /**
     * <code>optional float maxScanAngle = 7;</code>
     */
    public boolean hasMaxScanAngle() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float maxScanAngle = 7;</code>
     */
    public float getMaxScanAngle() {
      return maxScanAngle_;
    }

    // optional float multicastRate = 8;
    public static final int MULTICASTRATE_FIELD_NUMBER = 8;
    private float multicastRate_;
    /**
     * <code>optional float multicastRate = 8;</code>
     */
    public boolean hasMulticastRate() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float multicastRate = 8;</code>
     */
    public float getMulticastRate() {
      return multicastRate_;
    }

    // optional float pointHoldIncrement = 9;
    public static final int POINTHOLDINCREMENT_FIELD_NUMBER = 9;
    private float pointHoldIncrement_;
    /**
     * <code>optional float pointHoldIncrement = 9;</code>
     */
    public boolean hasPointHoldIncrement() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float pointHoldIncrement = 9;</code>
     */
    public float getPointHoldIncrement() {
      return pointHoldIncrement_;
    }

    // optional float energyScanSpeed = 10 [default = 20];
    public static final int ENERGYSCANSPEED_FIELD_NUMBER = 10;
    private float energyScanSpeed_;
    /**
     * <code>optional float energyScanSpeed = 10 [default = 20];</code>
     */
    public boolean hasEnergyScanSpeed() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float energyScanSpeed = 10 [default = 20];</code>
     */
    public float getEnergyScanSpeed() {
      return energyScanSpeed_;
    }

    // optional float startDeviation = 11 [default = 180];
    public static final int STARTDEVIATION_FIELD_NUMBER = 11;
    private float startDeviation_;
    /**
     * <code>optional float startDeviation = 11 [default = 180];</code>
     */
    public boolean hasStartDeviation() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional float startDeviation = 11 [default = 180];</code>
     */
    public float getStartDeviation() {
      return startDeviation_;
    }

    // optional float energyTrackTime = 12 [default = 500];
    public static final int ENERGYTRACKTIME_FIELD_NUMBER = 12;
    private float energyTrackTime_;
    /**
     * <code>optional float energyTrackTime = 12 [default = 500];</code>
     */
    public boolean hasEnergyTrackTime() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional float energyTrackTime = 12 [default = 500];</code>
     */
    public float getEnergyTrackTime() {
      return energyTrackTime_;
    }

    // optional string scanScrypt = 13 [default = "NONE"];
    public static final int SCANSCRYPT_FIELD_NUMBER = 13;
    private java.lang.Object scanScrypt_;
    /**
     * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
     */
    public boolean hasScanScrypt() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
     */
    public java.lang.String getScanScrypt() {
      java.lang.Object ref = scanScrypt_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          scanScrypt_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
     */
    public com.google.protobuf.ByteString
        getScanScryptBytes() {
      java.lang.Object ref = scanScrypt_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        scanScrypt_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string gpsServer = 14 [default = "OFF"];
    public static final int GPSSERVER_FIELD_NUMBER = 14;
    private java.lang.Object gpsServer_;
    /**
     * <code>optional string gpsServer = 14 [default = "OFF"];</code>
     */
    public boolean hasGpsServer() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional string gpsServer = 14 [default = "OFF"];</code>
     */
    public java.lang.String getGpsServer() {
      java.lang.Object ref = gpsServer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gpsServer_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gpsServer = 14 [default = "OFF"];</code>
     */
    public com.google.protobuf.ByteString
        getGpsServerBytes() {
      java.lang.Object ref = gpsServer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gpsServer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string gpsUpdate = 15 [default = "ON"];
    public static final int GPSUPDATE_FIELD_NUMBER = 15;
    private java.lang.Object gpsUpdate_;
    /**
     * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
     */
    public boolean hasGpsUpdate() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
     */
    public java.lang.String getGpsUpdate() {
      java.lang.Object ref = gpsUpdate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gpsUpdate_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
     */
    public com.google.protobuf.ByteString
        getGpsUpdateBytes() {
      java.lang.Object ref = gpsUpdate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gpsUpdate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional float azCloseEnough = 16 [default = 5];
    public static final int AZCLOSEENOUGH_FIELD_NUMBER = 16;
    private float azCloseEnough_;
    /**
     * <code>optional float azCloseEnough = 16 [default = 5];</code>
     */
    public boolean hasAzCloseEnough() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional float azCloseEnough = 16 [default = 5];</code>
     */
    public float getAzCloseEnough() {
      return azCloseEnough_;
    }

    // optional bool elDisabled = 17 [default = true];
    public static final int ELDISABLED_FIELD_NUMBER = 17;
    private boolean elDisabled_;
    /**
     * <code>optional bool elDisabled = 17 [default = true];</code>
     */
    public boolean hasElDisabled() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional bool elDisabled = 17 [default = true];</code>
     */
    public boolean getElDisabled() {
      return elDisabled_;
    }

    private void initFields() {
      msgName_ = "ROTOR_PROTATOR_CONFIG";
      iP_ = "";
      port_ = 0;
      azOffset_ = 0F;
      hardLimit_ = false;
      minScanAngle_ = 0F;
      maxScanAngle_ = 0F;
      multicastRate_ = 0F;
      pointHoldIncrement_ = 0F;
      energyScanSpeed_ = 20F;
      startDeviation_ = 180F;
      energyTrackTime_ = 500F;
      scanScrypt_ = "NONE";
      gpsServer_ = "OFF";
      gpsUpdate_ = "ON";
      azCloseEnough_ = 5F;
      elDisabled_ = true;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIPBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, port_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, azOffset_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, hardLimit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, minScanAngle_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, maxScanAngle_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, multicastRate_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, pointHoldIncrement_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, energyScanSpeed_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, startDeviation_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(12, energyTrackTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, getScanScryptBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getGpsServerBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, getGpsUpdateBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeFloat(16, azCloseEnough_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBool(17, elDisabled_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIPBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, port_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, azOffset_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, hardLimit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, minScanAngle_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, maxScanAngle_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, multicastRate_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, pointHoldIncrement_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, energyScanSpeed_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, startDeviation_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, energyTrackTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getScanScryptBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getGpsServerBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getGpsUpdateBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(16, azCloseEnough_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(17, elDisabled_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.RotorProtatorConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the rotor resource.  These are populated
     * by ResourceRotor.configureMessage() and from resources.xml.
     *
     * msgName: ROTOR_PROTATOR_CONFIG, used to identify the message
     * IP: IP address to use for communication to the rotor
     * port: Port number to use for communication to the rotor
     * AzOffset: Offset in azimuth of the rotor
     * hardLimit: Enable or disable limits
     * minScanAngle: Minimum angle to scan (e.g. for FAST scans)
     * maxScanAngle: Maximum angle to scan (e.g. for FAST scans)
     * multicastRate: Rate of multicasting from GlobalConfig hardware
     * pointHoldIncrement: Degrees to step when stepping
     * energyScanSpeed: Velocity in degrees
     * scanScrypt: scan scrypt to use for antenna angles
     * gpsServer: Server to get GPS points from
     * gpsUpdate: ???
     * azCloseEnough: value used to tell if the antenna is close enough to the commanded angle
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorProtatorConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorProtatorConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig.class, fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "ROTOR_PROTATOR_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        iP_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        azOffset_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        hardLimit_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        minScanAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        maxScanAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        multicastRate_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        pointHoldIncrement_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        energyScanSpeed_ = 20F;
        bitField0_ = (bitField0_ & ~0x00000200);
        startDeviation_ = 180F;
        bitField0_ = (bitField0_ & ~0x00000400);
        energyTrackTime_ = 500F;
        bitField0_ = (bitField0_ & ~0x00000800);
        scanScrypt_ = "NONE";
        bitField0_ = (bitField0_ & ~0x00001000);
        gpsServer_ = "OFF";
        bitField0_ = (bitField0_ & ~0x00002000);
        gpsUpdate_ = "ON";
        bitField0_ = (bitField0_ & ~0x00004000);
        azCloseEnough_ = 5F;
        bitField0_ = (bitField0_ & ~0x00008000);
        elDisabled_ = true;
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorProtatorConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig result = new fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.iP_ = iP_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.azOffset_ = azOffset_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.hardLimit_ = hardLimit_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.minScanAngle_ = minScanAngle_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.maxScanAngle_ = maxScanAngle_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.multicastRate_ = multicastRate_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.pointHoldIncrement_ = pointHoldIncrement_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.energyScanSpeed_ = energyScanSpeed_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.startDeviation_ = startDeviation_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.energyTrackTime_ = energyTrackTime_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.scanScrypt_ = scanScrypt_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.gpsServer_ = gpsServer_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.gpsUpdate_ = gpsUpdate_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.azCloseEnough_ = azCloseEnough_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.elDisabled_ = elDisabled_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasIP()) {
          bitField0_ |= 0x00000002;
          iP_ = other.iP_;
          onChanged();
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasAzOffset()) {
          setAzOffset(other.getAzOffset());
        }
        if (other.hasHardLimit()) {
          setHardLimit(other.getHardLimit());
        }
        if (other.hasMinScanAngle()) {
          setMinScanAngle(other.getMinScanAngle());
        }
        if (other.hasMaxScanAngle()) {
          setMaxScanAngle(other.getMaxScanAngle());
        }
        if (other.hasMulticastRate()) {
          setMulticastRate(other.getMulticastRate());
        }
        if (other.hasPointHoldIncrement()) {
          setPointHoldIncrement(other.getPointHoldIncrement());
        }
        if (other.hasEnergyScanSpeed()) {
          setEnergyScanSpeed(other.getEnergyScanSpeed());
        }
        if (other.hasStartDeviation()) {
          setStartDeviation(other.getStartDeviation());
        }
        if (other.hasEnergyTrackTime()) {
          setEnergyTrackTime(other.getEnergyTrackTime());
        }
        if (other.hasScanScrypt()) {
          bitField0_ |= 0x00001000;
          scanScrypt_ = other.scanScrypt_;
          onChanged();
        }
        if (other.hasGpsServer()) {
          bitField0_ |= 0x00002000;
          gpsServer_ = other.gpsServer_;
          onChanged();
        }
        if (other.hasGpsUpdate()) {
          bitField0_ |= 0x00004000;
          gpsUpdate_ = other.gpsUpdate_;
          onChanged();
        }
        if (other.hasAzCloseEnough()) {
          setAzCloseEnough(other.getAzCloseEnough());
        }
        if (other.hasElDisabled()) {
          setElDisabled(other.getElDisabled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.RotorProtatorConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "ROTOR_PROTATOR_CONFIG"];
      private java.lang.Object msgName_ = "ROTOR_PROTATOR_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_PROTATOR_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_PROTATOR_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_PROTATOR_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_PROTATOR_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_PROTATOR_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_PROTATOR_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional string IP = 2;
      private java.lang.Object iP_ = "";
      /**
       * <code>optional string IP = 2;</code>
       */
      public boolean hasIP() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public java.lang.String getIP() {
        java.lang.Object ref = iP_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          iP_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public com.google.protobuf.ByteString
          getIPBytes() {
        java.lang.Object ref = iP_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          iP_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public Builder setIP(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public Builder clearIP() {
        bitField0_ = (bitField0_ & ~0x00000002);
        iP_ = getDefaultInstance().getIP();
        onChanged();
        return this;
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public Builder setIPBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iP_ = value;
        onChanged();
        return this;
      }

      // optional int32 port = 3;
      private int port_ ;
      /**
       * <code>optional int32 port = 3;</code>
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 port = 3;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <code>optional int32 port = 3;</code>
       */
      public Builder setPort(int value) {
        bitField0_ |= 0x00000004;
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 port = 3;</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000004);
        port_ = 0;
        onChanged();
        return this;
      }

      // optional float AzOffset = 4;
      private float azOffset_ ;
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public boolean hasAzOffset() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public float getAzOffset() {
        return azOffset_;
      }
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public Builder setAzOffset(float value) {
        bitField0_ |= 0x00000008;
        azOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public Builder clearAzOffset() {
        bitField0_ = (bitField0_ & ~0x00000008);
        azOffset_ = 0F;
        onChanged();
        return this;
      }

      // optional bool hardLimit = 5;
      private boolean hardLimit_ ;
      /**
       * <code>optional bool hardLimit = 5;</code>
       */
      public boolean hasHardLimit() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool hardLimit = 5;</code>
       */
      public boolean getHardLimit() {
        return hardLimit_;
      }
      /**
       * <code>optional bool hardLimit = 5;</code>
       */
      public Builder setHardLimit(boolean value) {
        bitField0_ |= 0x00000010;
        hardLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hardLimit = 5;</code>
       */
      public Builder clearHardLimit() {
        bitField0_ = (bitField0_ & ~0x00000010);
        hardLimit_ = false;
        onChanged();
        return this;
      }

      // optional float minScanAngle = 6;
      private float minScanAngle_ ;
      /**
       * <code>optional float minScanAngle = 6;</code>
       */
      public boolean hasMinScanAngle() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float minScanAngle = 6;</code>
       */
      public float getMinScanAngle() {
        return minScanAngle_;
      }
      /**
       * <code>optional float minScanAngle = 6;</code>
       */
      public Builder setMinScanAngle(float value) {
        bitField0_ |= 0x00000020;
        minScanAngle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float minScanAngle = 6;</code>
       */
      public Builder clearMinScanAngle() {
        bitField0_ = (bitField0_ & ~0x00000020);
        minScanAngle_ = 0F;
        onChanged();
        return this;
      }

      // optional float maxScanAngle = 7;
      private float maxScanAngle_ ;
      /**
       * <code>optional float maxScanAngle = 7;</code>
       */
      public boolean hasMaxScanAngle() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float maxScanAngle = 7;</code>
       */
      public float getMaxScanAngle() {
        return maxScanAngle_;
      }
      /**
       * <code>optional float maxScanAngle = 7;</code>
       */
      public Builder setMaxScanAngle(float value) {
        bitField0_ |= 0x00000040;
        maxScanAngle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxScanAngle = 7;</code>
       */
      public Builder clearMaxScanAngle() {
        bitField0_ = (bitField0_ & ~0x00000040);
        maxScanAngle_ = 0F;
        onChanged();
        return this;
      }

      // optional float multicastRate = 8;
      private float multicastRate_ ;
      /**
       * <code>optional float multicastRate = 8;</code>
       */
      public boolean hasMulticastRate() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float multicastRate = 8;</code>
       */
      public float getMulticastRate() {
        return multicastRate_;
      }
      /**
       * <code>optional float multicastRate = 8;</code>
       */
      public Builder setMulticastRate(float value) {
        bitField0_ |= 0x00000080;
        multicastRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float multicastRate = 8;</code>
       */
      public Builder clearMulticastRate() {
        bitField0_ = (bitField0_ & ~0x00000080);
        multicastRate_ = 0F;
        onChanged();
        return this;
      }

      // optional float pointHoldIncrement = 9;
      private float pointHoldIncrement_ ;
      /**
       * <code>optional float pointHoldIncrement = 9;</code>
       */
      public boolean hasPointHoldIncrement() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float pointHoldIncrement = 9;</code>
       */
      public float getPointHoldIncrement() {
        return pointHoldIncrement_;
      }
      /**
       * <code>optional float pointHoldIncrement = 9;</code>
       */
      public Builder setPointHoldIncrement(float value) {
        bitField0_ |= 0x00000100;
        pointHoldIncrement_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float pointHoldIncrement = 9;</code>
       */
      public Builder clearPointHoldIncrement() {
        bitField0_ = (bitField0_ & ~0x00000100);
        pointHoldIncrement_ = 0F;
        onChanged();
        return this;
      }

      // optional float energyScanSpeed = 10 [default = 20];
      private float energyScanSpeed_ = 20F;
      /**
       * <code>optional float energyScanSpeed = 10 [default = 20];</code>
       */
      public boolean hasEnergyScanSpeed() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float energyScanSpeed = 10 [default = 20];</code>
       */
      public float getEnergyScanSpeed() {
        return energyScanSpeed_;
      }
      /**
       * <code>optional float energyScanSpeed = 10 [default = 20];</code>
       */
      public Builder setEnergyScanSpeed(float value) {
        bitField0_ |= 0x00000200;
        energyScanSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float energyScanSpeed = 10 [default = 20];</code>
       */
      public Builder clearEnergyScanSpeed() {
        bitField0_ = (bitField0_ & ~0x00000200);
        energyScanSpeed_ = 20F;
        onChanged();
        return this;
      }

      // optional float startDeviation = 11 [default = 180];
      private float startDeviation_ = 180F;
      /**
       * <code>optional float startDeviation = 11 [default = 180];</code>
       */
      public boolean hasStartDeviation() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional float startDeviation = 11 [default = 180];</code>
       */
      public float getStartDeviation() {
        return startDeviation_;
      }
      /**
       * <code>optional float startDeviation = 11 [default = 180];</code>
       */
      public Builder setStartDeviation(float value) {
        bitField0_ |= 0x00000400;
        startDeviation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float startDeviation = 11 [default = 180];</code>
       */
      public Builder clearStartDeviation() {
        bitField0_ = (bitField0_ & ~0x00000400);
        startDeviation_ = 180F;
        onChanged();
        return this;
      }

      // optional float energyTrackTime = 12 [default = 500];
      private float energyTrackTime_ = 500F;
      /**
       * <code>optional float energyTrackTime = 12 [default = 500];</code>
       */
      public boolean hasEnergyTrackTime() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float energyTrackTime = 12 [default = 500];</code>
       */
      public float getEnergyTrackTime() {
        return energyTrackTime_;
      }
      /**
       * <code>optional float energyTrackTime = 12 [default = 500];</code>
       */
      public Builder setEnergyTrackTime(float value) {
        bitField0_ |= 0x00000800;
        energyTrackTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float energyTrackTime = 12 [default = 500];</code>
       */
      public Builder clearEnergyTrackTime() {
        bitField0_ = (bitField0_ & ~0x00000800);
        energyTrackTime_ = 500F;
        onChanged();
        return this;
      }

      // optional string scanScrypt = 13 [default = "NONE"];
      private java.lang.Object scanScrypt_ = "NONE";
      /**
       * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
       */
      public boolean hasScanScrypt() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
       */
      public java.lang.String getScanScrypt() {
        java.lang.Object ref = scanScrypt_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          scanScrypt_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
       */
      public com.google.protobuf.ByteString
          getScanScryptBytes() {
        java.lang.Object ref = scanScrypt_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          scanScrypt_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
       */
      public Builder setScanScrypt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        scanScrypt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
       */
      public Builder clearScanScrypt() {
        bitField0_ = (bitField0_ & ~0x00001000);
        scanScrypt_ = getDefaultInstance().getScanScrypt();
        onChanged();
        return this;
      }
      /**
       * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
       */
      public Builder setScanScryptBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        scanScrypt_ = value;
        onChanged();
        return this;
      }

      // optional string gpsServer = 14 [default = "OFF"];
      private java.lang.Object gpsServer_ = "OFF";
      /**
       * <code>optional string gpsServer = 14 [default = "OFF"];</code>
       */
      public boolean hasGpsServer() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string gpsServer = 14 [default = "OFF"];</code>
       */
      public java.lang.String getGpsServer() {
        java.lang.Object ref = gpsServer_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gpsServer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gpsServer = 14 [default = "OFF"];</code>
       */
      public com.google.protobuf.ByteString
          getGpsServerBytes() {
        java.lang.Object ref = gpsServer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gpsServer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gpsServer = 14 [default = "OFF"];</code>
       */
      public Builder setGpsServer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        gpsServer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpsServer = 14 [default = "OFF"];</code>
       */
      public Builder clearGpsServer() {
        bitField0_ = (bitField0_ & ~0x00002000);
        gpsServer_ = getDefaultInstance().getGpsServer();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpsServer = 14 [default = "OFF"];</code>
       */
      public Builder setGpsServerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        gpsServer_ = value;
        onChanged();
        return this;
      }

      // optional string gpsUpdate = 15 [default = "ON"];
      private java.lang.Object gpsUpdate_ = "ON";
      /**
       * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
       */
      public boolean hasGpsUpdate() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
       */
      public java.lang.String getGpsUpdate() {
        java.lang.Object ref = gpsUpdate_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gpsUpdate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
       */
      public com.google.protobuf.ByteString
          getGpsUpdateBytes() {
        java.lang.Object ref = gpsUpdate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gpsUpdate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
       */
      public Builder setGpsUpdate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        gpsUpdate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
       */
      public Builder clearGpsUpdate() {
        bitField0_ = (bitField0_ & ~0x00004000);
        gpsUpdate_ = getDefaultInstance().getGpsUpdate();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
       */
      public Builder setGpsUpdateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        gpsUpdate_ = value;
        onChanged();
        return this;
      }

      // optional float azCloseEnough = 16 [default = 5];
      private float azCloseEnough_ = 5F;
      /**
       * <code>optional float azCloseEnough = 16 [default = 5];</code>
       */
      public boolean hasAzCloseEnough() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional float azCloseEnough = 16 [default = 5];</code>
       */
      public float getAzCloseEnough() {
        return azCloseEnough_;
      }
      /**
       * <code>optional float azCloseEnough = 16 [default = 5];</code>
       */
      public Builder setAzCloseEnough(float value) {
        bitField0_ |= 0x00008000;
        azCloseEnough_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float azCloseEnough = 16 [default = 5];</code>
       */
      public Builder clearAzCloseEnough() {
        bitField0_ = (bitField0_ & ~0x00008000);
        azCloseEnough_ = 5F;
        onChanged();
        return this;
      }

      // optional bool elDisabled = 17 [default = true];
      private boolean elDisabled_ = true;
      /**
       * <code>optional bool elDisabled = 17 [default = true];</code>
       */
      public boolean hasElDisabled() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional bool elDisabled = 17 [default = true];</code>
       */
      public boolean getElDisabled() {
        return elDisabled_;
      }
      /**
       * <code>optional bool elDisabled = 17 [default = true];</code>
       */
      public Builder setElDisabled(boolean value) {
        bitField0_ |= 0x00010000;
        elDisabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool elDisabled = 17 [default = true];</code>
       */
      public Builder clearElDisabled() {
        bitField0_ = (bitField0_ & ~0x00010000);
        elDisabled_ = true;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.RotorProtatorConfig)
    }

    static {
      defaultInstance = new RotorProtatorConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.RotorProtatorConfig)
  }

  public interface RotorProsistelConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "ROTOR_PROSISTEL_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_PROSISTEL_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_PROSISTEL_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_PROSISTEL_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional string IP = 2;
    /**
     * <code>optional string IP = 2;</code>
     */
    boolean hasIP();
    /**
     * <code>optional string IP = 2;</code>
     */
    java.lang.String getIP();
    /**
     * <code>optional string IP = 2;</code>
     */
    com.google.protobuf.ByteString
        getIPBytes();

    // optional int32 port = 3;
    /**
     * <code>optional int32 port = 3;</code>
     */
    boolean hasPort();
    /**
     * <code>optional int32 port = 3;</code>
     */
    int getPort();

    // optional float AzOffset = 4;
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    boolean hasAzOffset();
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    float getAzOffset();

    // optional bool hardLimit = 5;
    /**
     * <code>optional bool hardLimit = 5;</code>
     */
    boolean hasHardLimit();
    /**
     * <code>optional bool hardLimit = 5;</code>
     */
    boolean getHardLimit();

    // optional float minScanAngle = 6;
    /**
     * <code>optional float minScanAngle = 6;</code>
     */
    boolean hasMinScanAngle();
    /**
     * <code>optional float minScanAngle = 6;</code>
     */
    float getMinScanAngle();

    // optional float maxScanAngle = 7;
    /**
     * <code>optional float maxScanAngle = 7;</code>
     */
    boolean hasMaxScanAngle();
    /**
     * <code>optional float maxScanAngle = 7;</code>
     */
    float getMaxScanAngle();

    // optional float multicastRate = 8;
    /**
     * <code>optional float multicastRate = 8;</code>
     */
    boolean hasMulticastRate();
    /**
     * <code>optional float multicastRate = 8;</code>
     */
    float getMulticastRate();

    // optional float pointHoldIncrement = 9;
    /**
     * <code>optional float pointHoldIncrement = 9;</code>
     */
    boolean hasPointHoldIncrement();
    /**
     * <code>optional float pointHoldIncrement = 9;</code>
     */
    float getPointHoldIncrement();

    // optional float energyScanSpeed = 10 [default = 20];
    /**
     * <code>optional float energyScanSpeed = 10 [default = 20];</code>
     */
    boolean hasEnergyScanSpeed();
    /**
     * <code>optional float energyScanSpeed = 10 [default = 20];</code>
     */
    float getEnergyScanSpeed();

    // optional float startDeviation = 11 [default = 180];
    /**
     * <code>optional float startDeviation = 11 [default = 180];</code>
     */
    boolean hasStartDeviation();
    /**
     * <code>optional float startDeviation = 11 [default = 180];</code>
     */
    float getStartDeviation();

    // optional float energyTrackTime = 12 [default = 500];
    /**
     * <code>optional float energyTrackTime = 12 [default = 500];</code>
     */
    boolean hasEnergyTrackTime();
    /**
     * <code>optional float energyTrackTime = 12 [default = 500];</code>
     */
    float getEnergyTrackTime();

    // optional string scanScrypt = 13 [default = "NONE"];
    /**
     * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
     */
    boolean hasScanScrypt();
    /**
     * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
     */
    java.lang.String getScanScrypt();
    /**
     * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
     */
    com.google.protobuf.ByteString
        getScanScryptBytes();

    // optional string gpsServer = 14 [default = "OFF"];
    /**
     * <code>optional string gpsServer = 14 [default = "OFF"];</code>
     */
    boolean hasGpsServer();
    /**
     * <code>optional string gpsServer = 14 [default = "OFF"];</code>
     */
    java.lang.String getGpsServer();
    /**
     * <code>optional string gpsServer = 14 [default = "OFF"];</code>
     */
    com.google.protobuf.ByteString
        getGpsServerBytes();

    // optional string gpsUpdate = 15 [default = "ON"];
    /**
     * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
     */
    boolean hasGpsUpdate();
    /**
     * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
     */
    java.lang.String getGpsUpdate();
    /**
     * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
     */
    com.google.protobuf.ByteString
        getGpsUpdateBytes();

    // optional float azCloseEnough = 16 [default = 5];
    /**
     * <code>optional float azCloseEnough = 16 [default = 5];</code>
     */
    boolean hasAzCloseEnough();
    /**
     * <code>optional float azCloseEnough = 16 [default = 5];</code>
     */
    float getAzCloseEnough();

    // optional bool elDisabled = 17 [default = false];
    /**
     * <code>optional bool elDisabled = 17 [default = false];</code>
     */
    boolean hasElDisabled();
    /**
     * <code>optional bool elDisabled = 17 [default = false];</code>
     */
    boolean getElDisabled();
  }
  /**
   * Protobuf type {@code falcon_res_msg.RotorProsistelConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the rotor resource.  These are populated
   * by ResourceRotor.configureMessage() and from resources.xml.
   *
   * msgName: ROTOR_PROSISTEL_CONFIG, used to identify the message
   * IP: IP address to use for communication to the rotor
   * port: Port number to use for communication to the rotor
   * AzOffset: Offset in azimuth of the rotor
   * hardLimit: Enable or disable limits
   * minScanAngle: Minimum angle to scan (e.g. for FAST scans)
   * maxScanAngle: Maximum angle to scan (e.g. for FAST scans)
   * multicastRate: Rate of multicasting from GlobalConfig hardware
   * pointHoldIncrement: Degrees to step when stepping
   * energyScanSpeed: Velocity in degrees/sec to use when energy scanning
   * scanScrypt: scan scrypt to use for antenna angles
   * gpsServer: Server to get GPS points from
   * gpsUpdate: ???
   * azCloseEnough: value used to tell if the antenna is close enough to the commanded angle
   * </pre>
   */
  public static final class RotorProsistelConfig extends
      com.google.protobuf.GeneratedMessage
      implements RotorProsistelConfigOrBuilder {
    // Use RotorProsistelConfig.newBuilder() to construct.
    private RotorProsistelConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RotorProsistelConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RotorProsistelConfig defaultInstance;
    public static RotorProsistelConfig getDefaultInstance() {
      return defaultInstance;
    }

    public RotorProsistelConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RotorProsistelConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              iP_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              port_ = input.readInt32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              azOffset_ = input.readFloat();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              hardLimit_ = input.readBool();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              minScanAngle_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              maxScanAngle_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              multicastRate_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              pointHoldIncrement_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              energyScanSpeed_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              startDeviation_ = input.readFloat();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              energyTrackTime_ = input.readFloat();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              scanScrypt_ = input.readBytes();
              break;
            }
            case 114: {
              bitField0_ |= 0x00002000;
              gpsServer_ = input.readBytes();
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              gpsUpdate_ = input.readBytes();
              break;
            }
            case 133: {
              bitField0_ |= 0x00008000;
              azCloseEnough_ = input.readFloat();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              elDisabled_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorProsistelConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorProsistelConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig.class, fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<RotorProsistelConfig> PARSER =
        new com.google.protobuf.AbstractParser<RotorProsistelConfig>() {
      public RotorProsistelConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RotorProsistelConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RotorProsistelConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "ROTOR_PROSISTEL_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_PROSISTEL_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_PROSISTEL_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_PROSISTEL_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string IP = 2;
    public static final int IP_FIELD_NUMBER = 2;
    private java.lang.Object iP_;
    /**
     * <code>optional string IP = 2;</code>
     */
    public boolean hasIP() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string IP = 2;</code>
     */
    public java.lang.String getIP() {
      java.lang.Object ref = iP_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          iP_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string IP = 2;</code>
     */
    public com.google.protobuf.ByteString
        getIPBytes() {
      java.lang.Object ref = iP_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        iP_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 port = 3;
    public static final int PORT_FIELD_NUMBER = 3;
    private int port_;
    /**
     * <code>optional int32 port = 3;</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 port = 3;</code>
     */
    public int getPort() {
      return port_;
    }

    // optional float AzOffset = 4;
    public static final int AZOFFSET_FIELD_NUMBER = 4;
    private float azOffset_;
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    public boolean hasAzOffset() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    public float getAzOffset() {
      return azOffset_;
    }

    // optional bool hardLimit = 5;
    public static final int HARDLIMIT_FIELD_NUMBER = 5;
    private boolean hardLimit_;
    /**
     * <code>optional bool hardLimit = 5;</code>
     */
    public boolean hasHardLimit() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool hardLimit = 5;</code>
     */
    public boolean getHardLimit() {
      return hardLimit_;
    }

    // optional float minScanAngle = 6;
    public static final int MINSCANANGLE_FIELD_NUMBER = 6;
    private float minScanAngle_;
    /**
     * <code>optional float minScanAngle = 6;</code>
     */
    public boolean hasMinScanAngle() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float minScanAngle = 6;</code>
     */
    public float getMinScanAngle() {
      return minScanAngle_;
    }

    // optional float maxScanAngle = 7;
    public static final int MAXSCANANGLE_FIELD_NUMBER = 7;
    private float maxScanAngle_;
    /**
     * <code>optional float maxScanAngle = 7;</code>
     */
    public boolean hasMaxScanAngle() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float maxScanAngle = 7;</code>
     */
    public float getMaxScanAngle() {
      return maxScanAngle_;
    }

    // optional float multicastRate = 8;
    public static final int MULTICASTRATE_FIELD_NUMBER = 8;
    private float multicastRate_;
    /**
     * <code>optional float multicastRate = 8;</code>
     */
    public boolean hasMulticastRate() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float multicastRate = 8;</code>
     */
    public float getMulticastRate() {
      return multicastRate_;
    }

    // optional float pointHoldIncrement = 9;
    public static final int POINTHOLDINCREMENT_FIELD_NUMBER = 9;
    private float pointHoldIncrement_;
    /**
     * <code>optional float pointHoldIncrement = 9;</code>
     */
    public boolean hasPointHoldIncrement() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float pointHoldIncrement = 9;</code>
     */
    public float getPointHoldIncrement() {
      return pointHoldIncrement_;
    }

    // optional float energyScanSpeed = 10 [default = 20];
    public static final int ENERGYSCANSPEED_FIELD_NUMBER = 10;
    private float energyScanSpeed_;
    /**
     * <code>optional float energyScanSpeed = 10 [default = 20];</code>
     */
    public boolean hasEnergyScanSpeed() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float energyScanSpeed = 10 [default = 20];</code>
     */
    public float getEnergyScanSpeed() {
      return energyScanSpeed_;
    }

    // optional float startDeviation = 11 [default = 180];
    public static final int STARTDEVIATION_FIELD_NUMBER = 11;
    private float startDeviation_;
    /**
     * <code>optional float startDeviation = 11 [default = 180];</code>
     */
    public boolean hasStartDeviation() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional float startDeviation = 11 [default = 180];</code>
     */
    public float getStartDeviation() {
      return startDeviation_;
    }

    // optional float energyTrackTime = 12 [default = 500];
    public static final int ENERGYTRACKTIME_FIELD_NUMBER = 12;
    private float energyTrackTime_;
    /**
     * <code>optional float energyTrackTime = 12 [default = 500];</code>
     */
    public boolean hasEnergyTrackTime() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional float energyTrackTime = 12 [default = 500];</code>
     */
    public float getEnergyTrackTime() {
      return energyTrackTime_;
    }

    // optional string scanScrypt = 13 [default = "NONE"];
    public static final int SCANSCRYPT_FIELD_NUMBER = 13;
    private java.lang.Object scanScrypt_;
    /**
     * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
     */
    public boolean hasScanScrypt() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
     */
    public java.lang.String getScanScrypt() {
      java.lang.Object ref = scanScrypt_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          scanScrypt_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
     */
    public com.google.protobuf.ByteString
        getScanScryptBytes() {
      java.lang.Object ref = scanScrypt_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        scanScrypt_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string gpsServer = 14 [default = "OFF"];
    public static final int GPSSERVER_FIELD_NUMBER = 14;
    private java.lang.Object gpsServer_;
    /**
     * <code>optional string gpsServer = 14 [default = "OFF"];</code>
     */
    public boolean hasGpsServer() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional string gpsServer = 14 [default = "OFF"];</code>
     */
    public java.lang.String getGpsServer() {
      java.lang.Object ref = gpsServer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gpsServer_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gpsServer = 14 [default = "OFF"];</code>
     */
    public com.google.protobuf.ByteString
        getGpsServerBytes() {
      java.lang.Object ref = gpsServer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gpsServer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string gpsUpdate = 15 [default = "ON"];
    public static final int GPSUPDATE_FIELD_NUMBER = 15;
    private java.lang.Object gpsUpdate_;
    /**
     * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
     */
    public boolean hasGpsUpdate() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
     */
    public java.lang.String getGpsUpdate() {
      java.lang.Object ref = gpsUpdate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gpsUpdate_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
     */
    public com.google.protobuf.ByteString
        getGpsUpdateBytes() {
      java.lang.Object ref = gpsUpdate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gpsUpdate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional float azCloseEnough = 16 [default = 5];
    public static final int AZCLOSEENOUGH_FIELD_NUMBER = 16;
    private float azCloseEnough_;
    /**
     * <code>optional float azCloseEnough = 16 [default = 5];</code>
     */
    public boolean hasAzCloseEnough() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional float azCloseEnough = 16 [default = 5];</code>
     */
    public float getAzCloseEnough() {
      return azCloseEnough_;
    }

    // optional bool elDisabled = 17 [default = false];
    public static final int ELDISABLED_FIELD_NUMBER = 17;
    private boolean elDisabled_;
    /**
     * <code>optional bool elDisabled = 17 [default = false];</code>
     */
    public boolean hasElDisabled() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional bool elDisabled = 17 [default = false];</code>
     */
    public boolean getElDisabled() {
      return elDisabled_;
    }

    private void initFields() {
      msgName_ = "ROTOR_PROSISTEL_CONFIG";
      iP_ = "";
      port_ = 0;
      azOffset_ = 0F;
      hardLimit_ = false;
      minScanAngle_ = 0F;
      maxScanAngle_ = 0F;
      multicastRate_ = 0F;
      pointHoldIncrement_ = 0F;
      energyScanSpeed_ = 20F;
      startDeviation_ = 180F;
      energyTrackTime_ = 500F;
      scanScrypt_ = "NONE";
      gpsServer_ = "OFF";
      gpsUpdate_ = "ON";
      azCloseEnough_ = 5F;
      elDisabled_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIPBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, port_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, azOffset_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, hardLimit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, minScanAngle_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, maxScanAngle_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, multicastRate_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, pointHoldIncrement_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, energyScanSpeed_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, startDeviation_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(12, energyTrackTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, getScanScryptBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getGpsServerBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, getGpsUpdateBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeFloat(16, azCloseEnough_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBool(17, elDisabled_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIPBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, port_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, azOffset_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, hardLimit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, minScanAngle_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, maxScanAngle_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, multicastRate_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, pointHoldIncrement_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, energyScanSpeed_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, startDeviation_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, energyTrackTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getScanScryptBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getGpsServerBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getGpsUpdateBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(16, azCloseEnough_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(17, elDisabled_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.RotorProsistelConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the rotor resource.  These are populated
     * by ResourceRotor.configureMessage() and from resources.xml.
     *
     * msgName: ROTOR_PROSISTEL_CONFIG, used to identify the message
     * IP: IP address to use for communication to the rotor
     * port: Port number to use for communication to the rotor
     * AzOffset: Offset in azimuth of the rotor
     * hardLimit: Enable or disable limits
     * minScanAngle: Minimum angle to scan (e.g. for FAST scans)
     * maxScanAngle: Maximum angle to scan (e.g. for FAST scans)
     * multicastRate: Rate of multicasting from GlobalConfig hardware
     * pointHoldIncrement: Degrees to step when stepping
     * energyScanSpeed: Velocity in degrees/sec to use when energy scanning
     * scanScrypt: scan scrypt to use for antenna angles
     * gpsServer: Server to get GPS points from
     * gpsUpdate: ???
     * azCloseEnough: value used to tell if the antenna is close enough to the commanded angle
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorProsistelConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorProsistelConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig.class, fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "ROTOR_PROSISTEL_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        iP_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        azOffset_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        hardLimit_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        minScanAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        maxScanAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        multicastRate_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        pointHoldIncrement_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        energyScanSpeed_ = 20F;
        bitField0_ = (bitField0_ & ~0x00000200);
        startDeviation_ = 180F;
        bitField0_ = (bitField0_ & ~0x00000400);
        energyTrackTime_ = 500F;
        bitField0_ = (bitField0_ & ~0x00000800);
        scanScrypt_ = "NONE";
        bitField0_ = (bitField0_ & ~0x00001000);
        gpsServer_ = "OFF";
        bitField0_ = (bitField0_ & ~0x00002000);
        gpsUpdate_ = "ON";
        bitField0_ = (bitField0_ & ~0x00004000);
        azCloseEnough_ = 5F;
        bitField0_ = (bitField0_ & ~0x00008000);
        elDisabled_ = false;
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorProsistelConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig result = new fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.iP_ = iP_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.azOffset_ = azOffset_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.hardLimit_ = hardLimit_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.minScanAngle_ = minScanAngle_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.maxScanAngle_ = maxScanAngle_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.multicastRate_ = multicastRate_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.pointHoldIncrement_ = pointHoldIncrement_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.energyScanSpeed_ = energyScanSpeed_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.startDeviation_ = startDeviation_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.energyTrackTime_ = energyTrackTime_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.scanScrypt_ = scanScrypt_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.gpsServer_ = gpsServer_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.gpsUpdate_ = gpsUpdate_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.azCloseEnough_ = azCloseEnough_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.elDisabled_ = elDisabled_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasIP()) {
          bitField0_ |= 0x00000002;
          iP_ = other.iP_;
          onChanged();
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasAzOffset()) {
          setAzOffset(other.getAzOffset());
        }
        if (other.hasHardLimit()) {
          setHardLimit(other.getHardLimit());
        }
        if (other.hasMinScanAngle()) {
          setMinScanAngle(other.getMinScanAngle());
        }
        if (other.hasMaxScanAngle()) {
          setMaxScanAngle(other.getMaxScanAngle());
        }
        if (other.hasMulticastRate()) {
          setMulticastRate(other.getMulticastRate());
        }
        if (other.hasPointHoldIncrement()) {
          setPointHoldIncrement(other.getPointHoldIncrement());
        }
        if (other.hasEnergyScanSpeed()) {
          setEnergyScanSpeed(other.getEnergyScanSpeed());
        }
        if (other.hasStartDeviation()) {
          setStartDeviation(other.getStartDeviation());
        }
        if (other.hasEnergyTrackTime()) {
          setEnergyTrackTime(other.getEnergyTrackTime());
        }
        if (other.hasScanScrypt()) {
          bitField0_ |= 0x00001000;
          scanScrypt_ = other.scanScrypt_;
          onChanged();
        }
        if (other.hasGpsServer()) {
          bitField0_ |= 0x00002000;
          gpsServer_ = other.gpsServer_;
          onChanged();
        }
        if (other.hasGpsUpdate()) {
          bitField0_ |= 0x00004000;
          gpsUpdate_ = other.gpsUpdate_;
          onChanged();
        }
        if (other.hasAzCloseEnough()) {
          setAzCloseEnough(other.getAzCloseEnough());
        }
        if (other.hasElDisabled()) {
          setElDisabled(other.getElDisabled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.RotorProsistelConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "ROTOR_PROSISTEL_CONFIG"];
      private java.lang.Object msgName_ = "ROTOR_PROSISTEL_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_PROSISTEL_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_PROSISTEL_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_PROSISTEL_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_PROSISTEL_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_PROSISTEL_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_PROSISTEL_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional string IP = 2;
      private java.lang.Object iP_ = "";
      /**
       * <code>optional string IP = 2;</code>
       */
      public boolean hasIP() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public java.lang.String getIP() {
        java.lang.Object ref = iP_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          iP_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public com.google.protobuf.ByteString
          getIPBytes() {
        java.lang.Object ref = iP_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          iP_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public Builder setIP(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public Builder clearIP() {
        bitField0_ = (bitField0_ & ~0x00000002);
        iP_ = getDefaultInstance().getIP();
        onChanged();
        return this;
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public Builder setIPBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iP_ = value;
        onChanged();
        return this;
      }

      // optional int32 port = 3;
      private int port_ ;
      /**
       * <code>optional int32 port = 3;</code>
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 port = 3;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <code>optional int32 port = 3;</code>
       */
      public Builder setPort(int value) {
        bitField0_ |= 0x00000004;
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 port = 3;</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000004);
        port_ = 0;
        onChanged();
        return this;
      }

      // optional float AzOffset = 4;
      private float azOffset_ ;
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public boolean hasAzOffset() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public float getAzOffset() {
        return azOffset_;
      }
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public Builder setAzOffset(float value) {
        bitField0_ |= 0x00000008;
        azOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public Builder clearAzOffset() {
        bitField0_ = (bitField0_ & ~0x00000008);
        azOffset_ = 0F;
        onChanged();
        return this;
      }

      // optional bool hardLimit = 5;
      private boolean hardLimit_ ;
      /**
       * <code>optional bool hardLimit = 5;</code>
       */
      public boolean hasHardLimit() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool hardLimit = 5;</code>
       */
      public boolean getHardLimit() {
        return hardLimit_;
      }
      /**
       * <code>optional bool hardLimit = 5;</code>
       */
      public Builder setHardLimit(boolean value) {
        bitField0_ |= 0x00000010;
        hardLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hardLimit = 5;</code>
       */
      public Builder clearHardLimit() {
        bitField0_ = (bitField0_ & ~0x00000010);
        hardLimit_ = false;
        onChanged();
        return this;
      }

      // optional float minScanAngle = 6;
      private float minScanAngle_ ;
      /**
       * <code>optional float minScanAngle = 6;</code>
       */
      public boolean hasMinScanAngle() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float minScanAngle = 6;</code>
       */
      public float getMinScanAngle() {
        return minScanAngle_;
      }
      /**
       * <code>optional float minScanAngle = 6;</code>
       */
      public Builder setMinScanAngle(float value) {
        bitField0_ |= 0x00000020;
        minScanAngle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float minScanAngle = 6;</code>
       */
      public Builder clearMinScanAngle() {
        bitField0_ = (bitField0_ & ~0x00000020);
        minScanAngle_ = 0F;
        onChanged();
        return this;
      }

      // optional float maxScanAngle = 7;
      private float maxScanAngle_ ;
      /**
       * <code>optional float maxScanAngle = 7;</code>
       */
      public boolean hasMaxScanAngle() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float maxScanAngle = 7;</code>
       */
      public float getMaxScanAngle() {
        return maxScanAngle_;
      }
      /**
       * <code>optional float maxScanAngle = 7;</code>
       */
      public Builder setMaxScanAngle(float value) {
        bitField0_ |= 0x00000040;
        maxScanAngle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxScanAngle = 7;</code>
       */
      public Builder clearMaxScanAngle() {
        bitField0_ = (bitField0_ & ~0x00000040);
        maxScanAngle_ = 0F;
        onChanged();
        return this;
      }

      // optional float multicastRate = 8;
      private float multicastRate_ ;
      /**
       * <code>optional float multicastRate = 8;</code>
       */
      public boolean hasMulticastRate() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float multicastRate = 8;</code>
       */
      public float getMulticastRate() {
        return multicastRate_;
      }
      /**
       * <code>optional float multicastRate = 8;</code>
       */
      public Builder setMulticastRate(float value) {
        bitField0_ |= 0x00000080;
        multicastRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float multicastRate = 8;</code>
       */
      public Builder clearMulticastRate() {
        bitField0_ = (bitField0_ & ~0x00000080);
        multicastRate_ = 0F;
        onChanged();
        return this;
      }

      // optional float pointHoldIncrement = 9;
      private float pointHoldIncrement_ ;
      /**
       * <code>optional float pointHoldIncrement = 9;</code>
       */
      public boolean hasPointHoldIncrement() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float pointHoldIncrement = 9;</code>
       */
      public float getPointHoldIncrement() {
        return pointHoldIncrement_;
      }
      /**
       * <code>optional float pointHoldIncrement = 9;</code>
       */
      public Builder setPointHoldIncrement(float value) {
        bitField0_ |= 0x00000100;
        pointHoldIncrement_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float pointHoldIncrement = 9;</code>
       */
      public Builder clearPointHoldIncrement() {
        bitField0_ = (bitField0_ & ~0x00000100);
        pointHoldIncrement_ = 0F;
        onChanged();
        return this;
      }

      // optional float energyScanSpeed = 10 [default = 20];
      private float energyScanSpeed_ = 20F;
      /**
       * <code>optional float energyScanSpeed = 10 [default = 20];</code>
       */
      public boolean hasEnergyScanSpeed() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float energyScanSpeed = 10 [default = 20];</code>
       */
      public float getEnergyScanSpeed() {
        return energyScanSpeed_;
      }
      /**
       * <code>optional float energyScanSpeed = 10 [default = 20];</code>
       */
      public Builder setEnergyScanSpeed(float value) {
        bitField0_ |= 0x00000200;
        energyScanSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float energyScanSpeed = 10 [default = 20];</code>
       */
      public Builder clearEnergyScanSpeed() {
        bitField0_ = (bitField0_ & ~0x00000200);
        energyScanSpeed_ = 20F;
        onChanged();
        return this;
      }

      // optional float startDeviation = 11 [default = 180];
      private float startDeviation_ = 180F;
      /**
       * <code>optional float startDeviation = 11 [default = 180];</code>
       */
      public boolean hasStartDeviation() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional float startDeviation = 11 [default = 180];</code>
       */
      public float getStartDeviation() {
        return startDeviation_;
      }
      /**
       * <code>optional float startDeviation = 11 [default = 180];</code>
       */
      public Builder setStartDeviation(float value) {
        bitField0_ |= 0x00000400;
        startDeviation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float startDeviation = 11 [default = 180];</code>
       */
      public Builder clearStartDeviation() {
        bitField0_ = (bitField0_ & ~0x00000400);
        startDeviation_ = 180F;
        onChanged();
        return this;
      }

      // optional float energyTrackTime = 12 [default = 500];
      private float energyTrackTime_ = 500F;
      /**
       * <code>optional float energyTrackTime = 12 [default = 500];</code>
       */
      public boolean hasEnergyTrackTime() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float energyTrackTime = 12 [default = 500];</code>
       */
      public float getEnergyTrackTime() {
        return energyTrackTime_;
      }
      /**
       * <code>optional float energyTrackTime = 12 [default = 500];</code>
       */
      public Builder setEnergyTrackTime(float value) {
        bitField0_ |= 0x00000800;
        energyTrackTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float energyTrackTime = 12 [default = 500];</code>
       */
      public Builder clearEnergyTrackTime() {
        bitField0_ = (bitField0_ & ~0x00000800);
        energyTrackTime_ = 500F;
        onChanged();
        return this;
      }

      // optional string scanScrypt = 13 [default = "NONE"];
      private java.lang.Object scanScrypt_ = "NONE";
      /**
       * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
       */
      public boolean hasScanScrypt() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
       */
      public java.lang.String getScanScrypt() {
        java.lang.Object ref = scanScrypt_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          scanScrypt_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
       */
      public com.google.protobuf.ByteString
          getScanScryptBytes() {
        java.lang.Object ref = scanScrypt_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          scanScrypt_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
       */
      public Builder setScanScrypt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        scanScrypt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
       */
      public Builder clearScanScrypt() {
        bitField0_ = (bitField0_ & ~0x00001000);
        scanScrypt_ = getDefaultInstance().getScanScrypt();
        onChanged();
        return this;
      }
      /**
       * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
       */
      public Builder setScanScryptBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        scanScrypt_ = value;
        onChanged();
        return this;
      }

      // optional string gpsServer = 14 [default = "OFF"];
      private java.lang.Object gpsServer_ = "OFF";
      /**
       * <code>optional string gpsServer = 14 [default = "OFF"];</code>
       */
      public boolean hasGpsServer() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string gpsServer = 14 [default = "OFF"];</code>
       */
      public java.lang.String getGpsServer() {
        java.lang.Object ref = gpsServer_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gpsServer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gpsServer = 14 [default = "OFF"];</code>
       */
      public com.google.protobuf.ByteString
          getGpsServerBytes() {
        java.lang.Object ref = gpsServer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gpsServer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gpsServer = 14 [default = "OFF"];</code>
       */
      public Builder setGpsServer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        gpsServer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpsServer = 14 [default = "OFF"];</code>
       */
      public Builder clearGpsServer() {
        bitField0_ = (bitField0_ & ~0x00002000);
        gpsServer_ = getDefaultInstance().getGpsServer();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpsServer = 14 [default = "OFF"];</code>
       */
      public Builder setGpsServerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        gpsServer_ = value;
        onChanged();
        return this;
      }

      // optional string gpsUpdate = 15 [default = "ON"];
      private java.lang.Object gpsUpdate_ = "ON";
      /**
       * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
       */
      public boolean hasGpsUpdate() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
       */
      public java.lang.String getGpsUpdate() {
        java.lang.Object ref = gpsUpdate_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gpsUpdate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
       */
      public com.google.protobuf.ByteString
          getGpsUpdateBytes() {
        java.lang.Object ref = gpsUpdate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gpsUpdate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
       */
      public Builder setGpsUpdate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        gpsUpdate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
       */
      public Builder clearGpsUpdate() {
        bitField0_ = (bitField0_ & ~0x00004000);
        gpsUpdate_ = getDefaultInstance().getGpsUpdate();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
       */
      public Builder setGpsUpdateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        gpsUpdate_ = value;
        onChanged();
        return this;
      }

      // optional float azCloseEnough = 16 [default = 5];
      private float azCloseEnough_ = 5F;
      /**
       * <code>optional float azCloseEnough = 16 [default = 5];</code>
       */
      public boolean hasAzCloseEnough() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional float azCloseEnough = 16 [default = 5];</code>
       */
      public float getAzCloseEnough() {
        return azCloseEnough_;
      }
      /**
       * <code>optional float azCloseEnough = 16 [default = 5];</code>
       */
      public Builder setAzCloseEnough(float value) {
        bitField0_ |= 0x00008000;
        azCloseEnough_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float azCloseEnough = 16 [default = 5];</code>
       */
      public Builder clearAzCloseEnough() {
        bitField0_ = (bitField0_ & ~0x00008000);
        azCloseEnough_ = 5F;
        onChanged();
        return this;
      }

      // optional bool elDisabled = 17 [default = false];
      private boolean elDisabled_ ;
      /**
       * <code>optional bool elDisabled = 17 [default = false];</code>
       */
      public boolean hasElDisabled() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional bool elDisabled = 17 [default = false];</code>
       */
      public boolean getElDisabled() {
        return elDisabled_;
      }
      /**
       * <code>optional bool elDisabled = 17 [default = false];</code>
       */
      public Builder setElDisabled(boolean value) {
        bitField0_ |= 0x00010000;
        elDisabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool elDisabled = 17 [default = false];</code>
       */
      public Builder clearElDisabled() {
        bitField0_ = (bitField0_ & ~0x00010000);
        elDisabled_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.RotorProsistelConfig)
    }

    static {
      defaultInstance = new RotorProsistelConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.RotorProsistelConfig)
  }

  public interface RotorEzrotorConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "EZROTOR_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "EZROTOR_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "EZROTOR_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "EZROTOR_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional string IP = 2;
    /**
     * <code>optional string IP = 2;</code>
     */
    boolean hasIP();
    /**
     * <code>optional string IP = 2;</code>
     */
    java.lang.String getIP();
    /**
     * <code>optional string IP = 2;</code>
     */
    com.google.protobuf.ByteString
        getIPBytes();

    // optional int32 port = 3;
    /**
     * <code>optional int32 port = 3;</code>
     */
    boolean hasPort();
    /**
     * <code>optional int32 port = 3;</code>
     */
    int getPort();

    // optional float AzOffset = 4;
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    boolean hasAzOffset();
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    float getAzOffset();

    // optional bool hardLimit = 5;
    /**
     * <code>optional bool hardLimit = 5;</code>
     */
    boolean hasHardLimit();
    /**
     * <code>optional bool hardLimit = 5;</code>
     */
    boolean getHardLimit();

    // optional float minScanAngle = 6;
    /**
     * <code>optional float minScanAngle = 6;</code>
     */
    boolean hasMinScanAngle();
    /**
     * <code>optional float minScanAngle = 6;</code>
     */
    float getMinScanAngle();

    // optional float maxScanAngle = 7;
    /**
     * <code>optional float maxScanAngle = 7;</code>
     */
    boolean hasMaxScanAngle();
    /**
     * <code>optional float maxScanAngle = 7;</code>
     */
    float getMaxScanAngle();

    // optional float multicastRate = 8;
    /**
     * <code>optional float multicastRate = 8;</code>
     */
    boolean hasMulticastRate();
    /**
     * <code>optional float multicastRate = 8;</code>
     */
    float getMulticastRate();

    // optional float pointHoldIncrement = 9;
    /**
     * <code>optional float pointHoldIncrement = 9;</code>
     */
    boolean hasPointHoldIncrement();
    /**
     * <code>optional float pointHoldIncrement = 9;</code>
     */
    float getPointHoldIncrement();

    // optional float energyScanSpeed = 10 [default = 20];
    /**
     * <code>optional float energyScanSpeed = 10 [default = 20];</code>
     */
    boolean hasEnergyScanSpeed();
    /**
     * <code>optional float energyScanSpeed = 10 [default = 20];</code>
     */
    float getEnergyScanSpeed();

    // optional float startDeviation = 11 [default = 180];
    /**
     * <code>optional float startDeviation = 11 [default = 180];</code>
     */
    boolean hasStartDeviation();
    /**
     * <code>optional float startDeviation = 11 [default = 180];</code>
     */
    float getStartDeviation();

    // optional float energyTrackTime = 12 [default = 500];
    /**
     * <code>optional float energyTrackTime = 12 [default = 500];</code>
     */
    boolean hasEnergyTrackTime();
    /**
     * <code>optional float energyTrackTime = 12 [default = 500];</code>
     */
    float getEnergyTrackTime();

    // optional string scanScrypt = 13 [default = "NONE"];
    /**
     * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
     */
    boolean hasScanScrypt();
    /**
     * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
     */
    java.lang.String getScanScrypt();
    /**
     * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
     */
    com.google.protobuf.ByteString
        getScanScryptBytes();

    // optional string gpsServer = 14 [default = "OFF"];
    /**
     * <code>optional string gpsServer = 14 [default = "OFF"];</code>
     */
    boolean hasGpsServer();
    /**
     * <code>optional string gpsServer = 14 [default = "OFF"];</code>
     */
    java.lang.String getGpsServer();
    /**
     * <code>optional string gpsServer = 14 [default = "OFF"];</code>
     */
    com.google.protobuf.ByteString
        getGpsServerBytes();

    // optional string gpsUpdate = 15 [default = "ON"];
    /**
     * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
     */
    boolean hasGpsUpdate();
    /**
     * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
     */
    java.lang.String getGpsUpdate();
    /**
     * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
     */
    com.google.protobuf.ByteString
        getGpsUpdateBytes();

    // optional float azCloseEnough = 16 [default = 5];
    /**
     * <code>optional float azCloseEnough = 16 [default = 5];</code>
     */
    boolean hasAzCloseEnough();
    /**
     * <code>optional float azCloseEnough = 16 [default = 5];</code>
     */
    float getAzCloseEnough();

    // optional bool elDisabled = 17 [default = false];
    /**
     * <code>optional bool elDisabled = 17 [default = false];</code>
     */
    boolean hasElDisabled();
    /**
     * <code>optional bool elDisabled = 17 [default = false];</code>
     */
    boolean getElDisabled();
  }
  /**
   * Protobuf type {@code falcon_res_msg.RotorEzrotorConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the rotor resource.  These are populated
   * by ResourceRotor.configureMessage() and from resources.xml.
   *
   * msgName: ROTOR_EZROTOR_CONFIG, used to identify the message
   * IP: IP address to use for communication to the rotor
   * port: Port number to use for communication to the rotor
   * AzOffset: Offset in azimuth of the rotor
   * hardLimit: Enable or disable limits
   * minScanAngle: Minimum angle to scan (e.g. for FAST scans)
   * maxScanAngle: Maximum angle to scan (e.g. for FAST scans)
   * multicastRate: Rate of multicasting from GlobalConfig hardware
   * pointHoldIncrement: Degrees to step when stepping
   * energyScanSpeed: Velocity in degrees/sec to use when energy scanning
   * scanScrypt: scan scrypt to use for antenna angles
   * gpsServer: Server to get GPS points from
   * gpsUpdate: ???
   * azCloseEnough: value used to tell if the antenna is close enough to the commanded angle
   * </pre>
   */
  public static final class RotorEzrotorConfig extends
      com.google.protobuf.GeneratedMessage
      implements RotorEzrotorConfigOrBuilder {
    // Use RotorEzrotorConfig.newBuilder() to construct.
    private RotorEzrotorConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RotorEzrotorConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RotorEzrotorConfig defaultInstance;
    public static RotorEzrotorConfig getDefaultInstance() {
      return defaultInstance;
    }

    public RotorEzrotorConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RotorEzrotorConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              iP_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              port_ = input.readInt32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              azOffset_ = input.readFloat();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              hardLimit_ = input.readBool();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              minScanAngle_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              maxScanAngle_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              multicastRate_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              pointHoldIncrement_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              energyScanSpeed_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              startDeviation_ = input.readFloat();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              energyTrackTime_ = input.readFloat();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              scanScrypt_ = input.readBytes();
              break;
            }
            case 114: {
              bitField0_ |= 0x00002000;
              gpsServer_ = input.readBytes();
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              gpsUpdate_ = input.readBytes();
              break;
            }
            case 133: {
              bitField0_ |= 0x00008000;
              azCloseEnough_ = input.readFloat();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              elDisabled_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorEzrotorConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorEzrotorConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig.class, fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<RotorEzrotorConfig> PARSER =
        new com.google.protobuf.AbstractParser<RotorEzrotorConfig>() {
      public RotorEzrotorConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RotorEzrotorConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RotorEzrotorConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "EZROTOR_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "EZROTOR_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "EZROTOR_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "EZROTOR_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string IP = 2;
    public static final int IP_FIELD_NUMBER = 2;
    private java.lang.Object iP_;
    /**
     * <code>optional string IP = 2;</code>
     */
    public boolean hasIP() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string IP = 2;</code>
     */
    public java.lang.String getIP() {
      java.lang.Object ref = iP_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          iP_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string IP = 2;</code>
     */
    public com.google.protobuf.ByteString
        getIPBytes() {
      java.lang.Object ref = iP_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        iP_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 port = 3;
    public static final int PORT_FIELD_NUMBER = 3;
    private int port_;
    /**
     * <code>optional int32 port = 3;</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 port = 3;</code>
     */
    public int getPort() {
      return port_;
    }

    // optional float AzOffset = 4;
    public static final int AZOFFSET_FIELD_NUMBER = 4;
    private float azOffset_;
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    public boolean hasAzOffset() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    public float getAzOffset() {
      return azOffset_;
    }

    // optional bool hardLimit = 5;
    public static final int HARDLIMIT_FIELD_NUMBER = 5;
    private boolean hardLimit_;
    /**
     * <code>optional bool hardLimit = 5;</code>
     */
    public boolean hasHardLimit() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool hardLimit = 5;</code>
     */
    public boolean getHardLimit() {
      return hardLimit_;
    }

    // optional float minScanAngle = 6;
    public static final int MINSCANANGLE_FIELD_NUMBER = 6;
    private float minScanAngle_;
    /**
     * <code>optional float minScanAngle = 6;</code>
     */
    public boolean hasMinScanAngle() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float minScanAngle = 6;</code>
     */
    public float getMinScanAngle() {
      return minScanAngle_;
    }

    // optional float maxScanAngle = 7;
    public static final int MAXSCANANGLE_FIELD_NUMBER = 7;
    private float maxScanAngle_;
    /**
     * <code>optional float maxScanAngle = 7;</code>
     */
    public boolean hasMaxScanAngle() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float maxScanAngle = 7;</code>
     */
    public float getMaxScanAngle() {
      return maxScanAngle_;
    }

    // optional float multicastRate = 8;
    public static final int MULTICASTRATE_FIELD_NUMBER = 8;
    private float multicastRate_;
    /**
     * <code>optional float multicastRate = 8;</code>
     */
    public boolean hasMulticastRate() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float multicastRate = 8;</code>
     */
    public float getMulticastRate() {
      return multicastRate_;
    }

    // optional float pointHoldIncrement = 9;
    public static final int POINTHOLDINCREMENT_FIELD_NUMBER = 9;
    private float pointHoldIncrement_;
    /**
     * <code>optional float pointHoldIncrement = 9;</code>
     */
    public boolean hasPointHoldIncrement() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float pointHoldIncrement = 9;</code>
     */
    public float getPointHoldIncrement() {
      return pointHoldIncrement_;
    }

    // optional float energyScanSpeed = 10 [default = 20];
    public static final int ENERGYSCANSPEED_FIELD_NUMBER = 10;
    private float energyScanSpeed_;
    /**
     * <code>optional float energyScanSpeed = 10 [default = 20];</code>
     */
    public boolean hasEnergyScanSpeed() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float energyScanSpeed = 10 [default = 20];</code>
     */
    public float getEnergyScanSpeed() {
      return energyScanSpeed_;
    }

    // optional float startDeviation = 11 [default = 180];
    public static final int STARTDEVIATION_FIELD_NUMBER = 11;
    private float startDeviation_;
    /**
     * <code>optional float startDeviation = 11 [default = 180];</code>
     */
    public boolean hasStartDeviation() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional float startDeviation = 11 [default = 180];</code>
     */
    public float getStartDeviation() {
      return startDeviation_;
    }

    // optional float energyTrackTime = 12 [default = 500];
    public static final int ENERGYTRACKTIME_FIELD_NUMBER = 12;
    private float energyTrackTime_;
    /**
     * <code>optional float energyTrackTime = 12 [default = 500];</code>
     */
    public boolean hasEnergyTrackTime() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional float energyTrackTime = 12 [default = 500];</code>
     */
    public float getEnergyTrackTime() {
      return energyTrackTime_;
    }

    // optional string scanScrypt = 13 [default = "NONE"];
    public static final int SCANSCRYPT_FIELD_NUMBER = 13;
    private java.lang.Object scanScrypt_;
    /**
     * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
     */
    public boolean hasScanScrypt() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
     */
    public java.lang.String getScanScrypt() {
      java.lang.Object ref = scanScrypt_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          scanScrypt_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
     */
    public com.google.protobuf.ByteString
        getScanScryptBytes() {
      java.lang.Object ref = scanScrypt_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        scanScrypt_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string gpsServer = 14 [default = "OFF"];
    public static final int GPSSERVER_FIELD_NUMBER = 14;
    private java.lang.Object gpsServer_;
    /**
     * <code>optional string gpsServer = 14 [default = "OFF"];</code>
     */
    public boolean hasGpsServer() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional string gpsServer = 14 [default = "OFF"];</code>
     */
    public java.lang.String getGpsServer() {
      java.lang.Object ref = gpsServer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gpsServer_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gpsServer = 14 [default = "OFF"];</code>
     */
    public com.google.protobuf.ByteString
        getGpsServerBytes() {
      java.lang.Object ref = gpsServer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gpsServer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string gpsUpdate = 15 [default = "ON"];
    public static final int GPSUPDATE_FIELD_NUMBER = 15;
    private java.lang.Object gpsUpdate_;
    /**
     * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
     */
    public boolean hasGpsUpdate() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
     */
    public java.lang.String getGpsUpdate() {
      java.lang.Object ref = gpsUpdate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gpsUpdate_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
     */
    public com.google.protobuf.ByteString
        getGpsUpdateBytes() {
      java.lang.Object ref = gpsUpdate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gpsUpdate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional float azCloseEnough = 16 [default = 5];
    public static final int AZCLOSEENOUGH_FIELD_NUMBER = 16;
    private float azCloseEnough_;
    /**
     * <code>optional float azCloseEnough = 16 [default = 5];</code>
     */
    public boolean hasAzCloseEnough() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional float azCloseEnough = 16 [default = 5];</code>
     */
    public float getAzCloseEnough() {
      return azCloseEnough_;
    }

    // optional bool elDisabled = 17 [default = false];
    public static final int ELDISABLED_FIELD_NUMBER = 17;
    private boolean elDisabled_;
    /**
     * <code>optional bool elDisabled = 17 [default = false];</code>
     */
    public boolean hasElDisabled() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional bool elDisabled = 17 [default = false];</code>
     */
    public boolean getElDisabled() {
      return elDisabled_;
    }

    private void initFields() {
      msgName_ = "EZROTOR_CONFIG";
      iP_ = "";
      port_ = 0;
      azOffset_ = 0F;
      hardLimit_ = false;
      minScanAngle_ = 0F;
      maxScanAngle_ = 0F;
      multicastRate_ = 0F;
      pointHoldIncrement_ = 0F;
      energyScanSpeed_ = 20F;
      startDeviation_ = 180F;
      energyTrackTime_ = 500F;
      scanScrypt_ = "NONE";
      gpsServer_ = "OFF";
      gpsUpdate_ = "ON";
      azCloseEnough_ = 5F;
      elDisabled_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIPBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, port_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, azOffset_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, hardLimit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, minScanAngle_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, maxScanAngle_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, multicastRate_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, pointHoldIncrement_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, energyScanSpeed_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, startDeviation_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(12, energyTrackTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, getScanScryptBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getGpsServerBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, getGpsUpdateBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeFloat(16, azCloseEnough_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBool(17, elDisabled_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIPBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, port_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, azOffset_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, hardLimit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, minScanAngle_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, maxScanAngle_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, multicastRate_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, pointHoldIncrement_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, energyScanSpeed_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, startDeviation_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, energyTrackTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getScanScryptBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getGpsServerBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getGpsUpdateBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(16, azCloseEnough_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(17, elDisabled_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.RotorEzrotorConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the rotor resource.  These are populated
     * by ResourceRotor.configureMessage() and from resources.xml.
     *
     * msgName: ROTOR_EZROTOR_CONFIG, used to identify the message
     * IP: IP address to use for communication to the rotor
     * port: Port number to use for communication to the rotor
     * AzOffset: Offset in azimuth of the rotor
     * hardLimit: Enable or disable limits
     * minScanAngle: Minimum angle to scan (e.g. for FAST scans)
     * maxScanAngle: Maximum angle to scan (e.g. for FAST scans)
     * multicastRate: Rate of multicasting from GlobalConfig hardware
     * pointHoldIncrement: Degrees to step when stepping
     * energyScanSpeed: Velocity in degrees/sec to use when energy scanning
     * scanScrypt: scan scrypt to use for antenna angles
     * gpsServer: Server to get GPS points from
     * gpsUpdate: ???
     * azCloseEnough: value used to tell if the antenna is close enough to the commanded angle
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorEzrotorConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorEzrotorConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig.class, fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "EZROTOR_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        iP_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        azOffset_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        hardLimit_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        minScanAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        maxScanAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        multicastRate_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        pointHoldIncrement_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        energyScanSpeed_ = 20F;
        bitField0_ = (bitField0_ & ~0x00000200);
        startDeviation_ = 180F;
        bitField0_ = (bitField0_ & ~0x00000400);
        energyTrackTime_ = 500F;
        bitField0_ = (bitField0_ & ~0x00000800);
        scanScrypt_ = "NONE";
        bitField0_ = (bitField0_ & ~0x00001000);
        gpsServer_ = "OFF";
        bitField0_ = (bitField0_ & ~0x00002000);
        gpsUpdate_ = "ON";
        bitField0_ = (bitField0_ & ~0x00004000);
        azCloseEnough_ = 5F;
        bitField0_ = (bitField0_ & ~0x00008000);
        elDisabled_ = false;
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorEzrotorConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig result = new fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.iP_ = iP_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.azOffset_ = azOffset_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.hardLimit_ = hardLimit_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.minScanAngle_ = minScanAngle_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.maxScanAngle_ = maxScanAngle_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.multicastRate_ = multicastRate_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.pointHoldIncrement_ = pointHoldIncrement_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.energyScanSpeed_ = energyScanSpeed_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.startDeviation_ = startDeviation_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.energyTrackTime_ = energyTrackTime_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.scanScrypt_ = scanScrypt_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.gpsServer_ = gpsServer_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.gpsUpdate_ = gpsUpdate_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.azCloseEnough_ = azCloseEnough_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.elDisabled_ = elDisabled_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasIP()) {
          bitField0_ |= 0x00000002;
          iP_ = other.iP_;
          onChanged();
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasAzOffset()) {
          setAzOffset(other.getAzOffset());
        }
        if (other.hasHardLimit()) {
          setHardLimit(other.getHardLimit());
        }
        if (other.hasMinScanAngle()) {
          setMinScanAngle(other.getMinScanAngle());
        }
        if (other.hasMaxScanAngle()) {
          setMaxScanAngle(other.getMaxScanAngle());
        }
        if (other.hasMulticastRate()) {
          setMulticastRate(other.getMulticastRate());
        }
        if (other.hasPointHoldIncrement()) {
          setPointHoldIncrement(other.getPointHoldIncrement());
        }
        if (other.hasEnergyScanSpeed()) {
          setEnergyScanSpeed(other.getEnergyScanSpeed());
        }
        if (other.hasStartDeviation()) {
          setStartDeviation(other.getStartDeviation());
        }
        if (other.hasEnergyTrackTime()) {
          setEnergyTrackTime(other.getEnergyTrackTime());
        }
        if (other.hasScanScrypt()) {
          bitField0_ |= 0x00001000;
          scanScrypt_ = other.scanScrypt_;
          onChanged();
        }
        if (other.hasGpsServer()) {
          bitField0_ |= 0x00002000;
          gpsServer_ = other.gpsServer_;
          onChanged();
        }
        if (other.hasGpsUpdate()) {
          bitField0_ |= 0x00004000;
          gpsUpdate_ = other.gpsUpdate_;
          onChanged();
        }
        if (other.hasAzCloseEnough()) {
          setAzCloseEnough(other.getAzCloseEnough());
        }
        if (other.hasElDisabled()) {
          setElDisabled(other.getElDisabled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.RotorEzrotorConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "EZROTOR_CONFIG"];
      private java.lang.Object msgName_ = "EZROTOR_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "EZROTOR_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "EZROTOR_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "EZROTOR_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "EZROTOR_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "EZROTOR_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "EZROTOR_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional string IP = 2;
      private java.lang.Object iP_ = "";
      /**
       * <code>optional string IP = 2;</code>
       */
      public boolean hasIP() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public java.lang.String getIP() {
        java.lang.Object ref = iP_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          iP_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public com.google.protobuf.ByteString
          getIPBytes() {
        java.lang.Object ref = iP_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          iP_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public Builder setIP(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public Builder clearIP() {
        bitField0_ = (bitField0_ & ~0x00000002);
        iP_ = getDefaultInstance().getIP();
        onChanged();
        return this;
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public Builder setIPBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iP_ = value;
        onChanged();
        return this;
      }

      // optional int32 port = 3;
      private int port_ ;
      /**
       * <code>optional int32 port = 3;</code>
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 port = 3;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <code>optional int32 port = 3;</code>
       */
      public Builder setPort(int value) {
        bitField0_ |= 0x00000004;
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 port = 3;</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000004);
        port_ = 0;
        onChanged();
        return this;
      }

      // optional float AzOffset = 4;
      private float azOffset_ ;
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public boolean hasAzOffset() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public float getAzOffset() {
        return azOffset_;
      }
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public Builder setAzOffset(float value) {
        bitField0_ |= 0x00000008;
        azOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public Builder clearAzOffset() {
        bitField0_ = (bitField0_ & ~0x00000008);
        azOffset_ = 0F;
        onChanged();
        return this;
      }

      // optional bool hardLimit = 5;
      private boolean hardLimit_ ;
      /**
       * <code>optional bool hardLimit = 5;</code>
       */
      public boolean hasHardLimit() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool hardLimit = 5;</code>
       */
      public boolean getHardLimit() {
        return hardLimit_;
      }
      /**
       * <code>optional bool hardLimit = 5;</code>
       */
      public Builder setHardLimit(boolean value) {
        bitField0_ |= 0x00000010;
        hardLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hardLimit = 5;</code>
       */
      public Builder clearHardLimit() {
        bitField0_ = (bitField0_ & ~0x00000010);
        hardLimit_ = false;
        onChanged();
        return this;
      }

      // optional float minScanAngle = 6;
      private float minScanAngle_ ;
      /**
       * <code>optional float minScanAngle = 6;</code>
       */
      public boolean hasMinScanAngle() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float minScanAngle = 6;</code>
       */
      public float getMinScanAngle() {
        return minScanAngle_;
      }
      /**
       * <code>optional float minScanAngle = 6;</code>
       */
      public Builder setMinScanAngle(float value) {
        bitField0_ |= 0x00000020;
        minScanAngle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float minScanAngle = 6;</code>
       */
      public Builder clearMinScanAngle() {
        bitField0_ = (bitField0_ & ~0x00000020);
        minScanAngle_ = 0F;
        onChanged();
        return this;
      }

      // optional float maxScanAngle = 7;
      private float maxScanAngle_ ;
      /**
       * <code>optional float maxScanAngle = 7;</code>
       */
      public boolean hasMaxScanAngle() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float maxScanAngle = 7;</code>
       */
      public float getMaxScanAngle() {
        return maxScanAngle_;
      }
      /**
       * <code>optional float maxScanAngle = 7;</code>
       */
      public Builder setMaxScanAngle(float value) {
        bitField0_ |= 0x00000040;
        maxScanAngle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxScanAngle = 7;</code>
       */
      public Builder clearMaxScanAngle() {
        bitField0_ = (bitField0_ & ~0x00000040);
        maxScanAngle_ = 0F;
        onChanged();
        return this;
      }

      // optional float multicastRate = 8;
      private float multicastRate_ ;
      /**
       * <code>optional float multicastRate = 8;</code>
       */
      public boolean hasMulticastRate() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float multicastRate = 8;</code>
       */
      public float getMulticastRate() {
        return multicastRate_;
      }
      /**
       * <code>optional float multicastRate = 8;</code>
       */
      public Builder setMulticastRate(float value) {
        bitField0_ |= 0x00000080;
        multicastRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float multicastRate = 8;</code>
       */
      public Builder clearMulticastRate() {
        bitField0_ = (bitField0_ & ~0x00000080);
        multicastRate_ = 0F;
        onChanged();
        return this;
      }

      // optional float pointHoldIncrement = 9;
      private float pointHoldIncrement_ ;
      /**
       * <code>optional float pointHoldIncrement = 9;</code>
       */
      public boolean hasPointHoldIncrement() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float pointHoldIncrement = 9;</code>
       */
      public float getPointHoldIncrement() {
        return pointHoldIncrement_;
      }
      /**
       * <code>optional float pointHoldIncrement = 9;</code>
       */
      public Builder setPointHoldIncrement(float value) {
        bitField0_ |= 0x00000100;
        pointHoldIncrement_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float pointHoldIncrement = 9;</code>
       */
      public Builder clearPointHoldIncrement() {
        bitField0_ = (bitField0_ & ~0x00000100);
        pointHoldIncrement_ = 0F;
        onChanged();
        return this;
      }

      // optional float energyScanSpeed = 10 [default = 20];
      private float energyScanSpeed_ = 20F;
      /**
       * <code>optional float energyScanSpeed = 10 [default = 20];</code>
       */
      public boolean hasEnergyScanSpeed() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float energyScanSpeed = 10 [default = 20];</code>
       */
      public float getEnergyScanSpeed() {
        return energyScanSpeed_;
      }
      /**
       * <code>optional float energyScanSpeed = 10 [default = 20];</code>
       */
      public Builder setEnergyScanSpeed(float value) {
        bitField0_ |= 0x00000200;
        energyScanSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float energyScanSpeed = 10 [default = 20];</code>
       */
      public Builder clearEnergyScanSpeed() {
        bitField0_ = (bitField0_ & ~0x00000200);
        energyScanSpeed_ = 20F;
        onChanged();
        return this;
      }

      // optional float startDeviation = 11 [default = 180];
      private float startDeviation_ = 180F;
      /**
       * <code>optional float startDeviation = 11 [default = 180];</code>
       */
      public boolean hasStartDeviation() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional float startDeviation = 11 [default = 180];</code>
       */
      public float getStartDeviation() {
        return startDeviation_;
      }
      /**
       * <code>optional float startDeviation = 11 [default = 180];</code>
       */
      public Builder setStartDeviation(float value) {
        bitField0_ |= 0x00000400;
        startDeviation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float startDeviation = 11 [default = 180];</code>
       */
      public Builder clearStartDeviation() {
        bitField0_ = (bitField0_ & ~0x00000400);
        startDeviation_ = 180F;
        onChanged();
        return this;
      }

      // optional float energyTrackTime = 12 [default = 500];
      private float energyTrackTime_ = 500F;
      /**
       * <code>optional float energyTrackTime = 12 [default = 500];</code>
       */
      public boolean hasEnergyTrackTime() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float energyTrackTime = 12 [default = 500];</code>
       */
      public float getEnergyTrackTime() {
        return energyTrackTime_;
      }
      /**
       * <code>optional float energyTrackTime = 12 [default = 500];</code>
       */
      public Builder setEnergyTrackTime(float value) {
        bitField0_ |= 0x00000800;
        energyTrackTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float energyTrackTime = 12 [default = 500];</code>
       */
      public Builder clearEnergyTrackTime() {
        bitField0_ = (bitField0_ & ~0x00000800);
        energyTrackTime_ = 500F;
        onChanged();
        return this;
      }

      // optional string scanScrypt = 13 [default = "NONE"];
      private java.lang.Object scanScrypt_ = "NONE";
      /**
       * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
       */
      public boolean hasScanScrypt() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
       */
      public java.lang.String getScanScrypt() {
        java.lang.Object ref = scanScrypt_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          scanScrypt_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
       */
      public com.google.protobuf.ByteString
          getScanScryptBytes() {
        java.lang.Object ref = scanScrypt_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          scanScrypt_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
       */
      public Builder setScanScrypt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        scanScrypt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
       */
      public Builder clearScanScrypt() {
        bitField0_ = (bitField0_ & ~0x00001000);
        scanScrypt_ = getDefaultInstance().getScanScrypt();
        onChanged();
        return this;
      }
      /**
       * <code>optional string scanScrypt = 13 [default = "NONE"];</code>
       */
      public Builder setScanScryptBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        scanScrypt_ = value;
        onChanged();
        return this;
      }

      // optional string gpsServer = 14 [default = "OFF"];
      private java.lang.Object gpsServer_ = "OFF";
      /**
       * <code>optional string gpsServer = 14 [default = "OFF"];</code>
       */
      public boolean hasGpsServer() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string gpsServer = 14 [default = "OFF"];</code>
       */
      public java.lang.String getGpsServer() {
        java.lang.Object ref = gpsServer_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gpsServer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gpsServer = 14 [default = "OFF"];</code>
       */
      public com.google.protobuf.ByteString
          getGpsServerBytes() {
        java.lang.Object ref = gpsServer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gpsServer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gpsServer = 14 [default = "OFF"];</code>
       */
      public Builder setGpsServer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        gpsServer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpsServer = 14 [default = "OFF"];</code>
       */
      public Builder clearGpsServer() {
        bitField0_ = (bitField0_ & ~0x00002000);
        gpsServer_ = getDefaultInstance().getGpsServer();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpsServer = 14 [default = "OFF"];</code>
       */
      public Builder setGpsServerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        gpsServer_ = value;
        onChanged();
        return this;
      }

      // optional string gpsUpdate = 15 [default = "ON"];
      private java.lang.Object gpsUpdate_ = "ON";
      /**
       * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
       */
      public boolean hasGpsUpdate() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
       */
      public java.lang.String getGpsUpdate() {
        java.lang.Object ref = gpsUpdate_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gpsUpdate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
       */
      public com.google.protobuf.ByteString
          getGpsUpdateBytes() {
        java.lang.Object ref = gpsUpdate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gpsUpdate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
       */
      public Builder setGpsUpdate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        gpsUpdate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
       */
      public Builder clearGpsUpdate() {
        bitField0_ = (bitField0_ & ~0x00004000);
        gpsUpdate_ = getDefaultInstance().getGpsUpdate();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpsUpdate = 15 [default = "ON"];</code>
       */
      public Builder setGpsUpdateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        gpsUpdate_ = value;
        onChanged();
        return this;
      }

      // optional float azCloseEnough = 16 [default = 5];
      private float azCloseEnough_ = 5F;
      /**
       * <code>optional float azCloseEnough = 16 [default = 5];</code>
       */
      public boolean hasAzCloseEnough() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional float azCloseEnough = 16 [default = 5];</code>
       */
      public float getAzCloseEnough() {
        return azCloseEnough_;
      }
      /**
       * <code>optional float azCloseEnough = 16 [default = 5];</code>
       */
      public Builder setAzCloseEnough(float value) {
        bitField0_ |= 0x00008000;
        azCloseEnough_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float azCloseEnough = 16 [default = 5];</code>
       */
      public Builder clearAzCloseEnough() {
        bitField0_ = (bitField0_ & ~0x00008000);
        azCloseEnough_ = 5F;
        onChanged();
        return this;
      }

      // optional bool elDisabled = 17 [default = false];
      private boolean elDisabled_ ;
      /**
       * <code>optional bool elDisabled = 17 [default = false];</code>
       */
      public boolean hasElDisabled() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional bool elDisabled = 17 [default = false];</code>
       */
      public boolean getElDisabled() {
        return elDisabled_;
      }
      /**
       * <code>optional bool elDisabled = 17 [default = false];</code>
       */
      public Builder setElDisabled(boolean value) {
        bitField0_ |= 0x00010000;
        elDisabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool elDisabled = 17 [default = false];</code>
       */
      public Builder clearElDisabled() {
        bitField0_ = (bitField0_ & ~0x00010000);
        elDisabled_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.RotorEzrotorConfig)
    }

    static {
      defaultInstance = new RotorEzrotorConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.RotorEzrotorConfig)
  }

  public interface RotorHGIOConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "HGIO_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "HGIO_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "HGIO_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "HGIO_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional string IP = 2;
    /**
     * <code>optional string IP = 2;</code>
     */
    boolean hasIP();
    /**
     * <code>optional string IP = 2;</code>
     */
    java.lang.String getIP();
    /**
     * <code>optional string IP = 2;</code>
     */
    com.google.protobuf.ByteString
        getIPBytes();

    // optional int32 port = 3;
    /**
     * <code>optional int32 port = 3;</code>
     */
    boolean hasPort();
    /**
     * <code>optional int32 port = 3;</code>
     */
    int getPort();

    // optional float AzOffset = 4;
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    boolean hasAzOffset();
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    float getAzOffset();

    // optional bool hardLimit = 5 [default = false];
    /**
     * <code>optional bool hardLimit = 5 [default = false];</code>
     */
    boolean hasHardLimit();
    /**
     * <code>optional bool hardLimit = 5 [default = false];</code>
     */
    boolean getHardLimit();

    // optional float minScanAngle = 6;
    /**
     * <code>optional float minScanAngle = 6;</code>
     */
    boolean hasMinScanAngle();
    /**
     * <code>optional float minScanAngle = 6;</code>
     */
    float getMinScanAngle();

    // optional float maxScanAngle = 7;
    /**
     * <code>optional float maxScanAngle = 7;</code>
     */
    boolean hasMaxScanAngle();
    /**
     * <code>optional float maxScanAngle = 7;</code>
     */
    float getMaxScanAngle();

    // optional float minElevation = 8;
    /**
     * <code>optional float minElevation = 8;</code>
     */
    boolean hasMinElevation();
    /**
     * <code>optional float minElevation = 8;</code>
     */
    float getMinElevation();

    // optional float maxElevation = 9;
    /**
     * <code>optional float maxElevation = 9;</code>
     */
    boolean hasMaxElevation();
    /**
     * <code>optional float maxElevation = 9;</code>
     */
    float getMaxElevation();

    // optional float scanElevation = 10;
    /**
     * <code>optional float scanElevation = 10;</code>
     */
    boolean hasScanElevation();
    /**
     * <code>optional float scanElevation = 10;</code>
     */
    float getScanElevation();

    // optional float multicastRate = 11;
    /**
     * <code>optional float multicastRate = 11;</code>
     */
    boolean hasMulticastRate();
    /**
     * <code>optional float multicastRate = 11;</code>
     */
    float getMulticastRate();

    // optional float pointHoldIncrement = 12;
    /**
     * <code>optional float pointHoldIncrement = 12;</code>
     */
    boolean hasPointHoldIncrement();
    /**
     * <code>optional float pointHoldIncrement = 12;</code>
     */
    float getPointHoldIncrement();

    // optional float energyScanSpeed = 13 [default = 5];
    /**
     * <code>optional float energyScanSpeed = 13 [default = 5];</code>
     */
    boolean hasEnergyScanSpeed();
    /**
     * <code>optional float energyScanSpeed = 13 [default = 5];</code>
     */
    float getEnergyScanSpeed();

    // optional float startDeviation = 14 [default = 180];
    /**
     * <code>optional float startDeviation = 14 [default = 180];</code>
     */
    boolean hasStartDeviation();
    /**
     * <code>optional float startDeviation = 14 [default = 180];</code>
     */
    float getStartDeviation();

    // optional float energyTrackTime = 15 [default = 500];
    /**
     * <code>optional float energyTrackTime = 15 [default = 500];</code>
     */
    boolean hasEnergyTrackTime();
    /**
     * <code>optional float energyTrackTime = 15 [default = 500];</code>
     */
    float getEnergyTrackTime();

    // optional bool useGps = 16 [default = false];
    /**
     * <code>optional bool useGps = 16 [default = false];</code>
     */
    boolean hasUseGps();
    /**
     * <code>optional bool useGps = 16 [default = false];</code>
     */
    boolean getUseGps();

    // optional string scanScrypt = 17 [default = "NONE"];
    /**
     * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
     */
    boolean hasScanScrypt();
    /**
     * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
     */
    java.lang.String getScanScrypt();
    /**
     * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
     */
    com.google.protobuf.ByteString
        getScanScryptBytes();

    // optional string gpsServer = 18 [default = "OFF"];
    /**
     * <code>optional string gpsServer = 18 [default = "OFF"];</code>
     */
    boolean hasGpsServer();
    /**
     * <code>optional string gpsServer = 18 [default = "OFF"];</code>
     */
    java.lang.String getGpsServer();
    /**
     * <code>optional string gpsServer = 18 [default = "OFF"];</code>
     */
    com.google.protobuf.ByteString
        getGpsServerBytes();

    // optional string gpsUpdate = 19 [default = "ON"];
    /**
     * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
     */
    boolean hasGpsUpdate();
    /**
     * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
     */
    java.lang.String getGpsUpdate();
    /**
     * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
     */
    com.google.protobuf.ByteString
        getGpsUpdateBytes();

    // optional float azCloseEnough = 20 [default = 0.5];
    /**
     * <code>optional float azCloseEnough = 20 [default = 0.5];</code>
     */
    boolean hasAzCloseEnough();
    /**
     * <code>optional float azCloseEnough = 20 [default = 0.5];</code>
     */
    float getAzCloseEnough();

    // optional bool elDisabled = 21 [default = false];
    /**
     * <code>optional bool elDisabled = 21 [default = false];</code>
     */
    boolean hasElDisabled();
    /**
     * <code>optional bool elDisabled = 21 [default = false];</code>
     */
    boolean getElDisabled();

    // optional bool slewEnabled = 22 [default = false];
    /**
     * <code>optional bool slewEnabled = 22 [default = false];</code>
     */
    boolean hasSlewEnabled();
    /**
     * <code>optional bool slewEnabled = 22 [default = false];</code>
     */
    boolean getSlewEnabled();
  }
  /**
   * Protobuf type {@code falcon_res_msg.RotorHGIOConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the rotor resource.  These are populated
   * by ResourceRotor.configureMessage() and from resources.xml.
   *
   * msgName: ROTOR_HGIO_CONFIG, used to identify the message
   * IP: IP address to use for communication to the rotor
   * port: Port number to use for communication to the rotor
   * AzOffset: Offset in azimuth of the rotor
   * minScanAngle: Minimum angle to scan (e.g. for FAST scans)
   * maxScanAngle: Maximum angle to scan (e.g. for FAST scans)
   * multicastRate: Rate of multicasting from GlobalConfig hardware
   * pointHoldIncrement: Degrees to step when stepping
   * energyScanSpeed: Velocity in degrees/sec to use when energy scanning
   * azCloseEnough: value used to tell if the antenna is close enough to the commanded angle
   * </pre>
   */
  public static final class RotorHGIOConfig extends
      com.google.protobuf.GeneratedMessage
      implements RotorHGIOConfigOrBuilder {
    // Use RotorHGIOConfig.newBuilder() to construct.
    private RotorHGIOConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RotorHGIOConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RotorHGIOConfig defaultInstance;
    public static RotorHGIOConfig getDefaultInstance() {
      return defaultInstance;
    }

    public RotorHGIOConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RotorHGIOConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              iP_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              port_ = input.readInt32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              azOffset_ = input.readFloat();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              hardLimit_ = input.readBool();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              minScanAngle_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              maxScanAngle_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              minElevation_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              maxElevation_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              scanElevation_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              multicastRate_ = input.readFloat();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              pointHoldIncrement_ = input.readFloat();
              break;
            }
            case 109: {
              bitField0_ |= 0x00001000;
              energyScanSpeed_ = input.readFloat();
              break;
            }
            case 117: {
              bitField0_ |= 0x00002000;
              startDeviation_ = input.readFloat();
              break;
            }
            case 125: {
              bitField0_ |= 0x00004000;
              energyTrackTime_ = input.readFloat();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              useGps_ = input.readBool();
              break;
            }
            case 138: {
              bitField0_ |= 0x00010000;
              scanScrypt_ = input.readBytes();
              break;
            }
            case 146: {
              bitField0_ |= 0x00020000;
              gpsServer_ = input.readBytes();
              break;
            }
            case 154: {
              bitField0_ |= 0x00040000;
              gpsUpdate_ = input.readBytes();
              break;
            }
            case 165: {
              bitField0_ |= 0x00080000;
              azCloseEnough_ = input.readFloat();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              elDisabled_ = input.readBool();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              slewEnabled_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorHGIOConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorHGIOConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig.class, fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<RotorHGIOConfig> PARSER =
        new com.google.protobuf.AbstractParser<RotorHGIOConfig>() {
      public RotorHGIOConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RotorHGIOConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RotorHGIOConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "HGIO_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "HGIO_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "HGIO_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "HGIO_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string IP = 2;
    public static final int IP_FIELD_NUMBER = 2;
    private java.lang.Object iP_;
    /**
     * <code>optional string IP = 2;</code>
     */
    public boolean hasIP() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string IP = 2;</code>
     */
    public java.lang.String getIP() {
      java.lang.Object ref = iP_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          iP_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string IP = 2;</code>
     */
    public com.google.protobuf.ByteString
        getIPBytes() {
      java.lang.Object ref = iP_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        iP_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 port = 3;
    public static final int PORT_FIELD_NUMBER = 3;
    private int port_;
    /**
     * <code>optional int32 port = 3;</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 port = 3;</code>
     */
    public int getPort() {
      return port_;
    }

    // optional float AzOffset = 4;
    public static final int AZOFFSET_FIELD_NUMBER = 4;
    private float azOffset_;
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    public boolean hasAzOffset() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    public float getAzOffset() {
      return azOffset_;
    }

    // optional bool hardLimit = 5 [default = false];
    public static final int HARDLIMIT_FIELD_NUMBER = 5;
    private boolean hardLimit_;
    /**
     * <code>optional bool hardLimit = 5 [default = false];</code>
     */
    public boolean hasHardLimit() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool hardLimit = 5 [default = false];</code>
     */
    public boolean getHardLimit() {
      return hardLimit_;
    }

    // optional float minScanAngle = 6;
    public static final int MINSCANANGLE_FIELD_NUMBER = 6;
    private float minScanAngle_;
    /**
     * <code>optional float minScanAngle = 6;</code>
     */
    public boolean hasMinScanAngle() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float minScanAngle = 6;</code>
     */
    public float getMinScanAngle() {
      return minScanAngle_;
    }

    // optional float maxScanAngle = 7;
    public static final int MAXSCANANGLE_FIELD_NUMBER = 7;
    private float maxScanAngle_;
    /**
     * <code>optional float maxScanAngle = 7;</code>
     */
    public boolean hasMaxScanAngle() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float maxScanAngle = 7;</code>
     */
    public float getMaxScanAngle() {
      return maxScanAngle_;
    }

    // optional float minElevation = 8;
    public static final int MINELEVATION_FIELD_NUMBER = 8;
    private float minElevation_;
    /**
     * <code>optional float minElevation = 8;</code>
     */
    public boolean hasMinElevation() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float minElevation = 8;</code>
     */
    public float getMinElevation() {
      return minElevation_;
    }

    // optional float maxElevation = 9;
    public static final int MAXELEVATION_FIELD_NUMBER = 9;
    private float maxElevation_;
    /**
     * <code>optional float maxElevation = 9;</code>
     */
    public boolean hasMaxElevation() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float maxElevation = 9;</code>
     */
    public float getMaxElevation() {
      return maxElevation_;
    }

    // optional float scanElevation = 10;
    public static final int SCANELEVATION_FIELD_NUMBER = 10;
    private float scanElevation_;
    /**
     * <code>optional float scanElevation = 10;</code>
     */
    public boolean hasScanElevation() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float scanElevation = 10;</code>
     */
    public float getScanElevation() {
      return scanElevation_;
    }

    // optional float multicastRate = 11;
    public static final int MULTICASTRATE_FIELD_NUMBER = 11;
    private float multicastRate_;
    /**
     * <code>optional float multicastRate = 11;</code>
     */
    public boolean hasMulticastRate() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional float multicastRate = 11;</code>
     */
    public float getMulticastRate() {
      return multicastRate_;
    }

    // optional float pointHoldIncrement = 12;
    public static final int POINTHOLDINCREMENT_FIELD_NUMBER = 12;
    private float pointHoldIncrement_;
    /**
     * <code>optional float pointHoldIncrement = 12;</code>
     */
    public boolean hasPointHoldIncrement() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional float pointHoldIncrement = 12;</code>
     */
    public float getPointHoldIncrement() {
      return pointHoldIncrement_;
    }

    // optional float energyScanSpeed = 13 [default = 5];
    public static final int ENERGYSCANSPEED_FIELD_NUMBER = 13;
    private float energyScanSpeed_;
    /**
     * <code>optional float energyScanSpeed = 13 [default = 5];</code>
     */
    public boolean hasEnergyScanSpeed() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional float energyScanSpeed = 13 [default = 5];</code>
     */
    public float getEnergyScanSpeed() {
      return energyScanSpeed_;
    }

    // optional float startDeviation = 14 [default = 180];
    public static final int STARTDEVIATION_FIELD_NUMBER = 14;
    private float startDeviation_;
    /**
     * <code>optional float startDeviation = 14 [default = 180];</code>
     */
    public boolean hasStartDeviation() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional float startDeviation = 14 [default = 180];</code>
     */
    public float getStartDeviation() {
      return startDeviation_;
    }

    // optional float energyTrackTime = 15 [default = 500];
    public static final int ENERGYTRACKTIME_FIELD_NUMBER = 15;
    private float energyTrackTime_;
    /**
     * <code>optional float energyTrackTime = 15 [default = 500];</code>
     */
    public boolean hasEnergyTrackTime() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional float energyTrackTime = 15 [default = 500];</code>
     */
    public float getEnergyTrackTime() {
      return energyTrackTime_;
    }

    // optional bool useGps = 16 [default = false];
    public static final int USEGPS_FIELD_NUMBER = 16;
    private boolean useGps_;
    /**
     * <code>optional bool useGps = 16 [default = false];</code>
     */
    public boolean hasUseGps() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional bool useGps = 16 [default = false];</code>
     */
    public boolean getUseGps() {
      return useGps_;
    }

    // optional string scanScrypt = 17 [default = "NONE"];
    public static final int SCANSCRYPT_FIELD_NUMBER = 17;
    private java.lang.Object scanScrypt_;
    /**
     * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
     */
    public boolean hasScanScrypt() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
     */
    public java.lang.String getScanScrypt() {
      java.lang.Object ref = scanScrypt_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          scanScrypt_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
     */
    public com.google.protobuf.ByteString
        getScanScryptBytes() {
      java.lang.Object ref = scanScrypt_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        scanScrypt_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string gpsServer = 18 [default = "OFF"];
    public static final int GPSSERVER_FIELD_NUMBER = 18;
    private java.lang.Object gpsServer_;
    /**
     * <code>optional string gpsServer = 18 [default = "OFF"];</code>
     */
    public boolean hasGpsServer() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional string gpsServer = 18 [default = "OFF"];</code>
     */
    public java.lang.String getGpsServer() {
      java.lang.Object ref = gpsServer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gpsServer_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gpsServer = 18 [default = "OFF"];</code>
     */
    public com.google.protobuf.ByteString
        getGpsServerBytes() {
      java.lang.Object ref = gpsServer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gpsServer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string gpsUpdate = 19 [default = "ON"];
    public static final int GPSUPDATE_FIELD_NUMBER = 19;
    private java.lang.Object gpsUpdate_;
    /**
     * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
     */
    public boolean hasGpsUpdate() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
     */
    public java.lang.String getGpsUpdate() {
      java.lang.Object ref = gpsUpdate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gpsUpdate_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
     */
    public com.google.protobuf.ByteString
        getGpsUpdateBytes() {
      java.lang.Object ref = gpsUpdate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gpsUpdate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional float azCloseEnough = 20 [default = 0.5];
    public static final int AZCLOSEENOUGH_FIELD_NUMBER = 20;
    private float azCloseEnough_;
    /**
     * <code>optional float azCloseEnough = 20 [default = 0.5];</code>
     */
    public boolean hasAzCloseEnough() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional float azCloseEnough = 20 [default = 0.5];</code>
     */
    public float getAzCloseEnough() {
      return azCloseEnough_;
    }

    // optional bool elDisabled = 21 [default = false];
    public static final int ELDISABLED_FIELD_NUMBER = 21;
    private boolean elDisabled_;
    /**
     * <code>optional bool elDisabled = 21 [default = false];</code>
     */
    public boolean hasElDisabled() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional bool elDisabled = 21 [default = false];</code>
     */
    public boolean getElDisabled() {
      return elDisabled_;
    }

    // optional bool slewEnabled = 22 [default = false];
    public static final int SLEWENABLED_FIELD_NUMBER = 22;
    private boolean slewEnabled_;
    /**
     * <code>optional bool slewEnabled = 22 [default = false];</code>
     */
    public boolean hasSlewEnabled() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional bool slewEnabled = 22 [default = false];</code>
     */
    public boolean getSlewEnabled() {
      return slewEnabled_;
    }

    private void initFields() {
      msgName_ = "HGIO_CONFIG";
      iP_ = "";
      port_ = 0;
      azOffset_ = 0F;
      hardLimit_ = false;
      minScanAngle_ = 0F;
      maxScanAngle_ = 0F;
      minElevation_ = 0F;
      maxElevation_ = 0F;
      scanElevation_ = 0F;
      multicastRate_ = 0F;
      pointHoldIncrement_ = 0F;
      energyScanSpeed_ = 5F;
      startDeviation_ = 180F;
      energyTrackTime_ = 500F;
      useGps_ = false;
      scanScrypt_ = "NONE";
      gpsServer_ = "OFF";
      gpsUpdate_ = "ON";
      azCloseEnough_ = 0.5F;
      elDisabled_ = false;
      slewEnabled_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIPBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, port_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, azOffset_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, hardLimit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, minScanAngle_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, maxScanAngle_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, minElevation_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, maxElevation_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, scanElevation_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, multicastRate_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFloat(12, pointHoldIncrement_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(13, energyScanSpeed_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeFloat(14, startDeviation_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeFloat(15, energyTrackTime_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBool(16, useGps_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBytes(17, getScanScryptBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBytes(18, getGpsServerBytes());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBytes(19, getGpsUpdateBytes());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeFloat(20, azCloseEnough_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeBool(21, elDisabled_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeBool(22, slewEnabled_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIPBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, port_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, azOffset_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, hardLimit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, minScanAngle_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, maxScanAngle_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, minElevation_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, maxElevation_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, scanElevation_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, multicastRate_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, pointHoldIncrement_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, energyScanSpeed_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, startDeviation_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(15, energyTrackTime_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, useGps_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(17, getScanScryptBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(18, getGpsServerBytes());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(19, getGpsUpdateBytes());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(20, azCloseEnough_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(21, elDisabled_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(22, slewEnabled_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.RotorHGIOConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the rotor resource.  These are populated
     * by ResourceRotor.configureMessage() and from resources.xml.
     *
     * msgName: ROTOR_HGIO_CONFIG, used to identify the message
     * IP: IP address to use for communication to the rotor
     * port: Port number to use for communication to the rotor
     * AzOffset: Offset in azimuth of the rotor
     * minScanAngle: Minimum angle to scan (e.g. for FAST scans)
     * maxScanAngle: Maximum angle to scan (e.g. for FAST scans)
     * multicastRate: Rate of multicasting from GlobalConfig hardware
     * pointHoldIncrement: Degrees to step when stepping
     * energyScanSpeed: Velocity in degrees/sec to use when energy scanning
     * azCloseEnough: value used to tell if the antenna is close enough to the commanded angle
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorHGIOConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorHGIOConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig.class, fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "HGIO_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        iP_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        azOffset_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        hardLimit_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        minScanAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        maxScanAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        minElevation_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        maxElevation_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        scanElevation_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        multicastRate_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        pointHoldIncrement_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000800);
        energyScanSpeed_ = 5F;
        bitField0_ = (bitField0_ & ~0x00001000);
        startDeviation_ = 180F;
        bitField0_ = (bitField0_ & ~0x00002000);
        energyTrackTime_ = 500F;
        bitField0_ = (bitField0_ & ~0x00004000);
        useGps_ = false;
        bitField0_ = (bitField0_ & ~0x00008000);
        scanScrypt_ = "NONE";
        bitField0_ = (bitField0_ & ~0x00010000);
        gpsServer_ = "OFF";
        bitField0_ = (bitField0_ & ~0x00020000);
        gpsUpdate_ = "ON";
        bitField0_ = (bitField0_ & ~0x00040000);
        azCloseEnough_ = 0.5F;
        bitField0_ = (bitField0_ & ~0x00080000);
        elDisabled_ = false;
        bitField0_ = (bitField0_ & ~0x00100000);
        slewEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorHGIOConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig result = new fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.iP_ = iP_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.azOffset_ = azOffset_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.hardLimit_ = hardLimit_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.minScanAngle_ = minScanAngle_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.maxScanAngle_ = maxScanAngle_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.minElevation_ = minElevation_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.maxElevation_ = maxElevation_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.scanElevation_ = scanElevation_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.multicastRate_ = multicastRate_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.pointHoldIncrement_ = pointHoldIncrement_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.energyScanSpeed_ = energyScanSpeed_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.startDeviation_ = startDeviation_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.energyTrackTime_ = energyTrackTime_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.useGps_ = useGps_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.scanScrypt_ = scanScrypt_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.gpsServer_ = gpsServer_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.gpsUpdate_ = gpsUpdate_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.azCloseEnough_ = azCloseEnough_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.elDisabled_ = elDisabled_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.slewEnabled_ = slewEnabled_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasIP()) {
          bitField0_ |= 0x00000002;
          iP_ = other.iP_;
          onChanged();
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasAzOffset()) {
          setAzOffset(other.getAzOffset());
        }
        if (other.hasHardLimit()) {
          setHardLimit(other.getHardLimit());
        }
        if (other.hasMinScanAngle()) {
          setMinScanAngle(other.getMinScanAngle());
        }
        if (other.hasMaxScanAngle()) {
          setMaxScanAngle(other.getMaxScanAngle());
        }
        if (other.hasMinElevation()) {
          setMinElevation(other.getMinElevation());
        }
        if (other.hasMaxElevation()) {
          setMaxElevation(other.getMaxElevation());
        }
        if (other.hasScanElevation()) {
          setScanElevation(other.getScanElevation());
        }
        if (other.hasMulticastRate()) {
          setMulticastRate(other.getMulticastRate());
        }
        if (other.hasPointHoldIncrement()) {
          setPointHoldIncrement(other.getPointHoldIncrement());
        }
        if (other.hasEnergyScanSpeed()) {
          setEnergyScanSpeed(other.getEnergyScanSpeed());
        }
        if (other.hasStartDeviation()) {
          setStartDeviation(other.getStartDeviation());
        }
        if (other.hasEnergyTrackTime()) {
          setEnergyTrackTime(other.getEnergyTrackTime());
        }
        if (other.hasUseGps()) {
          setUseGps(other.getUseGps());
        }
        if (other.hasScanScrypt()) {
          bitField0_ |= 0x00010000;
          scanScrypt_ = other.scanScrypt_;
          onChanged();
        }
        if (other.hasGpsServer()) {
          bitField0_ |= 0x00020000;
          gpsServer_ = other.gpsServer_;
          onChanged();
        }
        if (other.hasGpsUpdate()) {
          bitField0_ |= 0x00040000;
          gpsUpdate_ = other.gpsUpdate_;
          onChanged();
        }
        if (other.hasAzCloseEnough()) {
          setAzCloseEnough(other.getAzCloseEnough());
        }
        if (other.hasElDisabled()) {
          setElDisabled(other.getElDisabled());
        }
        if (other.hasSlewEnabled()) {
          setSlewEnabled(other.getSlewEnabled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.RotorHGIOConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "HGIO_CONFIG"];
      private java.lang.Object msgName_ = "HGIO_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "HGIO_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "HGIO_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "HGIO_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "HGIO_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "HGIO_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "HGIO_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional string IP = 2;
      private java.lang.Object iP_ = "";
      /**
       * <code>optional string IP = 2;</code>
       */
      public boolean hasIP() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public java.lang.String getIP() {
        java.lang.Object ref = iP_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          iP_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public com.google.protobuf.ByteString
          getIPBytes() {
        java.lang.Object ref = iP_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          iP_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public Builder setIP(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public Builder clearIP() {
        bitField0_ = (bitField0_ & ~0x00000002);
        iP_ = getDefaultInstance().getIP();
        onChanged();
        return this;
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public Builder setIPBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iP_ = value;
        onChanged();
        return this;
      }

      // optional int32 port = 3;
      private int port_ ;
      /**
       * <code>optional int32 port = 3;</code>
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 port = 3;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <code>optional int32 port = 3;</code>
       */
      public Builder setPort(int value) {
        bitField0_ |= 0x00000004;
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 port = 3;</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000004);
        port_ = 0;
        onChanged();
        return this;
      }

      // optional float AzOffset = 4;
      private float azOffset_ ;
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public boolean hasAzOffset() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public float getAzOffset() {
        return azOffset_;
      }
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public Builder setAzOffset(float value) {
        bitField0_ |= 0x00000008;
        azOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public Builder clearAzOffset() {
        bitField0_ = (bitField0_ & ~0x00000008);
        azOffset_ = 0F;
        onChanged();
        return this;
      }

      // optional bool hardLimit = 5 [default = false];
      private boolean hardLimit_ ;
      /**
       * <code>optional bool hardLimit = 5 [default = false];</code>
       */
      public boolean hasHardLimit() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool hardLimit = 5 [default = false];</code>
       */
      public boolean getHardLimit() {
        return hardLimit_;
      }
      /**
       * <code>optional bool hardLimit = 5 [default = false];</code>
       */
      public Builder setHardLimit(boolean value) {
        bitField0_ |= 0x00000010;
        hardLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hardLimit = 5 [default = false];</code>
       */
      public Builder clearHardLimit() {
        bitField0_ = (bitField0_ & ~0x00000010);
        hardLimit_ = false;
        onChanged();
        return this;
      }

      // optional float minScanAngle = 6;
      private float minScanAngle_ ;
      /**
       * <code>optional float minScanAngle = 6;</code>
       */
      public boolean hasMinScanAngle() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float minScanAngle = 6;</code>
       */
      public float getMinScanAngle() {
        return minScanAngle_;
      }
      /**
       * <code>optional float minScanAngle = 6;</code>
       */
      public Builder setMinScanAngle(float value) {
        bitField0_ |= 0x00000020;
        minScanAngle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float minScanAngle = 6;</code>
       */
      public Builder clearMinScanAngle() {
        bitField0_ = (bitField0_ & ~0x00000020);
        minScanAngle_ = 0F;
        onChanged();
        return this;
      }

      // optional float maxScanAngle = 7;
      private float maxScanAngle_ ;
      /**
       * <code>optional float maxScanAngle = 7;</code>
       */
      public boolean hasMaxScanAngle() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float maxScanAngle = 7;</code>
       */
      public float getMaxScanAngle() {
        return maxScanAngle_;
      }
      /**
       * <code>optional float maxScanAngle = 7;</code>
       */
      public Builder setMaxScanAngle(float value) {
        bitField0_ |= 0x00000040;
        maxScanAngle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxScanAngle = 7;</code>
       */
      public Builder clearMaxScanAngle() {
        bitField0_ = (bitField0_ & ~0x00000040);
        maxScanAngle_ = 0F;
        onChanged();
        return this;
      }

      // optional float minElevation = 8;
      private float minElevation_ ;
      /**
       * <code>optional float minElevation = 8;</code>
       */
      public boolean hasMinElevation() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float minElevation = 8;</code>
       */
      public float getMinElevation() {
        return minElevation_;
      }
      /**
       * <code>optional float minElevation = 8;</code>
       */
      public Builder setMinElevation(float value) {
        bitField0_ |= 0x00000080;
        minElevation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float minElevation = 8;</code>
       */
      public Builder clearMinElevation() {
        bitField0_ = (bitField0_ & ~0x00000080);
        minElevation_ = 0F;
        onChanged();
        return this;
      }

      // optional float maxElevation = 9;
      private float maxElevation_ ;
      /**
       * <code>optional float maxElevation = 9;</code>
       */
      public boolean hasMaxElevation() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float maxElevation = 9;</code>
       */
      public float getMaxElevation() {
        return maxElevation_;
      }
      /**
       * <code>optional float maxElevation = 9;</code>
       */
      public Builder setMaxElevation(float value) {
        bitField0_ |= 0x00000100;
        maxElevation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxElevation = 9;</code>
       */
      public Builder clearMaxElevation() {
        bitField0_ = (bitField0_ & ~0x00000100);
        maxElevation_ = 0F;
        onChanged();
        return this;
      }

      // optional float scanElevation = 10;
      private float scanElevation_ ;
      /**
       * <code>optional float scanElevation = 10;</code>
       */
      public boolean hasScanElevation() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float scanElevation = 10;</code>
       */
      public float getScanElevation() {
        return scanElevation_;
      }
      /**
       * <code>optional float scanElevation = 10;</code>
       */
      public Builder setScanElevation(float value) {
        bitField0_ |= 0x00000200;
        scanElevation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float scanElevation = 10;</code>
       */
      public Builder clearScanElevation() {
        bitField0_ = (bitField0_ & ~0x00000200);
        scanElevation_ = 0F;
        onChanged();
        return this;
      }

      // optional float multicastRate = 11;
      private float multicastRate_ ;
      /**
       * <code>optional float multicastRate = 11;</code>
       */
      public boolean hasMulticastRate() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional float multicastRate = 11;</code>
       */
      public float getMulticastRate() {
        return multicastRate_;
      }
      /**
       * <code>optional float multicastRate = 11;</code>
       */
      public Builder setMulticastRate(float value) {
        bitField0_ |= 0x00000400;
        multicastRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float multicastRate = 11;</code>
       */
      public Builder clearMulticastRate() {
        bitField0_ = (bitField0_ & ~0x00000400);
        multicastRate_ = 0F;
        onChanged();
        return this;
      }

      // optional float pointHoldIncrement = 12;
      private float pointHoldIncrement_ ;
      /**
       * <code>optional float pointHoldIncrement = 12;</code>
       */
      public boolean hasPointHoldIncrement() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional float pointHoldIncrement = 12;</code>
       */
      public float getPointHoldIncrement() {
        return pointHoldIncrement_;
      }
      /**
       * <code>optional float pointHoldIncrement = 12;</code>
       */
      public Builder setPointHoldIncrement(float value) {
        bitField0_ |= 0x00000800;
        pointHoldIncrement_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float pointHoldIncrement = 12;</code>
       */
      public Builder clearPointHoldIncrement() {
        bitField0_ = (bitField0_ & ~0x00000800);
        pointHoldIncrement_ = 0F;
        onChanged();
        return this;
      }

      // optional float energyScanSpeed = 13 [default = 5];
      private float energyScanSpeed_ = 5F;
      /**
       * <code>optional float energyScanSpeed = 13 [default = 5];</code>
       */
      public boolean hasEnergyScanSpeed() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional float energyScanSpeed = 13 [default = 5];</code>
       */
      public float getEnergyScanSpeed() {
        return energyScanSpeed_;
      }
      /**
       * <code>optional float energyScanSpeed = 13 [default = 5];</code>
       */
      public Builder setEnergyScanSpeed(float value) {
        bitField0_ |= 0x00001000;
        energyScanSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float energyScanSpeed = 13 [default = 5];</code>
       */
      public Builder clearEnergyScanSpeed() {
        bitField0_ = (bitField0_ & ~0x00001000);
        energyScanSpeed_ = 5F;
        onChanged();
        return this;
      }

      // optional float startDeviation = 14 [default = 180];
      private float startDeviation_ = 180F;
      /**
       * <code>optional float startDeviation = 14 [default = 180];</code>
       */
      public boolean hasStartDeviation() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional float startDeviation = 14 [default = 180];</code>
       */
      public float getStartDeviation() {
        return startDeviation_;
      }
      /**
       * <code>optional float startDeviation = 14 [default = 180];</code>
       */
      public Builder setStartDeviation(float value) {
        bitField0_ |= 0x00002000;
        startDeviation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float startDeviation = 14 [default = 180];</code>
       */
      public Builder clearStartDeviation() {
        bitField0_ = (bitField0_ & ~0x00002000);
        startDeviation_ = 180F;
        onChanged();
        return this;
      }

      // optional float energyTrackTime = 15 [default = 500];
      private float energyTrackTime_ = 500F;
      /**
       * <code>optional float energyTrackTime = 15 [default = 500];</code>
       */
      public boolean hasEnergyTrackTime() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional float energyTrackTime = 15 [default = 500];</code>
       */
      public float getEnergyTrackTime() {
        return energyTrackTime_;
      }
      /**
       * <code>optional float energyTrackTime = 15 [default = 500];</code>
       */
      public Builder setEnergyTrackTime(float value) {
        bitField0_ |= 0x00004000;
        energyTrackTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float energyTrackTime = 15 [default = 500];</code>
       */
      public Builder clearEnergyTrackTime() {
        bitField0_ = (bitField0_ & ~0x00004000);
        energyTrackTime_ = 500F;
        onChanged();
        return this;
      }

      // optional bool useGps = 16 [default = false];
      private boolean useGps_ ;
      /**
       * <code>optional bool useGps = 16 [default = false];</code>
       */
      public boolean hasUseGps() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional bool useGps = 16 [default = false];</code>
       */
      public boolean getUseGps() {
        return useGps_;
      }
      /**
       * <code>optional bool useGps = 16 [default = false];</code>
       */
      public Builder setUseGps(boolean value) {
        bitField0_ |= 0x00008000;
        useGps_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool useGps = 16 [default = false];</code>
       */
      public Builder clearUseGps() {
        bitField0_ = (bitField0_ & ~0x00008000);
        useGps_ = false;
        onChanged();
        return this;
      }

      // optional string scanScrypt = 17 [default = "NONE"];
      private java.lang.Object scanScrypt_ = "NONE";
      /**
       * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
       */
      public boolean hasScanScrypt() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
       */
      public java.lang.String getScanScrypt() {
        java.lang.Object ref = scanScrypt_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          scanScrypt_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
       */
      public com.google.protobuf.ByteString
          getScanScryptBytes() {
        java.lang.Object ref = scanScrypt_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          scanScrypt_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
       */
      public Builder setScanScrypt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        scanScrypt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
       */
      public Builder clearScanScrypt() {
        bitField0_ = (bitField0_ & ~0x00010000);
        scanScrypt_ = getDefaultInstance().getScanScrypt();
        onChanged();
        return this;
      }
      /**
       * <code>optional string scanScrypt = 17 [default = "NONE"];</code>
       */
      public Builder setScanScryptBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        scanScrypt_ = value;
        onChanged();
        return this;
      }

      // optional string gpsServer = 18 [default = "OFF"];
      private java.lang.Object gpsServer_ = "OFF";
      /**
       * <code>optional string gpsServer = 18 [default = "OFF"];</code>
       */
      public boolean hasGpsServer() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional string gpsServer = 18 [default = "OFF"];</code>
       */
      public java.lang.String getGpsServer() {
        java.lang.Object ref = gpsServer_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gpsServer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gpsServer = 18 [default = "OFF"];</code>
       */
      public com.google.protobuf.ByteString
          getGpsServerBytes() {
        java.lang.Object ref = gpsServer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gpsServer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gpsServer = 18 [default = "OFF"];</code>
       */
      public Builder setGpsServer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
        gpsServer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpsServer = 18 [default = "OFF"];</code>
       */
      public Builder clearGpsServer() {
        bitField0_ = (bitField0_ & ~0x00020000);
        gpsServer_ = getDefaultInstance().getGpsServer();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpsServer = 18 [default = "OFF"];</code>
       */
      public Builder setGpsServerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
        gpsServer_ = value;
        onChanged();
        return this;
      }

      // optional string gpsUpdate = 19 [default = "ON"];
      private java.lang.Object gpsUpdate_ = "ON";
      /**
       * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
       */
      public boolean hasGpsUpdate() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
       */
      public java.lang.String getGpsUpdate() {
        java.lang.Object ref = gpsUpdate_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gpsUpdate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
       */
      public com.google.protobuf.ByteString
          getGpsUpdateBytes() {
        java.lang.Object ref = gpsUpdate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gpsUpdate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
       */
      public Builder setGpsUpdate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        gpsUpdate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
       */
      public Builder clearGpsUpdate() {
        bitField0_ = (bitField0_ & ~0x00040000);
        gpsUpdate_ = getDefaultInstance().getGpsUpdate();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gpsUpdate = 19 [default = "ON"];</code>
       */
      public Builder setGpsUpdateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        gpsUpdate_ = value;
        onChanged();
        return this;
      }

      // optional float azCloseEnough = 20 [default = 0.5];
      private float azCloseEnough_ = 0.5F;
      /**
       * <code>optional float azCloseEnough = 20 [default = 0.5];</code>
       */
      public boolean hasAzCloseEnough() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional float azCloseEnough = 20 [default = 0.5];</code>
       */
      public float getAzCloseEnough() {
        return azCloseEnough_;
      }
      /**
       * <code>optional float azCloseEnough = 20 [default = 0.5];</code>
       */
      public Builder setAzCloseEnough(float value) {
        bitField0_ |= 0x00080000;
        azCloseEnough_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float azCloseEnough = 20 [default = 0.5];</code>
       */
      public Builder clearAzCloseEnough() {
        bitField0_ = (bitField0_ & ~0x00080000);
        azCloseEnough_ = 0.5F;
        onChanged();
        return this;
      }

      // optional bool elDisabled = 21 [default = false];
      private boolean elDisabled_ ;
      /**
       * <code>optional bool elDisabled = 21 [default = false];</code>
       */
      public boolean hasElDisabled() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional bool elDisabled = 21 [default = false];</code>
       */
      public boolean getElDisabled() {
        return elDisabled_;
      }
      /**
       * <code>optional bool elDisabled = 21 [default = false];</code>
       */
      public Builder setElDisabled(boolean value) {
        bitField0_ |= 0x00100000;
        elDisabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool elDisabled = 21 [default = false];</code>
       */
      public Builder clearElDisabled() {
        bitField0_ = (bitField0_ & ~0x00100000);
        elDisabled_ = false;
        onChanged();
        return this;
      }

      // optional bool slewEnabled = 22 [default = false];
      private boolean slewEnabled_ ;
      /**
       * <code>optional bool slewEnabled = 22 [default = false];</code>
       */
      public boolean hasSlewEnabled() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional bool slewEnabled = 22 [default = false];</code>
       */
      public boolean getSlewEnabled() {
        return slewEnabled_;
      }
      /**
       * <code>optional bool slewEnabled = 22 [default = false];</code>
       */
      public Builder setSlewEnabled(boolean value) {
        bitField0_ |= 0x00200000;
        slewEnabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool slewEnabled = 22 [default = false];</code>
       */
      public Builder clearSlewEnabled() {
        bitField0_ = (bitField0_ & ~0x00200000);
        slewEnabled_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.RotorHGIOConfig)
    }

    static {
      defaultInstance = new RotorHGIOConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.RotorHGIOConfig)
  }

  public interface RotorESAConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "ROTOR_ESA_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_ESA_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_ESA_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_ESA_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional string IP = 2;
    /**
     * <code>optional string IP = 2;</code>
     */
    boolean hasIP();
    /**
     * <code>optional string IP = 2;</code>
     */
    java.lang.String getIP();
    /**
     * <code>optional string IP = 2;</code>
     */
    com.google.protobuf.ByteString
        getIPBytes();

    // optional int32 port = 3;
    /**
     * <code>optional int32 port = 3;</code>
     */
    boolean hasPort();
    /**
     * <code>optional int32 port = 3;</code>
     */
    int getPort();

    // optional float AzOffset = 4;
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    boolean hasAzOffset();
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    float getAzOffset();

    // optional bool hardLimit = 5;
    /**
     * <code>optional bool hardLimit = 5;</code>
     */
    boolean hasHardLimit();
    /**
     * <code>optional bool hardLimit = 5;</code>
     */
    boolean getHardLimit();

    // optional float minScanAngle = 6;
    /**
     * <code>optional float minScanAngle = 6;</code>
     */
    boolean hasMinScanAngle();
    /**
     * <code>optional float minScanAngle = 6;</code>
     */
    float getMinScanAngle();

    // optional float maxScanAngle = 7;
    /**
     * <code>optional float maxScanAngle = 7;</code>
     */
    boolean hasMaxScanAngle();
    /**
     * <code>optional float maxScanAngle = 7;</code>
     */
    float getMaxScanAngle();

    // optional float pointHoldIncrement = 8;
    /**
     * <code>optional float pointHoldIncrement = 8;</code>
     */
    boolean hasPointHoldIncrement();
    /**
     * <code>optional float pointHoldIncrement = 8;</code>
     */
    float getPointHoldIncrement();

    // optional float energyScanSpeed = 9 [default = 4];
    /**
     * <code>optional float energyScanSpeed = 9 [default = 4];</code>
     */
    boolean hasEnergyScanSpeed();
    /**
     * <code>optional float energyScanSpeed = 9 [default = 4];</code>
     */
    float getEnergyScanSpeed();

    // optional float startDeviation = 10 [default = 180];
    /**
     * <code>optional float startDeviation = 10 [default = 180];</code>
     */
    boolean hasStartDeviation();
    /**
     * <code>optional float startDeviation = 10 [default = 180];</code>
     */
    float getStartDeviation();

    // optional float energyTrackTime = 11 [default = 20];
    /**
     * <code>optional float energyTrackTime = 11 [default = 20];</code>
     */
    boolean hasEnergyTrackTime();
    /**
     * <code>optional float energyTrackTime = 11 [default = 20];</code>
     */
    float getEnergyTrackTime();

    // optional string scanScrypt = 12 [default = "NONE"];
    /**
     * <code>optional string scanScrypt = 12 [default = "NONE"];</code>
     */
    boolean hasScanScrypt();
    /**
     * <code>optional string scanScrypt = 12 [default = "NONE"];</code>
     */
    java.lang.String getScanScrypt();
    /**
     * <code>optional string scanScrypt = 12 [default = "NONE"];</code>
     */
    com.google.protobuf.ByteString
        getScanScryptBytes();

    // optional float azCloseEnough = 13 [default = 0.5];
    /**
     * <code>optional float azCloseEnough = 13 [default = 0.5];</code>
     */
    boolean hasAzCloseEnough();
    /**
     * <code>optional float azCloseEnough = 13 [default = 0.5];</code>
     */
    float getAzCloseEnough();

    // optional bool elDisabled = 14 [default = true];
    /**
     * <code>optional bool elDisabled = 14 [default = true];</code>
     */
    boolean hasElDisabled();
    /**
     * <code>optional bool elDisabled = 14 [default = true];</code>
     */
    boolean getElDisabled();
  }
  /**
   * Protobuf type {@code falcon_res_msg.RotorESAConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the rotor resource.  These are populated
   * by ResourceRotor.configureMessage() and from resources.xml.
   *
   * msgName: ROTOR_RPM_CONFIG, used to identify the message
   * IP: IP address to use for communication to the rotor
   * port: Port number to use for communication to the rotor
   * AzOffset: Offset in azimuth of the rotor
   * hardLimit: Enable or disable limits
   * minScanAngle: Minimum angle to scan (e.g. for FAST scans)
   * maxScanAngle: Maximum angle to scan (e.g. for FAST scans)
   * pointHoldIncrement: Degrees to step when stepping
   * energyScanSpeed: Velocity in degrees/sec to use when energy scanning
   * scanScrypt: scan scrypt to use for antenna angles
   * azCloseEnough: value used to tell if the antenna is close enough to the commanded angle
   * </pre>
   */
  public static final class RotorESAConfig extends
      com.google.protobuf.GeneratedMessage
      implements RotorESAConfigOrBuilder {
    // Use RotorESAConfig.newBuilder() to construct.
    private RotorESAConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RotorESAConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RotorESAConfig defaultInstance;
    public static RotorESAConfig getDefaultInstance() {
      return defaultInstance;
    }

    public RotorESAConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RotorESAConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              iP_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              port_ = input.readInt32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              azOffset_ = input.readFloat();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              hardLimit_ = input.readBool();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              minScanAngle_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              maxScanAngle_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              pointHoldIncrement_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              energyScanSpeed_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              startDeviation_ = input.readFloat();
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              energyTrackTime_ = input.readFloat();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000800;
              scanScrypt_ = input.readBytes();
              break;
            }
            case 109: {
              bitField0_ |= 0x00001000;
              azCloseEnough_ = input.readFloat();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              elDisabled_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorESAConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorESAConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig.class, fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<RotorESAConfig> PARSER =
        new com.google.protobuf.AbstractParser<RotorESAConfig>() {
      public RotorESAConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RotorESAConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RotorESAConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "ROTOR_ESA_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_ESA_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_ESA_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "ROTOR_ESA_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string IP = 2;
    public static final int IP_FIELD_NUMBER = 2;
    private java.lang.Object iP_;
    /**
     * <code>optional string IP = 2;</code>
     */
    public boolean hasIP() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string IP = 2;</code>
     */
    public java.lang.String getIP() {
      java.lang.Object ref = iP_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          iP_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string IP = 2;</code>
     */
    public com.google.protobuf.ByteString
        getIPBytes() {
      java.lang.Object ref = iP_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        iP_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 port = 3;
    public static final int PORT_FIELD_NUMBER = 3;
    private int port_;
    /**
     * <code>optional int32 port = 3;</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 port = 3;</code>
     */
    public int getPort() {
      return port_;
    }

    // optional float AzOffset = 4;
    public static final int AZOFFSET_FIELD_NUMBER = 4;
    private float azOffset_;
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    public boolean hasAzOffset() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float AzOffset = 4;</code>
     */
    public float getAzOffset() {
      return azOffset_;
    }

    // optional bool hardLimit = 5;
    public static final int HARDLIMIT_FIELD_NUMBER = 5;
    private boolean hardLimit_;
    /**
     * <code>optional bool hardLimit = 5;</code>
     */
    public boolean hasHardLimit() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool hardLimit = 5;</code>
     */
    public boolean getHardLimit() {
      return hardLimit_;
    }

    // optional float minScanAngle = 6;
    public static final int MINSCANANGLE_FIELD_NUMBER = 6;
    private float minScanAngle_;
    /**
     * <code>optional float minScanAngle = 6;</code>
     */
    public boolean hasMinScanAngle() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float minScanAngle = 6;</code>
     */
    public float getMinScanAngle() {
      return minScanAngle_;
    }

    // optional float maxScanAngle = 7;
    public static final int MAXSCANANGLE_FIELD_NUMBER = 7;
    private float maxScanAngle_;
    /**
     * <code>optional float maxScanAngle = 7;</code>
     */
    public boolean hasMaxScanAngle() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float maxScanAngle = 7;</code>
     */
    public float getMaxScanAngle() {
      return maxScanAngle_;
    }

    // optional float pointHoldIncrement = 8;
    public static final int POINTHOLDINCREMENT_FIELD_NUMBER = 8;
    private float pointHoldIncrement_;
    /**
     * <code>optional float pointHoldIncrement = 8;</code>
     */
    public boolean hasPointHoldIncrement() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float pointHoldIncrement = 8;</code>
     */
    public float getPointHoldIncrement() {
      return pointHoldIncrement_;
    }

    // optional float energyScanSpeed = 9 [default = 4];
    public static final int ENERGYSCANSPEED_FIELD_NUMBER = 9;
    private float energyScanSpeed_;
    /**
     * <code>optional float energyScanSpeed = 9 [default = 4];</code>
     */
    public boolean hasEnergyScanSpeed() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float energyScanSpeed = 9 [default = 4];</code>
     */
    public float getEnergyScanSpeed() {
      return energyScanSpeed_;
    }

    // optional float startDeviation = 10 [default = 180];
    public static final int STARTDEVIATION_FIELD_NUMBER = 10;
    private float startDeviation_;
    /**
     * <code>optional float startDeviation = 10 [default = 180];</code>
     */
    public boolean hasStartDeviation() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float startDeviation = 10 [default = 180];</code>
     */
    public float getStartDeviation() {
      return startDeviation_;
    }

    // optional float energyTrackTime = 11 [default = 20];
    public static final int ENERGYTRACKTIME_FIELD_NUMBER = 11;
    private float energyTrackTime_;
    /**
     * <code>optional float energyTrackTime = 11 [default = 20];</code>
     */
    public boolean hasEnergyTrackTime() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional float energyTrackTime = 11 [default = 20];</code>
     */
    public float getEnergyTrackTime() {
      return energyTrackTime_;
    }

    // optional string scanScrypt = 12 [default = "NONE"];
    public static final int SCANSCRYPT_FIELD_NUMBER = 12;
    private java.lang.Object scanScrypt_;
    /**
     * <code>optional string scanScrypt = 12 [default = "NONE"];</code>
     */
    public boolean hasScanScrypt() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string scanScrypt = 12 [default = "NONE"];</code>
     */
    public java.lang.String getScanScrypt() {
      java.lang.Object ref = scanScrypt_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          scanScrypt_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string scanScrypt = 12 [default = "NONE"];</code>
     */
    public com.google.protobuf.ByteString
        getScanScryptBytes() {
      java.lang.Object ref = scanScrypt_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        scanScrypt_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional float azCloseEnough = 13 [default = 0.5];
    public static final int AZCLOSEENOUGH_FIELD_NUMBER = 13;
    private float azCloseEnough_;
    /**
     * <code>optional float azCloseEnough = 13 [default = 0.5];</code>
     */
    public boolean hasAzCloseEnough() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional float azCloseEnough = 13 [default = 0.5];</code>
     */
    public float getAzCloseEnough() {
      return azCloseEnough_;
    }

    // optional bool elDisabled = 14 [default = true];
    public static final int ELDISABLED_FIELD_NUMBER = 14;
    private boolean elDisabled_;
    /**
     * <code>optional bool elDisabled = 14 [default = true];</code>
     */
    public boolean hasElDisabled() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional bool elDisabled = 14 [default = true];</code>
     */
    public boolean getElDisabled() {
      return elDisabled_;
    }

    private void initFields() {
      msgName_ = "ROTOR_ESA_CONFIG";
      iP_ = "";
      port_ = 0;
      azOffset_ = 0F;
      hardLimit_ = false;
      minScanAngle_ = 0F;
      maxScanAngle_ = 0F;
      pointHoldIncrement_ = 0F;
      energyScanSpeed_ = 4F;
      startDeviation_ = 180F;
      energyTrackTime_ = 20F;
      scanScrypt_ = "NONE";
      azCloseEnough_ = 0.5F;
      elDisabled_ = true;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIPBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, port_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, azOffset_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, hardLimit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, minScanAngle_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, maxScanAngle_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, pointHoldIncrement_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, energyScanSpeed_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, startDeviation_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, energyTrackTime_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getScanScryptBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(13, azCloseEnough_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBool(14, elDisabled_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIPBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, port_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, azOffset_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, hardLimit_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, minScanAngle_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, maxScanAngle_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, pointHoldIncrement_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, energyScanSpeed_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, startDeviation_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, energyTrackTime_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getScanScryptBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, azCloseEnough_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, elDisabled_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.RotorESAConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the rotor resource.  These are populated
     * by ResourceRotor.configureMessage() and from resources.xml.
     *
     * msgName: ROTOR_RPM_CONFIG, used to identify the message
     * IP: IP address to use for communication to the rotor
     * port: Port number to use for communication to the rotor
     * AzOffset: Offset in azimuth of the rotor
     * hardLimit: Enable or disable limits
     * minScanAngle: Minimum angle to scan (e.g. for FAST scans)
     * maxScanAngle: Maximum angle to scan (e.g. for FAST scans)
     * pointHoldIncrement: Degrees to step when stepping
     * energyScanSpeed: Velocity in degrees/sec to use when energy scanning
     * scanScrypt: scan scrypt to use for antenna angles
     * azCloseEnough: value used to tell if the antenna is close enough to the commanded angle
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorESAConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorESAConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig.class, fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "ROTOR_ESA_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        iP_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        azOffset_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        hardLimit_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        minScanAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        maxScanAngle_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        pointHoldIncrement_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        energyScanSpeed_ = 4F;
        bitField0_ = (bitField0_ & ~0x00000100);
        startDeviation_ = 180F;
        bitField0_ = (bitField0_ & ~0x00000200);
        energyTrackTime_ = 20F;
        bitField0_ = (bitField0_ & ~0x00000400);
        scanScrypt_ = "NONE";
        bitField0_ = (bitField0_ & ~0x00000800);
        azCloseEnough_ = 0.5F;
        bitField0_ = (bitField0_ & ~0x00001000);
        elDisabled_ = true;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_RotorESAConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig result = new fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.iP_ = iP_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.azOffset_ = azOffset_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.hardLimit_ = hardLimit_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.minScanAngle_ = minScanAngle_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.maxScanAngle_ = maxScanAngle_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.pointHoldIncrement_ = pointHoldIncrement_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.energyScanSpeed_ = energyScanSpeed_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.startDeviation_ = startDeviation_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.energyTrackTime_ = energyTrackTime_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.scanScrypt_ = scanScrypt_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.azCloseEnough_ = azCloseEnough_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.elDisabled_ = elDisabled_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasIP()) {
          bitField0_ |= 0x00000002;
          iP_ = other.iP_;
          onChanged();
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasAzOffset()) {
          setAzOffset(other.getAzOffset());
        }
        if (other.hasHardLimit()) {
          setHardLimit(other.getHardLimit());
        }
        if (other.hasMinScanAngle()) {
          setMinScanAngle(other.getMinScanAngle());
        }
        if (other.hasMaxScanAngle()) {
          setMaxScanAngle(other.getMaxScanAngle());
        }
        if (other.hasPointHoldIncrement()) {
          setPointHoldIncrement(other.getPointHoldIncrement());
        }
        if (other.hasEnergyScanSpeed()) {
          setEnergyScanSpeed(other.getEnergyScanSpeed());
        }
        if (other.hasStartDeviation()) {
          setStartDeviation(other.getStartDeviation());
        }
        if (other.hasEnergyTrackTime()) {
          setEnergyTrackTime(other.getEnergyTrackTime());
        }
        if (other.hasScanScrypt()) {
          bitField0_ |= 0x00000800;
          scanScrypt_ = other.scanScrypt_;
          onChanged();
        }
        if (other.hasAzCloseEnough()) {
          setAzCloseEnough(other.getAzCloseEnough());
        }
        if (other.hasElDisabled()) {
          setElDisabled(other.getElDisabled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.RotorESAConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "ROTOR_ESA_CONFIG"];
      private java.lang.Object msgName_ = "ROTOR_ESA_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_ESA_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_ESA_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_ESA_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_ESA_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_ESA_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "ROTOR_ESA_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional string IP = 2;
      private java.lang.Object iP_ = "";
      /**
       * <code>optional string IP = 2;</code>
       */
      public boolean hasIP() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public java.lang.String getIP() {
        java.lang.Object ref = iP_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          iP_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public com.google.protobuf.ByteString
          getIPBytes() {
        java.lang.Object ref = iP_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          iP_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public Builder setIP(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public Builder clearIP() {
        bitField0_ = (bitField0_ & ~0x00000002);
        iP_ = getDefaultInstance().getIP();
        onChanged();
        return this;
      }
      /**
       * <code>optional string IP = 2;</code>
       */
      public Builder setIPBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iP_ = value;
        onChanged();
        return this;
      }

      // optional int32 port = 3;
      private int port_ ;
      /**
       * <code>optional int32 port = 3;</code>
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 port = 3;</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <code>optional int32 port = 3;</code>
       */
      public Builder setPort(int value) {
        bitField0_ |= 0x00000004;
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 port = 3;</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000004);
        port_ = 0;
        onChanged();
        return this;
      }

      // optional float AzOffset = 4;
      private float azOffset_ ;
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public boolean hasAzOffset() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public float getAzOffset() {
        return azOffset_;
      }
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public Builder setAzOffset(float value) {
        bitField0_ |= 0x00000008;
        azOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float AzOffset = 4;</code>
       */
      public Builder clearAzOffset() {
        bitField0_ = (bitField0_ & ~0x00000008);
        azOffset_ = 0F;
        onChanged();
        return this;
      }

      // optional bool hardLimit = 5;
      private boolean hardLimit_ ;
      /**
       * <code>optional bool hardLimit = 5;</code>
       */
      public boolean hasHardLimit() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool hardLimit = 5;</code>
       */
      public boolean getHardLimit() {
        return hardLimit_;
      }
      /**
       * <code>optional bool hardLimit = 5;</code>
       */
      public Builder setHardLimit(boolean value) {
        bitField0_ |= 0x00000010;
        hardLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hardLimit = 5;</code>
       */
      public Builder clearHardLimit() {
        bitField0_ = (bitField0_ & ~0x00000010);
        hardLimit_ = false;
        onChanged();
        return this;
      }

      // optional float minScanAngle = 6;
      private float minScanAngle_ ;
      /**
       * <code>optional float minScanAngle = 6;</code>
       */
      public boolean hasMinScanAngle() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float minScanAngle = 6;</code>
       */
      public float getMinScanAngle() {
        return minScanAngle_;
      }
      /**
       * <code>optional float minScanAngle = 6;</code>
       */
      public Builder setMinScanAngle(float value) {
        bitField0_ |= 0x00000020;
        minScanAngle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float minScanAngle = 6;</code>
       */
      public Builder clearMinScanAngle() {
        bitField0_ = (bitField0_ & ~0x00000020);
        minScanAngle_ = 0F;
        onChanged();
        return this;
      }

      // optional float maxScanAngle = 7;
      private float maxScanAngle_ ;
      /**
       * <code>optional float maxScanAngle = 7;</code>
       */
      public boolean hasMaxScanAngle() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float maxScanAngle = 7;</code>
       */
      public float getMaxScanAngle() {
        return maxScanAngle_;
      }
      /**
       * <code>optional float maxScanAngle = 7;</code>
       */
      public Builder setMaxScanAngle(float value) {
        bitField0_ |= 0x00000040;
        maxScanAngle_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float maxScanAngle = 7;</code>
       */
      public Builder clearMaxScanAngle() {
        bitField0_ = (bitField0_ & ~0x00000040);
        maxScanAngle_ = 0F;
        onChanged();
        return this;
      }

      // optional float pointHoldIncrement = 8;
      private float pointHoldIncrement_ ;
      /**
       * <code>optional float pointHoldIncrement = 8;</code>
       */
      public boolean hasPointHoldIncrement() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float pointHoldIncrement = 8;</code>
       */
      public float getPointHoldIncrement() {
        return pointHoldIncrement_;
      }
      /**
       * <code>optional float pointHoldIncrement = 8;</code>
       */
      public Builder setPointHoldIncrement(float value) {
        bitField0_ |= 0x00000080;
        pointHoldIncrement_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float pointHoldIncrement = 8;</code>
       */
      public Builder clearPointHoldIncrement() {
        bitField0_ = (bitField0_ & ~0x00000080);
        pointHoldIncrement_ = 0F;
        onChanged();
        return this;
      }

      // optional float energyScanSpeed = 9 [default = 4];
      private float energyScanSpeed_ = 4F;
      /**
       * <code>optional float energyScanSpeed = 9 [default = 4];</code>
       */
      public boolean hasEnergyScanSpeed() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float energyScanSpeed = 9 [default = 4];</code>
       */
      public float getEnergyScanSpeed() {
        return energyScanSpeed_;
      }
      /**
       * <code>optional float energyScanSpeed = 9 [default = 4];</code>
       */
      public Builder setEnergyScanSpeed(float value) {
        bitField0_ |= 0x00000100;
        energyScanSpeed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float energyScanSpeed = 9 [default = 4];</code>
       */
      public Builder clearEnergyScanSpeed() {
        bitField0_ = (bitField0_ & ~0x00000100);
        energyScanSpeed_ = 4F;
        onChanged();
        return this;
      }

      // optional float startDeviation = 10 [default = 180];
      private float startDeviation_ = 180F;
      /**
       * <code>optional float startDeviation = 10 [default = 180];</code>
       */
      public boolean hasStartDeviation() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float startDeviation = 10 [default = 180];</code>
       */
      public float getStartDeviation() {
        return startDeviation_;
      }
      /**
       * <code>optional float startDeviation = 10 [default = 180];</code>
       */
      public Builder setStartDeviation(float value) {
        bitField0_ |= 0x00000200;
        startDeviation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float startDeviation = 10 [default = 180];</code>
       */
      public Builder clearStartDeviation() {
        bitField0_ = (bitField0_ & ~0x00000200);
        startDeviation_ = 180F;
        onChanged();
        return this;
      }

      // optional float energyTrackTime = 11 [default = 20];
      private float energyTrackTime_ = 20F;
      /**
       * <code>optional float energyTrackTime = 11 [default = 20];</code>
       */
      public boolean hasEnergyTrackTime() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional float energyTrackTime = 11 [default = 20];</code>
       */
      public float getEnergyTrackTime() {
        return energyTrackTime_;
      }
      /**
       * <code>optional float energyTrackTime = 11 [default = 20];</code>
       */
      public Builder setEnergyTrackTime(float value) {
        bitField0_ |= 0x00000400;
        energyTrackTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float energyTrackTime = 11 [default = 20];</code>
       */
      public Builder clearEnergyTrackTime() {
        bitField0_ = (bitField0_ & ~0x00000400);
        energyTrackTime_ = 20F;
        onChanged();
        return this;
      }

      // optional string scanScrypt = 12 [default = "NONE"];
      private java.lang.Object scanScrypt_ = "NONE";
      /**
       * <code>optional string scanScrypt = 12 [default = "NONE"];</code>
       */
      public boolean hasScanScrypt() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string scanScrypt = 12 [default = "NONE"];</code>
       */
      public java.lang.String getScanScrypt() {
        java.lang.Object ref = scanScrypt_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          scanScrypt_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string scanScrypt = 12 [default = "NONE"];</code>
       */
      public com.google.protobuf.ByteString
          getScanScryptBytes() {
        java.lang.Object ref = scanScrypt_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          scanScrypt_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string scanScrypt = 12 [default = "NONE"];</code>
       */
      public Builder setScanScrypt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        scanScrypt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string scanScrypt = 12 [default = "NONE"];</code>
       */
      public Builder clearScanScrypt() {
        bitField0_ = (bitField0_ & ~0x00000800);
        scanScrypt_ = getDefaultInstance().getScanScrypt();
        onChanged();
        return this;
      }
      /**
       * <code>optional string scanScrypt = 12 [default = "NONE"];</code>
       */
      public Builder setScanScryptBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        scanScrypt_ = value;
        onChanged();
        return this;
      }

      // optional float azCloseEnough = 13 [default = 0.5];
      private float azCloseEnough_ = 0.5F;
      /**
       * <code>optional float azCloseEnough = 13 [default = 0.5];</code>
       */
      public boolean hasAzCloseEnough() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional float azCloseEnough = 13 [default = 0.5];</code>
       */
      public float getAzCloseEnough() {
        return azCloseEnough_;
      }
      /**
       * <code>optional float azCloseEnough = 13 [default = 0.5];</code>
       */
      public Builder setAzCloseEnough(float value) {
        bitField0_ |= 0x00001000;
        azCloseEnough_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float azCloseEnough = 13 [default = 0.5];</code>
       */
      public Builder clearAzCloseEnough() {
        bitField0_ = (bitField0_ & ~0x00001000);
        azCloseEnough_ = 0.5F;
        onChanged();
        return this;
      }

      // optional bool elDisabled = 14 [default = true];
      private boolean elDisabled_ = true;
      /**
       * <code>optional bool elDisabled = 14 [default = true];</code>
       */
      public boolean hasElDisabled() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional bool elDisabled = 14 [default = true];</code>
       */
      public boolean getElDisabled() {
        return elDisabled_;
      }
      /**
       * <code>optional bool elDisabled = 14 [default = true];</code>
       */
      public Builder setElDisabled(boolean value) {
        bitField0_ |= 0x00002000;
        elDisabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool elDisabled = 14 [default = true];</code>
       */
      public Builder clearElDisabled() {
        bitField0_ = (bitField0_ & ~0x00002000);
        elDisabled_ = true;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.RotorESAConfig)
    }

    static {
      defaultInstance = new RotorESAConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.RotorESAConfig)
  }

  public interface DSSwitchConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "DSSWITCH_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "DSSWITCH_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "DSSWITCH_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "DSSWITCH_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional string baseURL = 2;
    /**
     * <code>optional string baseURL = 2;</code>
     */
    boolean hasBaseURL();
    /**
     * <code>optional string baseURL = 2;</code>
     */
    java.lang.String getBaseURL();
    /**
     * <code>optional string baseURL = 2;</code>
     */
    com.google.protobuf.ByteString
        getBaseURLBytes();

    // optional string inputPath = 3;
    /**
     * <code>optional string inputPath = 3;</code>
     */
    boolean hasInputPath();
    /**
     * <code>optional string inputPath = 3;</code>
     */
    java.lang.String getInputPath();
    /**
     * <code>optional string inputPath = 3;</code>
     */
    com.google.protobuf.ByteString
        getInputPathBytes();

    // optional string outputPath = 4;
    /**
     * <code>optional string outputPath = 4;</code>
     */
    boolean hasOutputPath();
    /**
     * <code>optional string outputPath = 4;</code>
     */
    java.lang.String getOutputPath();
    /**
     * <code>optional string outputPath = 4;</code>
     */
    com.google.protobuf.ByteString
        getOutputPathBytes();

    // optional string userName = 5;
    /**
     * <code>optional string userName = 5;</code>
     */
    boolean hasUserName();
    /**
     * <code>optional string userName = 5;</code>
     */
    java.lang.String getUserName();
    /**
     * <code>optional string userName = 5;</code>
     */
    com.google.protobuf.ByteString
        getUserNameBytes();

    // optional string password = 6;
    /**
     * <code>optional string password = 6;</code>
     */
    boolean hasPassword();
    /**
     * <code>optional string password = 6;</code>
     */
    java.lang.String getPassword();
    /**
     * <code>optional string password = 6;</code>
     */
    com.google.protobuf.ByteString
        getPasswordBytes();

    // optional float sleepTime = 7;
    /**
     * <code>optional float sleepTime = 7;</code>
     */
    boolean hasSleepTime();
    /**
     * <code>optional float sleepTime = 7;</code>
     */
    float getSleepTime();

    // optional int32 slaveTimeout = 8 [default = 180];
    /**
     * <code>optional int32 slaveTimeout = 8 [default = 180];</code>
     *
     * <pre>
     * 3 minutes
     * </pre>
     */
    boolean hasSlaveTimeout();
    /**
     * <code>optional int32 slaveTimeout = 8 [default = 180];</code>
     *
     * <pre>
     * 3 minutes
     * </pre>
     */
    int getSlaveTimeout();

    // optional float energyScanSec = 9 [default = 10];
    /**
     * <code>optional float energyScanSec = 9 [default = 10];</code>
     */
    boolean hasEnergyScanSec();
    /**
     * <code>optional float energyScanSec = 9 [default = 10];</code>
     */
    float getEnergyScanSec();

    // optional float energyTrackTime = 10 [default = 300];
    /**
     * <code>optional float energyTrackTime = 10 [default = 300];</code>
     */
    boolean hasEnergyTrackTime();
    /**
     * <code>optional float energyTrackTime = 10 [default = 300];</code>
     */
    float getEnergyTrackTime();
  }
  /**
   * Protobuf type {@code falcon_res_msg.DSSwitchConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the Dragon Shadow RF switch resource.  These are populated
   * by ResourceDSSwitch.configureMessage() and from resources.xml.
   *
   * msgName: RFSWITCH_CONFIG, used to identify the message
   * IP: IP of the rf switch or hostname
   * slaveTimeout: Timeout in seconds
   * energyScanSec: Number of seconds to stay on each port when energy scanning
   * energyTrackTime: Number of seconds between energy tracks
   * </pre>
   */
  public static final class DSSwitchConfig extends
      com.google.protobuf.GeneratedMessage
      implements DSSwitchConfigOrBuilder {
    // Use DSSwitchConfig.newBuilder() to construct.
    private DSSwitchConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DSSwitchConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DSSwitchConfig defaultInstance;
    public static DSSwitchConfig getDefaultInstance() {
      return defaultInstance;
    }

    public DSSwitchConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DSSwitchConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              baseURL_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              inputPath_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              outputPath_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              userName_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              password_ = input.readBytes();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              sleepTime_ = input.readFloat();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              slaveTimeout_ = input.readInt32();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              energyScanSec_ = input.readFloat();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000200;
              energyTrackTime_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_DSSwitchConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_DSSwitchConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig.class, fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<DSSwitchConfig> PARSER =
        new com.google.protobuf.AbstractParser<DSSwitchConfig>() {
      public DSSwitchConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DSSwitchConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DSSwitchConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "DSSWITCH_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "DSSWITCH_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "DSSWITCH_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "DSSWITCH_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string baseURL = 2;
    public static final int BASEURL_FIELD_NUMBER = 2;
    private java.lang.Object baseURL_;
    /**
     * <code>optional string baseURL = 2;</code>
     */
    public boolean hasBaseURL() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string baseURL = 2;</code>
     */
    public java.lang.String getBaseURL() {
      java.lang.Object ref = baseURL_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          baseURL_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string baseURL = 2;</code>
     */
    public com.google.protobuf.ByteString
        getBaseURLBytes() {
      java.lang.Object ref = baseURL_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        baseURL_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string inputPath = 3;
    public static final int INPUTPATH_FIELD_NUMBER = 3;
    private java.lang.Object inputPath_;
    /**
     * <code>optional string inputPath = 3;</code>
     */
    public boolean hasInputPath() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string inputPath = 3;</code>
     */
    public java.lang.String getInputPath() {
      java.lang.Object ref = inputPath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          inputPath_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string inputPath = 3;</code>
     */
    public com.google.protobuf.ByteString
        getInputPathBytes() {
      java.lang.Object ref = inputPath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        inputPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string outputPath = 4;
    public static final int OUTPUTPATH_FIELD_NUMBER = 4;
    private java.lang.Object outputPath_;
    /**
     * <code>optional string outputPath = 4;</code>
     */
    public boolean hasOutputPath() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string outputPath = 4;</code>
     */
    public java.lang.String getOutputPath() {
      java.lang.Object ref = outputPath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          outputPath_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string outputPath = 4;</code>
     */
    public com.google.protobuf.ByteString
        getOutputPathBytes() {
      java.lang.Object ref = outputPath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        outputPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string userName = 5;
    public static final int USERNAME_FIELD_NUMBER = 5;
    private java.lang.Object userName_;
    /**
     * <code>optional string userName = 5;</code>
     */
    public boolean hasUserName() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string userName = 5;</code>
     */
    public java.lang.String getUserName() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string userName = 5;</code>
     */
    public com.google.protobuf.ByteString
        getUserNameBytes() {
      java.lang.Object ref = userName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string password = 6;
    public static final int PASSWORD_FIELD_NUMBER = 6;
    private java.lang.Object password_;
    /**
     * <code>optional string password = 6;</code>
     */
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string password = 6;</code>
     */
    public java.lang.String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          password_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string password = 6;</code>
     */
    public com.google.protobuf.ByteString
        getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional float sleepTime = 7;
    public static final int SLEEPTIME_FIELD_NUMBER = 7;
    private float sleepTime_;
    /**
     * <code>optional float sleepTime = 7;</code>
     */
    public boolean hasSleepTime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float sleepTime = 7;</code>
     */
    public float getSleepTime() {
      return sleepTime_;
    }

    // optional int32 slaveTimeout = 8 [default = 180];
    public static final int SLAVETIMEOUT_FIELD_NUMBER = 8;
    private int slaveTimeout_;
    /**
     * <code>optional int32 slaveTimeout = 8 [default = 180];</code>
     *
     * <pre>
     * 3 minutes
     * </pre>
     */
    public boolean hasSlaveTimeout() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 slaveTimeout = 8 [default = 180];</code>
     *
     * <pre>
     * 3 minutes
     * </pre>
     */
    public int getSlaveTimeout() {
      return slaveTimeout_;
    }

    // optional float energyScanSec = 9 [default = 10];
    public static final int ENERGYSCANSEC_FIELD_NUMBER = 9;
    private float energyScanSec_;
    /**
     * <code>optional float energyScanSec = 9 [default = 10];</code>
     */
    public boolean hasEnergyScanSec() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float energyScanSec = 9 [default = 10];</code>
     */
    public float getEnergyScanSec() {
      return energyScanSec_;
    }

    // optional float energyTrackTime = 10 [default = 300];
    public static final int ENERGYTRACKTIME_FIELD_NUMBER = 10;
    private float energyTrackTime_;
    /**
     * <code>optional float energyTrackTime = 10 [default = 300];</code>
     */
    public boolean hasEnergyTrackTime() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional float energyTrackTime = 10 [default = 300];</code>
     */
    public float getEnergyTrackTime() {
      return energyTrackTime_;
    }

    private void initFields() {
      msgName_ = "DSSWITCH_CONFIG";
      baseURL_ = "";
      inputPath_ = "";
      outputPath_ = "";
      userName_ = "";
      password_ = "";
      sleepTime_ = 0F;
      slaveTimeout_ = 180;
      energyScanSec_ = 10F;
      energyTrackTime_ = 300F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getBaseURLBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getInputPathBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getOutputPathBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, sleepTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, slaveTimeout_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, energyScanSec_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeFloat(10, energyTrackTime_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getBaseURLBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getInputPathBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getOutputPathBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getUserNameBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, sleepTime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, slaveTimeout_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, energyScanSec_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, energyTrackTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.DSSwitchConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the Dragon Shadow RF switch resource.  These are populated
     * by ResourceDSSwitch.configureMessage() and from resources.xml.
     *
     * msgName: RFSWITCH_CONFIG, used to identify the message
     * IP: IP of the rf switch or hostname
     * slaveTimeout: Timeout in seconds
     * energyScanSec: Number of seconds to stay on each port when energy scanning
     * energyTrackTime: Number of seconds between energy tracks
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_DSSwitchConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_DSSwitchConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig.class, fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "DSSWITCH_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        baseURL_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        inputPath_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        outputPath_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        userName_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        sleepTime_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        slaveTimeout_ = 180;
        bitField0_ = (bitField0_ & ~0x00000080);
        energyScanSec_ = 10F;
        bitField0_ = (bitField0_ & ~0x00000100);
        energyTrackTime_ = 300F;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_DSSwitchConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig result = new fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.baseURL_ = baseURL_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.inputPath_ = inputPath_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.outputPath_ = outputPath_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.userName_ = userName_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.password_ = password_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.sleepTime_ = sleepTime_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.slaveTimeout_ = slaveTimeout_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.energyScanSec_ = energyScanSec_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.energyTrackTime_ = energyTrackTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasBaseURL()) {
          bitField0_ |= 0x00000002;
          baseURL_ = other.baseURL_;
          onChanged();
        }
        if (other.hasInputPath()) {
          bitField0_ |= 0x00000004;
          inputPath_ = other.inputPath_;
          onChanged();
        }
        if (other.hasOutputPath()) {
          bitField0_ |= 0x00000008;
          outputPath_ = other.outputPath_;
          onChanged();
        }
        if (other.hasUserName()) {
          bitField0_ |= 0x00000010;
          userName_ = other.userName_;
          onChanged();
        }
        if (other.hasPassword()) {
          bitField0_ |= 0x00000020;
          password_ = other.password_;
          onChanged();
        }
        if (other.hasSleepTime()) {
          setSleepTime(other.getSleepTime());
        }
        if (other.hasSlaveTimeout()) {
          setSlaveTimeout(other.getSlaveTimeout());
        }
        if (other.hasEnergyScanSec()) {
          setEnergyScanSec(other.getEnergyScanSec());
        }
        if (other.hasEnergyTrackTime()) {
          setEnergyTrackTime(other.getEnergyTrackTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.DSSwitchConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "DSSWITCH_CONFIG"];
      private java.lang.Object msgName_ = "DSSWITCH_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "DSSWITCH_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "DSSWITCH_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "DSSWITCH_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "DSSWITCH_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "DSSWITCH_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "DSSWITCH_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional string baseURL = 2;
      private java.lang.Object baseURL_ = "";
      /**
       * <code>optional string baseURL = 2;</code>
       */
      public boolean hasBaseURL() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string baseURL = 2;</code>
       */
      public java.lang.String getBaseURL() {
        java.lang.Object ref = baseURL_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          baseURL_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string baseURL = 2;</code>
       */
      public com.google.protobuf.ByteString
          getBaseURLBytes() {
        java.lang.Object ref = baseURL_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          baseURL_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string baseURL = 2;</code>
       */
      public Builder setBaseURL(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        baseURL_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string baseURL = 2;</code>
       */
      public Builder clearBaseURL() {
        bitField0_ = (bitField0_ & ~0x00000002);
        baseURL_ = getDefaultInstance().getBaseURL();
        onChanged();
        return this;
      }
      /**
       * <code>optional string baseURL = 2;</code>
       */
      public Builder setBaseURLBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        baseURL_ = value;
        onChanged();
        return this;
      }

      // optional string inputPath = 3;
      private java.lang.Object inputPath_ = "";
      /**
       * <code>optional string inputPath = 3;</code>
       */
      public boolean hasInputPath() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string inputPath = 3;</code>
       */
      public java.lang.String getInputPath() {
        java.lang.Object ref = inputPath_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          inputPath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string inputPath = 3;</code>
       */
      public com.google.protobuf.ByteString
          getInputPathBytes() {
        java.lang.Object ref = inputPath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          inputPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string inputPath = 3;</code>
       */
      public Builder setInputPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        inputPath_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string inputPath = 3;</code>
       */
      public Builder clearInputPath() {
        bitField0_ = (bitField0_ & ~0x00000004);
        inputPath_ = getDefaultInstance().getInputPath();
        onChanged();
        return this;
      }
      /**
       * <code>optional string inputPath = 3;</code>
       */
      public Builder setInputPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        inputPath_ = value;
        onChanged();
        return this;
      }

      // optional string outputPath = 4;
      private java.lang.Object outputPath_ = "";
      /**
       * <code>optional string outputPath = 4;</code>
       */
      public boolean hasOutputPath() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string outputPath = 4;</code>
       */
      public java.lang.String getOutputPath() {
        java.lang.Object ref = outputPath_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          outputPath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string outputPath = 4;</code>
       */
      public com.google.protobuf.ByteString
          getOutputPathBytes() {
        java.lang.Object ref = outputPath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          outputPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string outputPath = 4;</code>
       */
      public Builder setOutputPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        outputPath_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string outputPath = 4;</code>
       */
      public Builder clearOutputPath() {
        bitField0_ = (bitField0_ & ~0x00000008);
        outputPath_ = getDefaultInstance().getOutputPath();
        onChanged();
        return this;
      }
      /**
       * <code>optional string outputPath = 4;</code>
       */
      public Builder setOutputPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        outputPath_ = value;
        onChanged();
        return this;
      }

      // optional string userName = 5;
      private java.lang.Object userName_ = "";
      /**
       * <code>optional string userName = 5;</code>
       */
      public boolean hasUserName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string userName = 5;</code>
       */
      public java.lang.String getUserName() {
        java.lang.Object ref = userName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string userName = 5;</code>
       */
      public com.google.protobuf.ByteString
          getUserNameBytes() {
        java.lang.Object ref = userName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string userName = 5;</code>
       */
      public Builder setUserName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        userName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string userName = 5;</code>
       */
      public Builder clearUserName() {
        bitField0_ = (bitField0_ & ~0x00000010);
        userName_ = getDefaultInstance().getUserName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string userName = 5;</code>
       */
      public Builder setUserNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        userName_ = value;
        onChanged();
        return this;
      }

      // optional string password = 6;
      private java.lang.Object password_ = "";
      /**
       * <code>optional string password = 6;</code>
       */
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string password = 6;</code>
       */
      public java.lang.String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string password = 6;</code>
       */
      public com.google.protobuf.ByteString
          getPasswordBytes() {
        java.lang.Object ref = password_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          password_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string password = 6;</code>
       */
      public Builder setPassword(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        password_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 6;</code>
       */
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000020);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      /**
       * <code>optional string password = 6;</code>
       */
      public Builder setPasswordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        password_ = value;
        onChanged();
        return this;
      }

      // optional float sleepTime = 7;
      private float sleepTime_ ;
      /**
       * <code>optional float sleepTime = 7;</code>
       */
      public boolean hasSleepTime() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float sleepTime = 7;</code>
       */
      public float getSleepTime() {
        return sleepTime_;
      }
      /**
       * <code>optional float sleepTime = 7;</code>
       */
      public Builder setSleepTime(float value) {
        bitField0_ |= 0x00000040;
        sleepTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float sleepTime = 7;</code>
       */
      public Builder clearSleepTime() {
        bitField0_ = (bitField0_ & ~0x00000040);
        sleepTime_ = 0F;
        onChanged();
        return this;
      }

      // optional int32 slaveTimeout = 8 [default = 180];
      private int slaveTimeout_ = 180;
      /**
       * <code>optional int32 slaveTimeout = 8 [default = 180];</code>
       *
       * <pre>
       * 3 minutes
       * </pre>
       */
      public boolean hasSlaveTimeout() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 slaveTimeout = 8 [default = 180];</code>
       *
       * <pre>
       * 3 minutes
       * </pre>
       */
      public int getSlaveTimeout() {
        return slaveTimeout_;
      }
      /**
       * <code>optional int32 slaveTimeout = 8 [default = 180];</code>
       *
       * <pre>
       * 3 minutes
       * </pre>
       */
      public Builder setSlaveTimeout(int value) {
        bitField0_ |= 0x00000080;
        slaveTimeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 slaveTimeout = 8 [default = 180];</code>
       *
       * <pre>
       * 3 minutes
       * </pre>
       */
      public Builder clearSlaveTimeout() {
        bitField0_ = (bitField0_ & ~0x00000080);
        slaveTimeout_ = 180;
        onChanged();
        return this;
      }

      // optional float energyScanSec = 9 [default = 10];
      private float energyScanSec_ = 10F;
      /**
       * <code>optional float energyScanSec = 9 [default = 10];</code>
       */
      public boolean hasEnergyScanSec() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float energyScanSec = 9 [default = 10];</code>
       */
      public float getEnergyScanSec() {
        return energyScanSec_;
      }
      /**
       * <code>optional float energyScanSec = 9 [default = 10];</code>
       */
      public Builder setEnergyScanSec(float value) {
        bitField0_ |= 0x00000100;
        energyScanSec_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float energyScanSec = 9 [default = 10];</code>
       */
      public Builder clearEnergyScanSec() {
        bitField0_ = (bitField0_ & ~0x00000100);
        energyScanSec_ = 10F;
        onChanged();
        return this;
      }

      // optional float energyTrackTime = 10 [default = 300];
      private float energyTrackTime_ = 300F;
      /**
       * <code>optional float energyTrackTime = 10 [default = 300];</code>
       */
      public boolean hasEnergyTrackTime() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float energyTrackTime = 10 [default = 300];</code>
       */
      public float getEnergyTrackTime() {
        return energyTrackTime_;
      }
      /**
       * <code>optional float energyTrackTime = 10 [default = 300];</code>
       */
      public Builder setEnergyTrackTime(float value) {
        bitField0_ |= 0x00000200;
        energyTrackTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float energyTrackTime = 10 [default = 300];</code>
       */
      public Builder clearEnergyTrackTime() {
        bitField0_ = (bitField0_ & ~0x00000200);
        energyTrackTime_ = 300F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.DSSwitchConfig)
    }

    static {
      defaultInstance = new DSSwitchConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.DSSwitchConfig)
  }

  public interface DummyConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "DummyConfig"];
    /**
     * <code>optional string msgName = 1 [default = "DummyConfig"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "DummyConfig"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "DummyConfig"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional string message = 2;
    /**
     * <code>optional string message = 2;</code>
     */
    boolean hasMessage();
    /**
     * <code>optional string message = 2;</code>
     */
    java.lang.String getMessage();
    /**
     * <code>optional string message = 2;</code>
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code falcon_res_msg.DummyConfig}
   */
  public static final class DummyConfig extends
      com.google.protobuf.GeneratedMessage
      implements DummyConfigOrBuilder {
    // Use DummyConfig.newBuilder() to construct.
    private DummyConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DummyConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DummyConfig defaultInstance;
    public static DummyConfig getDefaultInstance() {
      return defaultInstance;
    }

    public DummyConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DummyConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              message_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_DummyConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_DummyConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.DummyConfig.class, fv.protos.kepsvisor.FalconResourceMessages.DummyConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<DummyConfig> PARSER =
        new com.google.protobuf.AbstractParser<DummyConfig>() {
      public DummyConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DummyConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DummyConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "DummyConfig"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "DummyConfig"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "DummyConfig"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "DummyConfig"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string message = 2;
    public static final int MESSAGE_FIELD_NUMBER = 2;
    private java.lang.Object message_;
    /**
     * <code>optional string message = 2;</code>
     */
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string message = 2;</code>
     */
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          message_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string message = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      msgName_ = "DummyConfig";
      message_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMessageBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMessageBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.DummyConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DummyConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DummyConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DummyConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DummyConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DummyConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DummyConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DummyConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DummyConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.DummyConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.DummyConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.DummyConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.DummyConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_DummyConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_DummyConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.DummyConfig.class, fv.protos.kepsvisor.FalconResourceMessages.DummyConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.DummyConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "DummyConfig";
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_DummyConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.DummyConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.DummyConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.DummyConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.DummyConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.DummyConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.DummyConfig result = new fv.protos.kepsvisor.FalconResourceMessages.DummyConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.message_ = message_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.DummyConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.DummyConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.DummyConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.DummyConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasMessage()) {
          bitField0_ |= 0x00000002;
          message_ = other.message_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.DummyConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.DummyConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "DummyConfig"];
      private java.lang.Object msgName_ = "DummyConfig";
      /**
       * <code>optional string msgName = 1 [default = "DummyConfig"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "DummyConfig"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "DummyConfig"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "DummyConfig"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "DummyConfig"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "DummyConfig"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional string message = 2;
      private java.lang.Object message_ = "";
      /**
       * <code>optional string message = 2;</code>
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        message_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string message = 2;</code>
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        message_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.DummyConfig)
    }

    static {
      defaultInstance = new DummyConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.DummyConfig)
  }

  public interface MMSXTConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "MMSXT_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "MMSXT_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "MMSXT_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "MMSXT_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional int32 transmitter = 2;
    /**
     * <code>optional int32 transmitter = 2;</code>
     */
    boolean hasTransmitter();
    /**
     * <code>optional int32 transmitter = 2;</code>
     */
    int getTransmitter();

    // optional string MMSXTCtrlIp = 3;
    /**
     * <code>optional string MMSXTCtrlIp = 3;</code>
     */
    boolean hasMMSXTCtrlIp();
    /**
     * <code>optional string MMSXTCtrlIp = 3;</code>
     */
    java.lang.String getMMSXTCtrlIp();
    /**
     * <code>optional string MMSXTCtrlIp = 3;</code>
     */
    com.google.protobuf.ByteString
        getMMSXTCtrlIpBytes();

    // optional int32 controlPort = 4 [default = 23];
    /**
     * <code>optional int32 controlPort = 4 [default = 23];</code>
     */
    boolean hasControlPort();
    /**
     * <code>optional int32 controlPort = 4 [default = 23];</code>
     */
    int getControlPort();

    // optional string MMSXTDataIp = 5;
    /**
     * <code>optional string MMSXTDataIp = 5;</code>
     */
    boolean hasMMSXTDataIp();
    /**
     * <code>optional string MMSXTDataIp = 5;</code>
     */
    java.lang.String getMMSXTDataIp();
    /**
     * <code>optional string MMSXTDataIp = 5;</code>
     */
    com.google.protobuf.ByteString
        getMMSXTDataIpBytes();

    // optional int32 dataPort = 6 [default = 49300];
    /**
     * <code>optional int32 dataPort = 6 [default = 49300];</code>
     */
    boolean hasDataPort();
    /**
     * <code>optional int32 dataPort = 6 [default = 49300];</code>
     */
    int getDataPort();

    // optional string uniqTXID = 7 [default = "999"];
    /**
     * <code>optional string uniqTXID = 7 [default = "999"];</code>
     */
    boolean hasUniqTXID();
    /**
     * <code>optional string uniqTXID = 7 [default = "999"];</code>
     */
    java.lang.String getUniqTXID();
    /**
     * <code>optional string uniqTXID = 7 [default = "999"];</code>
     */
    com.google.protobuf.ByteString
        getUniqTXIDBytes();

    // optional int32 txcuPort = 8 [default = -1];
    /**
     * <code>optional int32 txcuPort = 8 [default = -1];</code>
     */
    boolean hasTxcuPort();
    /**
     * <code>optional int32 txcuPort = 8 [default = -1];</code>
     */
    int getTxcuPort();

    // optional string txcuIP = 9 [default = ""];
    /**
     * <code>optional string txcuIP = 9 [default = ""];</code>
     */
    boolean hasTxcuIP();
    /**
     * <code>optional string txcuIP = 9 [default = ""];</code>
     */
    java.lang.String getTxcuIP();
    /**
     * <code>optional string txcuIP = 9 [default = ""];</code>
     */
    com.google.protobuf.ByteString
        getTxcuIPBytes();
  }
  /**
   * Protobuf type {@code falcon_res_msg.MMSXTConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the MMSXT resource.  These are populated
   * by ResourceMMSXT.configureMessage() and from resources.xml.
   *
   * msgName: MMSXT_CONFIG, used to identify the message
   * transmitter: Transmitter number to use
   * MMSXTCtrlIP: IP Address of MMS XT's 1G Ethernet
   * controlPort: Port number of the MMS XT's 1G Ethernet
   * MMSXTDataIP: IP Address of MMS XT's 10G Ethernet
   * dataPort: Port number of the MMS XT's 10G Ethernet
   * uniqTXID: Unique ID for this TX
   * txcuPort: Port number for communication with TXCU
   * txcuIP: IP for the TXCU
   * </pre>
   */
  public static final class MMSXTConfig extends
      com.google.protobuf.GeneratedMessage
      implements MMSXTConfigOrBuilder {
    // Use MMSXTConfig.newBuilder() to construct.
    private MMSXTConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MMSXTConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MMSXTConfig defaultInstance;
    public static MMSXTConfig getDefaultInstance() {
      return defaultInstance;
    }

    public MMSXTConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MMSXTConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              transmitter_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              mMSXTCtrlIp_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              controlPort_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              mMSXTDataIp_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              dataPort_ = input.readInt32();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              uniqTXID_ = input.readBytes();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              txcuPort_ = input.readInt32();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              txcuIP_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_MMSXTConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_MMSXTConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig.class, fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<MMSXTConfig> PARSER =
        new com.google.protobuf.AbstractParser<MMSXTConfig>() {
      public MMSXTConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MMSXTConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MMSXTConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "MMSXT_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "MMSXT_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "MMSXT_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "MMSXT_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 transmitter = 2;
    public static final int TRANSMITTER_FIELD_NUMBER = 2;
    private int transmitter_;
    /**
     * <code>optional int32 transmitter = 2;</code>
     */
    public boolean hasTransmitter() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 transmitter = 2;</code>
     */
    public int getTransmitter() {
      return transmitter_;
    }

    // optional string MMSXTCtrlIp = 3;
    public static final int MMSXTCTRLIP_FIELD_NUMBER = 3;
    private java.lang.Object mMSXTCtrlIp_;
    /**
     * <code>optional string MMSXTCtrlIp = 3;</code>
     */
    public boolean hasMMSXTCtrlIp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string MMSXTCtrlIp = 3;</code>
     */
    public java.lang.String getMMSXTCtrlIp() {
      java.lang.Object ref = mMSXTCtrlIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mMSXTCtrlIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MMSXTCtrlIp = 3;</code>
     */
    public com.google.protobuf.ByteString
        getMMSXTCtrlIpBytes() {
      java.lang.Object ref = mMSXTCtrlIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mMSXTCtrlIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 controlPort = 4 [default = 23];
    public static final int CONTROLPORT_FIELD_NUMBER = 4;
    private int controlPort_;
    /**
     * <code>optional int32 controlPort = 4 [default = 23];</code>
     */
    public boolean hasControlPort() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 controlPort = 4 [default = 23];</code>
     */
    public int getControlPort() {
      return controlPort_;
    }

    // optional string MMSXTDataIp = 5;
    public static final int MMSXTDATAIP_FIELD_NUMBER = 5;
    private java.lang.Object mMSXTDataIp_;
    /**
     * <code>optional string MMSXTDataIp = 5;</code>
     */
    public boolean hasMMSXTDataIp() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string MMSXTDataIp = 5;</code>
     */
    public java.lang.String getMMSXTDataIp() {
      java.lang.Object ref = mMSXTDataIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mMSXTDataIp_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string MMSXTDataIp = 5;</code>
     */
    public com.google.protobuf.ByteString
        getMMSXTDataIpBytes() {
      java.lang.Object ref = mMSXTDataIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mMSXTDataIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 dataPort = 6 [default = 49300];
    public static final int DATAPORT_FIELD_NUMBER = 6;
    private int dataPort_;
    /**
     * <code>optional int32 dataPort = 6 [default = 49300];</code>
     */
    public boolean hasDataPort() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 dataPort = 6 [default = 49300];</code>
     */
    public int getDataPort() {
      return dataPort_;
    }

    // optional string uniqTXID = 7 [default = "999"];
    public static final int UNIQTXID_FIELD_NUMBER = 7;
    private java.lang.Object uniqTXID_;
    /**
     * <code>optional string uniqTXID = 7 [default = "999"];</code>
     */
    public boolean hasUniqTXID() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string uniqTXID = 7 [default = "999"];</code>
     */
    public java.lang.String getUniqTXID() {
      java.lang.Object ref = uniqTXID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uniqTXID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string uniqTXID = 7 [default = "999"];</code>
     */
    public com.google.protobuf.ByteString
        getUniqTXIDBytes() {
      java.lang.Object ref = uniqTXID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uniqTXID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 txcuPort = 8 [default = -1];
    public static final int TXCUPORT_FIELD_NUMBER = 8;
    private int txcuPort_;
    /**
     * <code>optional int32 txcuPort = 8 [default = -1];</code>
     */
    public boolean hasTxcuPort() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 txcuPort = 8 [default = -1];</code>
     */
    public int getTxcuPort() {
      return txcuPort_;
    }

    // optional string txcuIP = 9 [default = ""];
    public static final int TXCUIP_FIELD_NUMBER = 9;
    private java.lang.Object txcuIP_;
    /**
     * <code>optional string txcuIP = 9 [default = ""];</code>
     */
    public boolean hasTxcuIP() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string txcuIP = 9 [default = ""];</code>
     */
    public java.lang.String getTxcuIP() {
      java.lang.Object ref = txcuIP_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          txcuIP_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string txcuIP = 9 [default = ""];</code>
     */
    public com.google.protobuf.ByteString
        getTxcuIPBytes() {
      java.lang.Object ref = txcuIP_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        txcuIP_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      msgName_ = "MMSXT_CONFIG";
      transmitter_ = 0;
      mMSXTCtrlIp_ = "";
      controlPort_ = 23;
      mMSXTDataIp_ = "";
      dataPort_ = 49300;
      uniqTXID_ = "999";
      txcuPort_ = -1;
      txcuIP_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, transmitter_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getMMSXTCtrlIpBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, controlPort_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getMMSXTDataIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, dataPort_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getUniqTXIDBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, txcuPort_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getTxcuIPBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, transmitter_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getMMSXTCtrlIpBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, controlPort_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getMMSXTDataIpBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, dataPort_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getUniqTXIDBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, txcuPort_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getTxcuIPBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.MMSXTConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the MMSXT resource.  These are populated
     * by ResourceMMSXT.configureMessage() and from resources.xml.
     *
     * msgName: MMSXT_CONFIG, used to identify the message
     * transmitter: Transmitter number to use
     * MMSXTCtrlIP: IP Address of MMS XT's 1G Ethernet
     * controlPort: Port number of the MMS XT's 1G Ethernet
     * MMSXTDataIP: IP Address of MMS XT's 10G Ethernet
     * dataPort: Port number of the MMS XT's 10G Ethernet
     * uniqTXID: Unique ID for this TX
     * txcuPort: Port number for communication with TXCU
     * txcuIP: IP for the TXCU
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_MMSXTConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_MMSXTConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig.class, fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "MMSXT_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        transmitter_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        mMSXTCtrlIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        controlPort_ = 23;
        bitField0_ = (bitField0_ & ~0x00000008);
        mMSXTDataIp_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        dataPort_ = 49300;
        bitField0_ = (bitField0_ & ~0x00000020);
        uniqTXID_ = "999";
        bitField0_ = (bitField0_ & ~0x00000040);
        txcuPort_ = -1;
        bitField0_ = (bitField0_ & ~0x00000080);
        txcuIP_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_MMSXTConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig result = new fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.transmitter_ = transmitter_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.mMSXTCtrlIp_ = mMSXTCtrlIp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.controlPort_ = controlPort_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.mMSXTDataIp_ = mMSXTDataIp_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.dataPort_ = dataPort_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.uniqTXID_ = uniqTXID_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.txcuPort_ = txcuPort_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.txcuIP_ = txcuIP_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasTransmitter()) {
          setTransmitter(other.getTransmitter());
        }
        if (other.hasMMSXTCtrlIp()) {
          bitField0_ |= 0x00000004;
          mMSXTCtrlIp_ = other.mMSXTCtrlIp_;
          onChanged();
        }
        if (other.hasControlPort()) {
          setControlPort(other.getControlPort());
        }
        if (other.hasMMSXTDataIp()) {
          bitField0_ |= 0x00000010;
          mMSXTDataIp_ = other.mMSXTDataIp_;
          onChanged();
        }
        if (other.hasDataPort()) {
          setDataPort(other.getDataPort());
        }
        if (other.hasUniqTXID()) {
          bitField0_ |= 0x00000040;
          uniqTXID_ = other.uniqTXID_;
          onChanged();
        }
        if (other.hasTxcuPort()) {
          setTxcuPort(other.getTxcuPort());
        }
        if (other.hasTxcuIP()) {
          bitField0_ |= 0x00000100;
          txcuIP_ = other.txcuIP_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.MMSXTConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "MMSXT_CONFIG"];
      private java.lang.Object msgName_ = "MMSXT_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "MMSXT_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "MMSXT_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "MMSXT_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "MMSXT_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "MMSXT_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "MMSXT_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional int32 transmitter = 2;
      private int transmitter_ ;
      /**
       * <code>optional int32 transmitter = 2;</code>
       */
      public boolean hasTransmitter() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 transmitter = 2;</code>
       */
      public int getTransmitter() {
        return transmitter_;
      }
      /**
       * <code>optional int32 transmitter = 2;</code>
       */
      public Builder setTransmitter(int value) {
        bitField0_ |= 0x00000002;
        transmitter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 transmitter = 2;</code>
       */
      public Builder clearTransmitter() {
        bitField0_ = (bitField0_ & ~0x00000002);
        transmitter_ = 0;
        onChanged();
        return this;
      }

      // optional string MMSXTCtrlIp = 3;
      private java.lang.Object mMSXTCtrlIp_ = "";
      /**
       * <code>optional string MMSXTCtrlIp = 3;</code>
       */
      public boolean hasMMSXTCtrlIp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string MMSXTCtrlIp = 3;</code>
       */
      public java.lang.String getMMSXTCtrlIp() {
        java.lang.Object ref = mMSXTCtrlIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          mMSXTCtrlIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MMSXTCtrlIp = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMMSXTCtrlIpBytes() {
        java.lang.Object ref = mMSXTCtrlIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mMSXTCtrlIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MMSXTCtrlIp = 3;</code>
       */
      public Builder setMMSXTCtrlIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        mMSXTCtrlIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MMSXTCtrlIp = 3;</code>
       */
      public Builder clearMMSXTCtrlIp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        mMSXTCtrlIp_ = getDefaultInstance().getMMSXTCtrlIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MMSXTCtrlIp = 3;</code>
       */
      public Builder setMMSXTCtrlIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        mMSXTCtrlIp_ = value;
        onChanged();
        return this;
      }

      // optional int32 controlPort = 4 [default = 23];
      private int controlPort_ = 23;
      /**
       * <code>optional int32 controlPort = 4 [default = 23];</code>
       */
      public boolean hasControlPort() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 controlPort = 4 [default = 23];</code>
       */
      public int getControlPort() {
        return controlPort_;
      }
      /**
       * <code>optional int32 controlPort = 4 [default = 23];</code>
       */
      public Builder setControlPort(int value) {
        bitField0_ |= 0x00000008;
        controlPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 controlPort = 4 [default = 23];</code>
       */
      public Builder clearControlPort() {
        bitField0_ = (bitField0_ & ~0x00000008);
        controlPort_ = 23;
        onChanged();
        return this;
      }

      // optional string MMSXTDataIp = 5;
      private java.lang.Object mMSXTDataIp_ = "";
      /**
       * <code>optional string MMSXTDataIp = 5;</code>
       */
      public boolean hasMMSXTDataIp() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string MMSXTDataIp = 5;</code>
       */
      public java.lang.String getMMSXTDataIp() {
        java.lang.Object ref = mMSXTDataIp_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          mMSXTDataIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string MMSXTDataIp = 5;</code>
       */
      public com.google.protobuf.ByteString
          getMMSXTDataIpBytes() {
        java.lang.Object ref = mMSXTDataIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mMSXTDataIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string MMSXTDataIp = 5;</code>
       */
      public Builder setMMSXTDataIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        mMSXTDataIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string MMSXTDataIp = 5;</code>
       */
      public Builder clearMMSXTDataIp() {
        bitField0_ = (bitField0_ & ~0x00000010);
        mMSXTDataIp_ = getDefaultInstance().getMMSXTDataIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string MMSXTDataIp = 5;</code>
       */
      public Builder setMMSXTDataIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        mMSXTDataIp_ = value;
        onChanged();
        return this;
      }

      // optional int32 dataPort = 6 [default = 49300];
      private int dataPort_ = 49300;
      /**
       * <code>optional int32 dataPort = 6 [default = 49300];</code>
       */
      public boolean hasDataPort() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 dataPort = 6 [default = 49300];</code>
       */
      public int getDataPort() {
        return dataPort_;
      }
      /**
       * <code>optional int32 dataPort = 6 [default = 49300];</code>
       */
      public Builder setDataPort(int value) {
        bitField0_ |= 0x00000020;
        dataPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dataPort = 6 [default = 49300];</code>
       */
      public Builder clearDataPort() {
        bitField0_ = (bitField0_ & ~0x00000020);
        dataPort_ = 49300;
        onChanged();
        return this;
      }

      // optional string uniqTXID = 7 [default = "999"];
      private java.lang.Object uniqTXID_ = "999";
      /**
       * <code>optional string uniqTXID = 7 [default = "999"];</code>
       */
      public boolean hasUniqTXID() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string uniqTXID = 7 [default = "999"];</code>
       */
      public java.lang.String getUniqTXID() {
        java.lang.Object ref = uniqTXID_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uniqTXID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string uniqTXID = 7 [default = "999"];</code>
       */
      public com.google.protobuf.ByteString
          getUniqTXIDBytes() {
        java.lang.Object ref = uniqTXID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uniqTXID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string uniqTXID = 7 [default = "999"];</code>
       */
      public Builder setUniqTXID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        uniqTXID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string uniqTXID = 7 [default = "999"];</code>
       */
      public Builder clearUniqTXID() {
        bitField0_ = (bitField0_ & ~0x00000040);
        uniqTXID_ = getDefaultInstance().getUniqTXID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string uniqTXID = 7 [default = "999"];</code>
       */
      public Builder setUniqTXIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        uniqTXID_ = value;
        onChanged();
        return this;
      }

      // optional int32 txcuPort = 8 [default = -1];
      private int txcuPort_ = -1;
      /**
       * <code>optional int32 txcuPort = 8 [default = -1];</code>
       */
      public boolean hasTxcuPort() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 txcuPort = 8 [default = -1];</code>
       */
      public int getTxcuPort() {
        return txcuPort_;
      }
      /**
       * <code>optional int32 txcuPort = 8 [default = -1];</code>
       */
      public Builder setTxcuPort(int value) {
        bitField0_ |= 0x00000080;
        txcuPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 txcuPort = 8 [default = -1];</code>
       */
      public Builder clearTxcuPort() {
        bitField0_ = (bitField0_ & ~0x00000080);
        txcuPort_ = -1;
        onChanged();
        return this;
      }

      // optional string txcuIP = 9 [default = ""];
      private java.lang.Object txcuIP_ = "";
      /**
       * <code>optional string txcuIP = 9 [default = ""];</code>
       */
      public boolean hasTxcuIP() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string txcuIP = 9 [default = ""];</code>
       */
      public java.lang.String getTxcuIP() {
        java.lang.Object ref = txcuIP_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          txcuIP_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string txcuIP = 9 [default = ""];</code>
       */
      public com.google.protobuf.ByteString
          getTxcuIPBytes() {
        java.lang.Object ref = txcuIP_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          txcuIP_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string txcuIP = 9 [default = ""];</code>
       */
      public Builder setTxcuIP(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        txcuIP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string txcuIP = 9 [default = ""];</code>
       */
      public Builder clearTxcuIP() {
        bitField0_ = (bitField0_ & ~0x00000100);
        txcuIP_ = getDefaultInstance().getTxcuIP();
        onChanged();
        return this;
      }
      /**
       * <code>optional string txcuIP = 9 [default = ""];</code>
       */
      public Builder setTxcuIPBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        txcuIP_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.MMSXTConfig)
    }

    static {
      defaultInstance = new MMSXTConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.MMSXTConfig)
  }

  public interface AmpConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "AMP_CONFIG"];
    /**
     * <code>optional string msgName = 1 [default = "AMP_CONFIG"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "AMP_CONFIG"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "AMP_CONFIG"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional string IP = 2 [default = "nportserver"];
    /**
     * <code>optional string IP = 2 [default = "nportserver"];</code>
     */
    boolean hasIP();
    /**
     * <code>optional string IP = 2 [default = "nportserver"];</code>
     */
    java.lang.String getIP();
    /**
     * <code>optional string IP = 2 [default = "nportserver"];</code>
     */
    com.google.protobuf.ByteString
        getIPBytes();

    // optional int32 port = 3 [default = 4012];
    /**
     * <code>optional int32 port = 3 [default = 4012];</code>
     */
    boolean hasPort();
    /**
     * <code>optional int32 port = 3 [default = 4012];</code>
     */
    int getPort();

    // optional bool hardware = 4;
    /**
     * <code>optional bool hardware = 4;</code>
     */
    boolean hasHardware();
    /**
     * <code>optional bool hardware = 4;</code>
     */
    boolean getHardware();

    // optional int32 init_atten = 5;
    /**
     * <code>optional int32 init_atten = 5;</code>
     */
    boolean hasInitAtten();
    /**
     * <code>optional int32 init_atten = 5;</code>
     */
    int getInitAtten();
  }
  /**
   * Protobuf type {@code falcon_res_msg.AmpConfig}
   *
   * <pre>
   *&#47;/
   * Configuration parameters to send the amp resource.  These are populated
   * by ResourceAmp.configureMessage() and from resources.xml.
   *
   * msgName: AMP_CONFIG, used to identify the message
   * IP: IP of the amp or hostname
   * port: port to connect to 
   * </pre>
   */
  public static final class AmpConfig extends
      com.google.protobuf.GeneratedMessage
      implements AmpConfigOrBuilder {
    // Use AmpConfig.newBuilder() to construct.
    private AmpConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AmpConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AmpConfig defaultInstance;
    public static AmpConfig getDefaultInstance() {
      return defaultInstance;
    }

    public AmpConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AmpConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              iP_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              port_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              hardware_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              initAtten_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_AmpConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_AmpConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconResourceMessages.AmpConfig.class, fv.protos.kepsvisor.FalconResourceMessages.AmpConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<AmpConfig> PARSER =
        new com.google.protobuf.AbstractParser<AmpConfig>() {
      public AmpConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AmpConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AmpConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "AMP_CONFIG"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "AMP_CONFIG"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "AMP_CONFIG"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "AMP_CONFIG"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string IP = 2 [default = "nportserver"];
    public static final int IP_FIELD_NUMBER = 2;
    private java.lang.Object iP_;
    /**
     * <code>optional string IP = 2 [default = "nportserver"];</code>
     */
    public boolean hasIP() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string IP = 2 [default = "nportserver"];</code>
     */
    public java.lang.String getIP() {
      java.lang.Object ref = iP_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          iP_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string IP = 2 [default = "nportserver"];</code>
     */
    public com.google.protobuf.ByteString
        getIPBytes() {
      java.lang.Object ref = iP_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        iP_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 port = 3 [default = 4012];
    public static final int PORT_FIELD_NUMBER = 3;
    private int port_;
    /**
     * <code>optional int32 port = 3 [default = 4012];</code>
     */
    public boolean hasPort() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 port = 3 [default = 4012];</code>
     */
    public int getPort() {
      return port_;
    }

    // optional bool hardware = 4;
    public static final int HARDWARE_FIELD_NUMBER = 4;
    private boolean hardware_;
    /**
     * <code>optional bool hardware = 4;</code>
     */
    public boolean hasHardware() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool hardware = 4;</code>
     */
    public boolean getHardware() {
      return hardware_;
    }

    // optional int32 init_atten = 5;
    public static final int INIT_ATTEN_FIELD_NUMBER = 5;
    private int initAtten_;
    /**
     * <code>optional int32 init_atten = 5;</code>
     */
    public boolean hasInitAtten() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 init_atten = 5;</code>
     */
    public int getInitAtten() {
      return initAtten_;
    }

    private void initFields() {
      msgName_ = "AMP_CONFIG";
      iP_ = "nportserver";
      port_ = 4012;
      hardware_ = false;
      initAtten_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIPBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, port_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, hardware_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, initAtten_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIPBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, port_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, hardware_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, initAtten_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconResourceMessages.AmpConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.AmpConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.AmpConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.AmpConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.AmpConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.AmpConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.AmpConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.AmpConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.AmpConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconResourceMessages.AmpConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconResourceMessages.AmpConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_res_msg.AmpConfig}
     *
     * <pre>
     *&#47;/
     * Configuration parameters to send the amp resource.  These are populated
     * by ResourceAmp.configureMessage() and from resources.xml.
     *
     * msgName: AMP_CONFIG, used to identify the message
     * IP: IP of the amp or hostname
     * port: port to connect to 
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconResourceMessages.AmpConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_AmpConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_AmpConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconResourceMessages.AmpConfig.class, fv.protos.kepsvisor.FalconResourceMessages.AmpConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconResourceMessages.AmpConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "AMP_CONFIG";
        bitField0_ = (bitField0_ & ~0x00000001);
        iP_ = "nportserver";
        bitField0_ = (bitField0_ & ~0x00000002);
        port_ = 4012;
        bitField0_ = (bitField0_ & ~0x00000004);
        hardware_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        initAtten_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.internal_static_falcon_res_msg_AmpConfig_descriptor;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.AmpConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconResourceMessages.AmpConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconResourceMessages.AmpConfig build() {
        fv.protos.kepsvisor.FalconResourceMessages.AmpConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconResourceMessages.AmpConfig buildPartial() {
        fv.protos.kepsvisor.FalconResourceMessages.AmpConfig result = new fv.protos.kepsvisor.FalconResourceMessages.AmpConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.iP_ = iP_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.hardware_ = hardware_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.initAtten_ = initAtten_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconResourceMessages.AmpConfig) {
          return mergeFrom((fv.protos.kepsvisor.FalconResourceMessages.AmpConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconResourceMessages.AmpConfig other) {
        if (other == fv.protos.kepsvisor.FalconResourceMessages.AmpConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasIP()) {
          bitField0_ |= 0x00000002;
          iP_ = other.iP_;
          onChanged();
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasHardware()) {
          setHardware(other.getHardware());
        }
        if (other.hasInitAtten()) {
          setInitAtten(other.getInitAtten());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconResourceMessages.AmpConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconResourceMessages.AmpConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "AMP_CONFIG"];
      private java.lang.Object msgName_ = "AMP_CONFIG";
      /**
       * <code>optional string msgName = 1 [default = "AMP_CONFIG"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "AMP_CONFIG"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "AMP_CONFIG"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "AMP_CONFIG"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "AMP_CONFIG"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "AMP_CONFIG"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional string IP = 2 [default = "nportserver"];
      private java.lang.Object iP_ = "nportserver";
      /**
       * <code>optional string IP = 2 [default = "nportserver"];</code>
       */
      public boolean hasIP() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string IP = 2 [default = "nportserver"];</code>
       */
      public java.lang.String getIP() {
        java.lang.Object ref = iP_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          iP_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string IP = 2 [default = "nportserver"];</code>
       */
      public com.google.protobuf.ByteString
          getIPBytes() {
        java.lang.Object ref = iP_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          iP_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string IP = 2 [default = "nportserver"];</code>
       */
      public Builder setIP(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string IP = 2 [default = "nportserver"];</code>
       */
      public Builder clearIP() {
        bitField0_ = (bitField0_ & ~0x00000002);
        iP_ = getDefaultInstance().getIP();
        onChanged();
        return this;
      }
      /**
       * <code>optional string IP = 2 [default = "nportserver"];</code>
       */
      public Builder setIPBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        iP_ = value;
        onChanged();
        return this;
      }

      // optional int32 port = 3 [default = 4012];
      private int port_ = 4012;
      /**
       * <code>optional int32 port = 3 [default = 4012];</code>
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 port = 3 [default = 4012];</code>
       */
      public int getPort() {
        return port_;
      }
      /**
       * <code>optional int32 port = 3 [default = 4012];</code>
       */
      public Builder setPort(int value) {
        bitField0_ |= 0x00000004;
        port_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 port = 3 [default = 4012];</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000004);
        port_ = 4012;
        onChanged();
        return this;
      }

      // optional bool hardware = 4;
      private boolean hardware_ ;
      /**
       * <code>optional bool hardware = 4;</code>
       */
      public boolean hasHardware() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool hardware = 4;</code>
       */
      public boolean getHardware() {
        return hardware_;
      }
      /**
       * <code>optional bool hardware = 4;</code>
       */
      public Builder setHardware(boolean value) {
        bitField0_ |= 0x00000008;
        hardware_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hardware = 4;</code>
       */
      public Builder clearHardware() {
        bitField0_ = (bitField0_ & ~0x00000008);
        hardware_ = false;
        onChanged();
        return this;
      }

      // optional int32 init_atten = 5;
      private int initAtten_ ;
      /**
       * <code>optional int32 init_atten = 5;</code>
       */
      public boolean hasInitAtten() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 init_atten = 5;</code>
       */
      public int getInitAtten() {
        return initAtten_;
      }
      /**
       * <code>optional int32 init_atten = 5;</code>
       */
      public Builder setInitAtten(int value) {
        bitField0_ |= 0x00000010;
        initAtten_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 init_atten = 5;</code>
       */
      public Builder clearInitAtten() {
        bitField0_ = (bitField0_ & ~0x00000010);
        initAtten_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_res_msg.AmpConfig)
    }

    static {
      defaultInstance = new AmpConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_res_msg.AmpConfig)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_DummyRcvConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_DummyRcvConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_PICConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_PICConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_MMSConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_MMSConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_ZACQConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_ZACQConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_USRPRxTxConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_USRPRxTxConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_EPIQRxTxConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_EPIQRxTxConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_RTLSDRConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_RTLSDRConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_USRPRxConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_USRPRxConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_PentekConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_PentekConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_USRPTxConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_USRPTxConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_RFSwitchConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_RFSwitchConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_RFSwitchSerialConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_RFSwitchSerialConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_CPSwitchConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_CPSwitchConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_AntennaConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_AntennaConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_RotorRPMConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_RotorRPMConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_RotorProtatorConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_RotorProtatorConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_RotorProsistelConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_RotorProsistelConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_RotorEzrotorConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_RotorEzrotorConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_RotorHGIOConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_RotorHGIOConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_RotorESAConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_RotorESAConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_DSSwitchConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_DSSwitchConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_DummyConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_DummyConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_MMSXTConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_MMSXTConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_res_msg_AmpConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_res_msg_AmpConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\034FalconResourceMessages.proto\022\016falcon_r" +
      "es_msg\"\352\001\n\016DummyRcvConfig\022 \n\007msgName\030\001 \001" +
      "(\t:\017DUMMYRCV_CONFIG\022\017\n\007channel\030\002 \001(\005\022\017\n\007" +
      "baseAux\030\003 \001(\005\022\n\n\002rx\030\004 \001(\t\022\023\n\004host\030\005 \001(\t:" +
      "\005local\022\021\n\002fs\030\006 \001(\002:\0051e+08\022\024\n\005minRF\030\007 \001(\002" +
      ":\0052e+07\022\024\n\005maxRF\030\010 \001(\002:\0053e+09\022\025\n\010uniqRXI" +
      "D\030\t \001(\t:\003999\022\014\n\004pair\030\n \001(\005\022\017\n\007testDur\030\013 " +
      "\001(\005\"\220\002\n\tPICConfig\022\033\n\007msgName\030\001 \001(\t:\nPIC_" +
      "CONFIG\022\017\n\007channel\030\002 \001(\005\022\017\n\007baseAux\030\003 \001(\005" +
      "\022\n\n\002rx\030\004 \001(\t\022\013\n\003pic\030\005 \001(\t\022\020\n\010picflags\030\006 ",
      "\001(\t\022\017\n\007picside\030\007 \001(\t\022\023\n\004host\030\010 \001(\t:\005loca" +
      "l\022\021\n\002fs\030\t \001(\002:\0051e+08\022\024\n\005minRF\030\n \001(\002:\0052e+" +
      "07\022\024\n\005maxRF\030\013 \001(\002:\0053e+09\022\025\n\010uniqRXID\030\014 \001" +
      "(\t:\003999\022\014\n\004pair\030\r \001(\005\022\017\n\007testDur\030\016 \001(\005\"\226" +
      "\003\n\tMMSConfig\022\033\n\007msgName\030\001 \001(\t:\nMMS_CONFI" +
      "G\022\017\n\007channel\030\002 \001(\005\022\017\n\007baseAux\030\003 \001(\005\022\n\n\002I" +
      "P\030\004 \001(\t\022\023\n\013controlPort\030\005 \001(\005\022\020\n\010dataPort" +
      "\030\006 \001(\005\022\023\n\013interfaceIP\030\007 \001(\t\022\020\n\010receiver\030" +
      "\010 \001(\005\022\023\n\004host\030\t \001(\t:\005local\022\021\n\002fs\030\n \001(\002:\005" +
      "1e+08\022\024\n\005minRF\030\013 \001(\002:\0052e+07\022\024\n\005maxRF\030\014 \001",
      "(\002:\0053e+09\022\037\n\010cal30abw\030\r \001(\t:\rmms_30abw.c" +
      "sv\022\035\n\007cal5abw\030\016 \001(\t:\014mms_5abw.csv\022\025\n\010uni" +
      "qRXID\030\017 \001(\t:\003999\022\014\n\004pair\030\020 \001(\005\022\017\n\007testDu" +
      "r\030\021 \001(\005\022\024\n\010rfcuPort\030\022 \001(\005:\002-1\022\020\n\006rfcuIP\030" +
      "\023 \001(\t:\000\"\366\001\n\nZACQConfig\022\034\n\007msgName\030\001 \001(\t:" +
      "\013ZACQ_CONFIG\022\017\n\007channel\030\002 \001(\005\022\017\n\007baseAux" +
      "\030\003 \001(\005\022\n\n\002rx\030\004 \001(\t\022\023\n\004host\030\005 \001(\t:\005local\022" +
      "\021\n\002fs\030\006 \001(\002:\0051e+08\022\024\n\005minRF\030\007 \001(\002:\0052e+07" +
      "\022\024\n\005maxRF\030\010 \001(\002:\0053e+09\022\025\n\010uniqRXID\030\t \001(\t" +
      ":\003999\022\014\n\004pair\030\n \001(\005\022\017\n\007testDur\030\013 \001(\005\022\022\n\n",
      "initScript\030\014 \001(\t\"\276\001\n\016USRPRxTxConfig\022!\n\007m" +
      "sgName\030\001 \001(\t:\020USRP_RXTX_CONFIG\022\017\n\007channe" +
      "l\030\002 \001(\005\022\017\n\007baseAux\030\003 \001(\005\022\037\n\004args\030\004 \001(\t:\021" +
      "addr=192.168.10.2\022\r\n\005minRF\030\005 \001(\002\022\r\n\005maxR" +
      "F\030\006 \001(\002\022\021\n\002fs\030\007 \001(\002:\0051e+08\022\025\n\010uniqRXID\030\010" +
      " \001(\t:\003999\"\210\002\n\016EPIQRxTxConfig\022!\n\007msgName\030" +
      "\001 \001(\t:\020EPIQ_RXTX_CONFIG\022\017\n\007channel\030\002 \001(\005" +
      "\022\017\n\007baseAux\030\003 \001(\005\022\023\n\013controlPort\030\004 \001(\005\022\016" +
      "\n\006rfPort\030\005 \001(\005\022\023\n\004host\030\006 \001(\t:\005local\022\r\n\005m" +
      "inRF\030\007 \001(\002\022\r\n\005maxRF\030\010 \001(\002\022\023\n\002fs\030\t \001(\002:\0072",
      ".5e+07\022\025\n\010uniqRXID\030\n \001(\t:\003999\022\025\n\010uniqTXI" +
      "D\030\013 \001(\t:\003999\022\026\n\ndelayReset\030\014 \001(\002:\002-1\"\306\001\n" +
      "\014RTLSDRConfig\022\036\n\007msgName\030\001 \001(\t:\rRTLSDR_C" +
      "ONFIG\022\017\n\007channel\030\002 \001(\005\022\017\n\007baseAux\030\003 \001(\005\022" +
      "\023\n\013controlPort\030\004 \001(\005\022\023\n\004host\030\005 \001(\t:\005loca" +
      "l\022\r\n\005minRF\030\006 \001(\002\022\r\n\005maxRF\030\007 \001(\002\022\025\n\002fs\030\010 " +
      "\001(\002:\t2.048e+06\022\025\n\010uniqRXID\030\t \001(\t:\003999\"\265\001" +
      "\n\014USRPRxConfig\022\037\n\007msgName\030\001 \001(\t:\016USRP_RX" +
      "_CONFIG\022\017\n\007channel\030\002 \001(\005\022\017\n\007baseAux\030\003 \001(" +
      "\005\022\037\n\004args\030\004 \001(\t:\021addr=192.168.10.2\022\020\n\010us",
      "rpchan\030\005 \001(\005\022\r\n\005minRF\030\006 \001(\002\022\r\n\005maxRF\030\007 \001" +
      "(\002\022\021\n\002fs\030\010 \001(\002:\0051e+08\"\302\002\n\014PentekConfig\022\036" +
      "\n\007msgName\030\001 \001(\t:\rPENTEK_CONFIG\022\026\n\007clkFre" +
      "q\030\002 \001(\002:\0054e+08\022\025\n\tdacInterp\030\003 \001(\005:\00216\022\025\n" +
      "\ncoreInterp\030\004 \001(\005:\0011\022\023\n\010baseChan\030\005 \001(\005:\001" +
      "1\022\025\n\nnumBuffers\030\006 \001(\005:\0012\022\024\n\tfreqShift\030\007 " +
      "\001(\002:\0010\022\020\n\010siggenIP\030\010 \001(\t\022J\n\nsiggenType\030\t" +
      " \001(\0162\'.falcon_res_msg.PentekConfig.Sigge" +
      "nType:\rROHDE_SCHWARZ\",\n\nSiggenType\022\021\n\rRO" +
      "HDE_SCHWARZ\020\000\022\013\n\007MMS_MUP\020\001\"\200\001\n\014USRPTxCon",
      "fig\022\037\n\007msgName\030\001 \001(\t:\016USRP_TX_CONFIG\022\037\n\004" +
      "args\030\002 \001(\t:\021addr=192.168.10.2\022\020\n\010usrpcha" +
      "n\030\003 \001(\005\022\r\n\005minRF\030\004 \001(\002\022\r\n\005maxRF\030\005 \001(\002\"\317\001" +
      "\n\016RFSwitchConfig\022 \n\007msgName\030\001 \001(\t:\017RFSWI" +
      "TCH_CONFIG\022\027\n\002IP\030\002 \001(\t:\013nportserver\022\031\n\014s" +
      "laveTimeout\030\003 \001(\005:\003180\022\031\n\renergyScanSec\030" +
      "\004 \001(\002:\00210\022\034\n\017energyTrackTime\030\005 \001(\002:\003300\022" +
      "\022\n\004port\030\006 \001(\005:\0044003\022\032\n\013setOnLaunch\030\007 \001(\010" +
      ":\005false\"\303\001\n\024RFSwitchSerialConfig\022\'\n\007msgN" +
      "ame\030\001 \001(\t:\026RFSWITCH_SERIAL_CONFIG\022\032\n\006dev",
      "ice\030\002 \001(\t:\n/dev/ttyS0\022\022\n\004baud\030\003 \001(\005:\004960" +
      "0\022\031\n\014slaveTimeout\030\004 \001(\005:\003180\022\031\n\renergySc" +
      "anSec\030\005 \001(\002:\00210\022\034\n\017energyTrackTime\030\006 \001(\002" +
      ":\003300\"\244\001\n\016CPSwitchConfig\022 \n\007msgName\030\001 \001(" +
      "\t:\017CPSWITCH_CONFIG\022\n\n\002IP\030\002 \001(\t\022\020\n\004port\030\003" +
      " \001(\005:\00223\022\031\n\014slaveTimeout\030\004 \001(\005:\003180\022\031\n\re" +
      "nergyScanSec\030\005 \001(\002:\00210\022\034\n\017energyTrackTim" +
      "e\030\006 \001(\002:\003300\"\320\002\n\rAntennaConfig\022\037\n\007msgNam" +
      "e\030\001 \001(\t:\016ANTENNA_CONFIG\022\r\n\005minRF\030\002 \001(\002\022\r" +
      "\n\005maxRF\030\003 \001(\002\022\030\n\nfixedAngle\030\004 \001(\002:\004-999\022",
      "\023\n\010latitude\030\005 \001(\002:\0010\022\024\n\tlongitude\030\006 \001(\002:" +
      "\0010\022\023\n\010altitude\030\007 \001(\002:\0010\022\024\n\tbeamwidth\030\010 \001" +
      "(\002:\0010\022\024\n\tdwncnvtLO\030\t \001(\002:\0010\022\017\n\003ssc\030\n \001(\005" +
      ":\002-1\022\014\n\004band\030\013 \001(\t\022\024\n\014polarization\030\014 \001(\t" +
      "\022\r\n\005group\030\r \001(\005\022\032\n\rsightDistance\030\016 \001(\002:\003" +
      "500\022\032\n\tnoiseTest\030\017 \001(\t:\007NO_TEST\"\345\004\n\016Roto" +
      "rRPMConfig\022!\n\007msgName\030\001 \001(\t:\020ROTOR_RPM_C" +
      "ONFIG\022\n\n\002IP\030\002 \001(\t\022\014\n\004port\030\003 \001(\005\022\020\n\010AzOff" +
      "set\030\004 \001(\002\022\020\n\010ElOffset\030\005 \001(\002\022\021\n\thardLimit" +
      "\030\006 \001(\010\022\024\n\014minScanAngle\030\007 \001(\002\022\024\n\014maxScanA",
      "ngle\030\010 \001(\002\022\024\n\014minElevation\030\t \001(\002\022\024\n\014maxE" +
      "levation\030\n \001(\002\022\025\n\rscanElevation\030\013 \001(\002\022\025\n" +
      "\rmulticastRate\030\014 \001(\002\022\032\n\022pointHoldIncreme" +
      "nt\030\r \001(\002\022\032\n\017energyScanSpeed\030\016 \001(\002:\0014\022\033\n\016" +
      "startDeviation\030\017 \001(\002:\003180\022\033\n\017energyTrack" +
      "Time\030\020 \001(\002:\00230\022\030\n\nscanScrypt\030\021 \001(\t:\004NONE" +
      "\022\026\n\tgpsServer\030\022 \001(\t:\003OFF\022\025\n\tgpsUpdate\030\023 " +
      "\001(\t:\002ON\022\031\n\nelDisabled\030\024 \001(\010:\005false\022\027\n\010in" +
      "vertAz\030\025 \001(\010:\005false\022\027\n\013maxVelocity\030\026 \001(\002" +
      ":\00210\022\031\n\ndynamicVel\030\027 \001(\010:\005false\022\032\n\013slewE",
      "nabled\030\030 \001(\010:\005false\022\032\n\razCloseEnough\030\031 \001" +
      "(\002:\0030.5\"\260\003\n\023RotorProtatorConfig\022&\n\007msgNa" +
      "me\030\001 \001(\t:\025ROTOR_PROTATOR_CONFIG\022\n\n\002IP\030\002 " +
      "\001(\t\022\014\n\004port\030\003 \001(\005\022\020\n\010AzOffset\030\004 \001(\002\022\021\n\th" +
      "ardLimit\030\005 \001(\010\022\024\n\014minScanAngle\030\006 \001(\002\022\024\n\014" +
      "maxScanAngle\030\007 \001(\002\022\025\n\rmulticastRate\030\010 \001(" +
      "\002\022\032\n\022pointHoldIncrement\030\t \001(\002\022\033\n\017energyS" +
      "canSpeed\030\n \001(\002:\00220\022\033\n\016startDeviation\030\013 \001" +
      "(\002:\003180\022\034\n\017energyTrackTime\030\014 \001(\002:\003500\022\030\n" +
      "\nscanScrypt\030\r \001(\t:\004NONE\022\026\n\tgpsServer\030\016 \001",
      "(\t:\003OFF\022\025\n\tgpsUpdate\030\017 \001(\t:\002ON\022\030\n\razClos" +
      "eEnough\030\020 \001(\002:\0015\022\030\n\nelDisabled\030\021 \001(\010:\004tr" +
      "ue\"\263\003\n\024RotorProsistelConfig\022\'\n\007msgName\030\001" +
      " \001(\t:\026ROTOR_PROSISTEL_CONFIG\022\n\n\002IP\030\002 \001(\t" +
      "\022\014\n\004port\030\003 \001(\005\022\020\n\010AzOffset\030\004 \001(\002\022\021\n\thard" +
      "Limit\030\005 \001(\010\022\024\n\014minScanAngle\030\006 \001(\002\022\024\n\014max" +
      "ScanAngle\030\007 \001(\002\022\025\n\rmulticastRate\030\010 \001(\002\022\032" +
      "\n\022pointHoldIncrement\030\t \001(\002\022\033\n\017energyScan" +
      "Speed\030\n \001(\002:\00220\022\033\n\016startDeviation\030\013 \001(\002:" +
      "\003180\022\034\n\017energyTrackTime\030\014 \001(\002:\003500\022\030\n\nsc",
      "anScrypt\030\r \001(\t:\004NONE\022\026\n\tgpsServer\030\016 \001(\t:" +
      "\003OFF\022\025\n\tgpsUpdate\030\017 \001(\t:\002ON\022\030\n\razCloseEn" +
      "ough\030\020 \001(\002:\0015\022\031\n\nelDisabled\030\021 \001(\010:\005false" +
      "\"\251\003\n\022RotorEzrotorConfig\022\037\n\007msgName\030\001 \001(\t" +
      ":\016EZROTOR_CONFIG\022\n\n\002IP\030\002 \001(\t\022\014\n\004port\030\003 \001" +
      "(\005\022\020\n\010AzOffset\030\004 \001(\002\022\021\n\thardLimit\030\005 \001(\010\022" +
      "\024\n\014minScanAngle\030\006 \001(\002\022\024\n\014maxScanAngle\030\007 " +
      "\001(\002\022\025\n\rmulticastRate\030\010 \001(\002\022\032\n\022pointHoldI" +
      "ncrement\030\t \001(\002\022\033\n\017energyScanSpeed\030\n \001(\002:" +
      "\00220\022\033\n\016startDeviation\030\013 \001(\002:\003180\022\034\n\017ener",
      "gyTrackTime\030\014 \001(\002:\003500\022\030\n\nscanScrypt\030\r \001" +
      "(\t:\004NONE\022\026\n\tgpsServer\030\016 \001(\t:\003OFF\022\025\n\tgpsU" +
      "pdate\030\017 \001(\t:\002ON\022\030\n\razCloseEnough\030\020 \001(\002:\001" +
      "5\022\031\n\nelDisabled\030\021 \001(\010:\005false\"\241\004\n\017RotorHG" +
      "IOConfig\022\034\n\007msgName\030\001 \001(\t:\013HGIO_CONFIG\022\n" +
      "\n\002IP\030\002 \001(\t\022\014\n\004port\030\003 \001(\005\022\020\n\010AzOffset\030\004 \001" +
      "(\002\022\030\n\thardLimit\030\005 \001(\010:\005false\022\024\n\014minScanA" +
      "ngle\030\006 \001(\002\022\024\n\014maxScanAngle\030\007 \001(\002\022\024\n\014minE" +
      "levation\030\010 \001(\002\022\024\n\014maxElevation\030\t \001(\002\022\025\n\r" +
      "scanElevation\030\n \001(\002\022\025\n\rmulticastRate\030\013 \001",
      "(\002\022\032\n\022pointHoldIncrement\030\014 \001(\002\022\032\n\017energy" +
      "ScanSpeed\030\r \001(\002:\0015\022\033\n\016startDeviation\030\016 \001" +
      "(\002:\003180\022\034\n\017energyTrackTime\030\017 \001(\002:\003500\022\025\n" +
      "\006useGps\030\020 \001(\010:\005false\022\030\n\nscanScrypt\030\021 \001(\t" +
      ":\004NONE\022\026\n\tgpsServer\030\022 \001(\t:\003OFF\022\025\n\tgpsUpd" +
      "ate\030\023 \001(\t:\002ON\022\032\n\razCloseEnough\030\024 \001(\002:\0030." +
      "5\022\031\n\nelDisabled\030\025 \001(\010:\005false\022\032\n\013slewEnab" +
      "led\030\026 \001(\010:\005false\"\340\002\n\016RotorESAConfig\022!\n\007m" +
      "sgName\030\001 \001(\t:\020ROTOR_ESA_CONFIG\022\n\n\002IP\030\002 \001" +
      "(\t\022\014\n\004port\030\003 \001(\005\022\020\n\010AzOffset\030\004 \001(\002\022\021\n\tha",
      "rdLimit\030\005 \001(\010\022\024\n\014minScanAngle\030\006 \001(\002\022\024\n\014m" +
      "axScanAngle\030\007 \001(\002\022\032\n\022pointHoldIncrement\030" +
      "\010 \001(\002\022\032\n\017energyScanSpeed\030\t \001(\002:\0014\022\033\n\016sta" +
      "rtDeviation\030\n \001(\002:\003180\022\033\n\017energyTrackTim" +
      "e\030\013 \001(\002:\00220\022\030\n\nscanScrypt\030\014 \001(\t:\004NONE\022\032\n" +
      "\razCloseEnough\030\r \001(\002:\0030.5\022\030\n\nelDisabled\030" +
      "\016 \001(\010:\004true\"\365\001\n\016DSSwitchConfig\022 \n\007msgNam" +
      "e\030\001 \001(\t:\017DSSWITCH_CONFIG\022\017\n\007baseURL\030\002 \001(" +
      "\t\022\021\n\tinputPath\030\003 \001(\t\022\022\n\noutputPath\030\004 \001(\t" +
      "\022\020\n\010userName\030\005 \001(\t\022\020\n\010password\030\006 \001(\t\022\021\n\t",
      "sleepTime\030\007 \001(\002\022\031\n\014slaveTimeout\030\010 \001(\005:\0031" +
      "80\022\031\n\renergyScanSec\030\t \001(\002:\00210\022\034\n\017energyT" +
      "rackTime\030\n \001(\002:\003300\"<\n\013DummyConfig\022\034\n\007ms" +
      "gName\030\001 \001(\t:\013DummyConfig\022\017\n\007message\030\002 \001(" +
      "\t\"\334\001\n\013MMSXTConfig\022\035\n\007msgName\030\001 \001(\t:\014MMSX" +
      "T_CONFIG\022\023\n\013transmitter\030\002 \001(\005\022\023\n\013MMSXTCt" +
      "rlIp\030\003 \001(\t\022\027\n\013controlPort\030\004 \001(\005:\00223\022\023\n\013M" +
      "MSXTDataIp\030\005 \001(\t\022\027\n\010dataPort\030\006 \001(\005:\0054930" +
      "0\022\025\n\010uniqTXID\030\007 \001(\t:\003999\022\024\n\010txcuPort\030\010 \001" +
      "(\005:\002-1\022\020\n\006txcuIP\030\t \001(\t:\000\"{\n\tAmpConfig\022\033\n",
      "\007msgName\030\001 \001(\t:\nAMP_CONFIG\022\027\n\002IP\030\002 \001(\t:\013" +
      "nportserver\022\022\n\004port\030\003 \001(\005:\0044012\022\020\n\010hardw" +
      "are\030\004 \001(\010\022\022\n\ninit_atten\030\005 \001(\005B\025\n\023fv.prot" +
      "os.kepsvisor"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_falcon_res_msg_DummyRcvConfig_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_falcon_res_msg_DummyRcvConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_DummyRcvConfig_descriptor,
              new java.lang.String[] { "MsgName", "Channel", "BaseAux", "Rx", "Host", "Fs", "MinRF", "MaxRF", "UniqRXID", "Pair", "TestDur", });
          internal_static_falcon_res_msg_PICConfig_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_falcon_res_msg_PICConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_PICConfig_descriptor,
              new java.lang.String[] { "MsgName", "Channel", "BaseAux", "Rx", "Pic", "Picflags", "Picside", "Host", "Fs", "MinRF", "MaxRF", "UniqRXID", "Pair", "TestDur", });
          internal_static_falcon_res_msg_MMSConfig_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_falcon_res_msg_MMSConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_MMSConfig_descriptor,
              new java.lang.String[] { "MsgName", "Channel", "BaseAux", "IP", "ControlPort", "DataPort", "InterfaceIP", "Receiver", "Host", "Fs", "MinRF", "MaxRF", "Cal30Abw", "Cal5Abw", "UniqRXID", "Pair", "TestDur", "RfcuPort", "RfcuIP", });
          internal_static_falcon_res_msg_ZACQConfig_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_falcon_res_msg_ZACQConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_ZACQConfig_descriptor,
              new java.lang.String[] { "MsgName", "Channel", "BaseAux", "Rx", "Host", "Fs", "MinRF", "MaxRF", "UniqRXID", "Pair", "TestDur", "InitScript", });
          internal_static_falcon_res_msg_USRPRxTxConfig_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_falcon_res_msg_USRPRxTxConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_USRPRxTxConfig_descriptor,
              new java.lang.String[] { "MsgName", "Channel", "BaseAux", "Args", "MinRF", "MaxRF", "Fs", "UniqRXID", });
          internal_static_falcon_res_msg_EPIQRxTxConfig_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_falcon_res_msg_EPIQRxTxConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_EPIQRxTxConfig_descriptor,
              new java.lang.String[] { "MsgName", "Channel", "BaseAux", "ControlPort", "RfPort", "Host", "MinRF", "MaxRF", "Fs", "UniqRXID", "UniqTXID", "DelayReset", });
          internal_static_falcon_res_msg_RTLSDRConfig_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_falcon_res_msg_RTLSDRConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_RTLSDRConfig_descriptor,
              new java.lang.String[] { "MsgName", "Channel", "BaseAux", "ControlPort", "Host", "MinRF", "MaxRF", "Fs", "UniqRXID", });
          internal_static_falcon_res_msg_USRPRxConfig_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_falcon_res_msg_USRPRxConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_USRPRxConfig_descriptor,
              new java.lang.String[] { "MsgName", "Channel", "BaseAux", "Args", "Usrpchan", "MinRF", "MaxRF", "Fs", });
          internal_static_falcon_res_msg_PentekConfig_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_falcon_res_msg_PentekConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_PentekConfig_descriptor,
              new java.lang.String[] { "MsgName", "ClkFreq", "DacInterp", "CoreInterp", "BaseChan", "NumBuffers", "FreqShift", "SiggenIP", "SiggenType", });
          internal_static_falcon_res_msg_USRPTxConfig_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_falcon_res_msg_USRPTxConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_USRPTxConfig_descriptor,
              new java.lang.String[] { "MsgName", "Args", "Usrpchan", "MinRF", "MaxRF", });
          internal_static_falcon_res_msg_RFSwitchConfig_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_falcon_res_msg_RFSwitchConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_RFSwitchConfig_descriptor,
              new java.lang.String[] { "MsgName", "IP", "SlaveTimeout", "EnergyScanSec", "EnergyTrackTime", "Port", "SetOnLaunch", });
          internal_static_falcon_res_msg_RFSwitchSerialConfig_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_falcon_res_msg_RFSwitchSerialConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_RFSwitchSerialConfig_descriptor,
              new java.lang.String[] { "MsgName", "Device", "Baud", "SlaveTimeout", "EnergyScanSec", "EnergyTrackTime", });
          internal_static_falcon_res_msg_CPSwitchConfig_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_falcon_res_msg_CPSwitchConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_CPSwitchConfig_descriptor,
              new java.lang.String[] { "MsgName", "IP", "Port", "SlaveTimeout", "EnergyScanSec", "EnergyTrackTime", });
          internal_static_falcon_res_msg_AntennaConfig_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_falcon_res_msg_AntennaConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_AntennaConfig_descriptor,
              new java.lang.String[] { "MsgName", "MinRF", "MaxRF", "FixedAngle", "Latitude", "Longitude", "Altitude", "Beamwidth", "DwncnvtLO", "Ssc", "Band", "Polarization", "Group", "SightDistance", "NoiseTest", });
          internal_static_falcon_res_msg_RotorRPMConfig_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_falcon_res_msg_RotorRPMConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_RotorRPMConfig_descriptor,
              new java.lang.String[] { "MsgName", "IP", "Port", "AzOffset", "ElOffset", "HardLimit", "MinScanAngle", "MaxScanAngle", "MinElevation", "MaxElevation", "ScanElevation", "MulticastRate", "PointHoldIncrement", "EnergyScanSpeed", "StartDeviation", "EnergyTrackTime", "ScanScrypt", "GpsServer", "GpsUpdate", "ElDisabled", "InvertAz", "MaxVelocity", "DynamicVel", "SlewEnabled", "AzCloseEnough", });
          internal_static_falcon_res_msg_RotorProtatorConfig_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_falcon_res_msg_RotorProtatorConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_RotorProtatorConfig_descriptor,
              new java.lang.String[] { "MsgName", "IP", "Port", "AzOffset", "HardLimit", "MinScanAngle", "MaxScanAngle", "MulticastRate", "PointHoldIncrement", "EnergyScanSpeed", "StartDeviation", "EnergyTrackTime", "ScanScrypt", "GpsServer", "GpsUpdate", "AzCloseEnough", "ElDisabled", });
          internal_static_falcon_res_msg_RotorProsistelConfig_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_falcon_res_msg_RotorProsistelConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_RotorProsistelConfig_descriptor,
              new java.lang.String[] { "MsgName", "IP", "Port", "AzOffset", "HardLimit", "MinScanAngle", "MaxScanAngle", "MulticastRate", "PointHoldIncrement", "EnergyScanSpeed", "StartDeviation", "EnergyTrackTime", "ScanScrypt", "GpsServer", "GpsUpdate", "AzCloseEnough", "ElDisabled", });
          internal_static_falcon_res_msg_RotorEzrotorConfig_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_falcon_res_msg_RotorEzrotorConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_RotorEzrotorConfig_descriptor,
              new java.lang.String[] { "MsgName", "IP", "Port", "AzOffset", "HardLimit", "MinScanAngle", "MaxScanAngle", "MulticastRate", "PointHoldIncrement", "EnergyScanSpeed", "StartDeviation", "EnergyTrackTime", "ScanScrypt", "GpsServer", "GpsUpdate", "AzCloseEnough", "ElDisabled", });
          internal_static_falcon_res_msg_RotorHGIOConfig_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_falcon_res_msg_RotorHGIOConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_RotorHGIOConfig_descriptor,
              new java.lang.String[] { "MsgName", "IP", "Port", "AzOffset", "HardLimit", "MinScanAngle", "MaxScanAngle", "MinElevation", "MaxElevation", "ScanElevation", "MulticastRate", "PointHoldIncrement", "EnergyScanSpeed", "StartDeviation", "EnergyTrackTime", "UseGps", "ScanScrypt", "GpsServer", "GpsUpdate", "AzCloseEnough", "ElDisabled", "SlewEnabled", });
          internal_static_falcon_res_msg_RotorESAConfig_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_falcon_res_msg_RotorESAConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_RotorESAConfig_descriptor,
              new java.lang.String[] { "MsgName", "IP", "Port", "AzOffset", "HardLimit", "MinScanAngle", "MaxScanAngle", "PointHoldIncrement", "EnergyScanSpeed", "StartDeviation", "EnergyTrackTime", "ScanScrypt", "AzCloseEnough", "ElDisabled", });
          internal_static_falcon_res_msg_DSSwitchConfig_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_falcon_res_msg_DSSwitchConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_DSSwitchConfig_descriptor,
              new java.lang.String[] { "MsgName", "BaseURL", "InputPath", "OutputPath", "UserName", "Password", "SleepTime", "SlaveTimeout", "EnergyScanSec", "EnergyTrackTime", });
          internal_static_falcon_res_msg_DummyConfig_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_falcon_res_msg_DummyConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_DummyConfig_descriptor,
              new java.lang.String[] { "MsgName", "Message", });
          internal_static_falcon_res_msg_MMSXTConfig_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_falcon_res_msg_MMSXTConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_MMSXTConfig_descriptor,
              new java.lang.String[] { "MsgName", "Transmitter", "MMSXTCtrlIp", "ControlPort", "MMSXTDataIp", "DataPort", "UniqTXID", "TxcuPort", "TxcuIP", });
          internal_static_falcon_res_msg_AmpConfig_descriptor =
            getDescriptor().getMessageTypes().get(23);
          internal_static_falcon_res_msg_AmpConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_res_msg_AmpConfig_descriptor,
              new java.lang.String[] { "MsgName", "IP", "Port", "Hardware", "InitAtten", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
