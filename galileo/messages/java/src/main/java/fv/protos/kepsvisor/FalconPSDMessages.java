// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FalconPSDMessages.proto

package fv.protos.kepsvisor;

public final class FalconPSDMessages {
  private FalconPSDMessages() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ClassificationHeaderOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .falcon_psd.ClassificationHeader.ClassLevel classification = 1;
    /**
     * <code>required .falcon_psd.ClassificationHeader.ClassLevel classification = 1;</code>
     */
    boolean hasClassification();
    /**
     * <code>required .falcon_psd.ClassificationHeader.ClassLevel classification = 1;</code>
     */
    fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.ClassLevel getClassification();

    // optional .falcon_psd.ClassificationHeader.Compartment compartment = 2;
    /**
     * <code>optional .falcon_psd.ClassificationHeader.Compartment compartment = 2;</code>
     */
    boolean hasCompartment();
    /**
     * <code>optional .falcon_psd.ClassificationHeader.Compartment compartment = 2;</code>
     */
    fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Compartment getCompartment();

    // optional .falcon_psd.ClassificationHeader.Releasability rel_to = 3;
    /**
     * <code>optional .falcon_psd.ClassificationHeader.Releasability rel_to = 3;</code>
     */
    boolean hasRelTo();
    /**
     * <code>optional .falcon_psd.ClassificationHeader.Releasability rel_to = 3;</code>
     */
    fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Releasability getRelTo();
  }
  /**
   * Protobuf type {@code falcon_psd.ClassificationHeader}
   *
   * <pre>
   *&#47;/
   * Classification Header message for PSD
   * </pre>
   */
  public static final class ClassificationHeader extends
      com.google.protobuf.GeneratedMessage
      implements ClassificationHeaderOrBuilder {
    // Use ClassificationHeader.newBuilder() to construct.
    private ClassificationHeader(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClassificationHeader(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClassificationHeader defaultInstance;
    public static ClassificationHeader getDefaultInstance() {
      return defaultInstance;
    }

    public ClassificationHeader getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClassificationHeader(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.ClassLevel value = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.ClassLevel.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                classification_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Compartment value = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Compartment.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                compartment_ = value;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Releasability value = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Releasability.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                relTo_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_ClassificationHeader_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_ClassificationHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.class, fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Builder.class);
    }

    public static com.google.protobuf.Parser<ClassificationHeader> PARSER =
        new com.google.protobuf.AbstractParser<ClassificationHeader>() {
      public ClassificationHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClassificationHeader(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClassificationHeader> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code falcon_psd.ClassificationHeader.ClassLevel}
     */
    public enum ClassLevel
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNCLASSIFIED = 1;</code>
       */
      UNCLASSIFIED(0, 1),
      /**
       * <code>CONFIDENTIAL = 2;</code>
       */
      CONFIDENTIAL(1, 2),
      /**
       * <code>SECRET = 3;</code>
       */
      SECRET(2, 3),
      /**
       * <code>TOPSECRET = 4;</code>
       */
      TOPSECRET(3, 4),
      ;

      /**
       * <code>UNCLASSIFIED = 1;</code>
       */
      public static final int UNCLASSIFIED_VALUE = 1;
      /**
       * <code>CONFIDENTIAL = 2;</code>
       */
      public static final int CONFIDENTIAL_VALUE = 2;
      /**
       * <code>SECRET = 3;</code>
       */
      public static final int SECRET_VALUE = 3;
      /**
       * <code>TOPSECRET = 4;</code>
       */
      public static final int TOPSECRET_VALUE = 4;


      public final int getNumber() { return value; }

      public static ClassLevel valueOf(int value) {
        switch (value) {
          case 1: return UNCLASSIFIED;
          case 2: return CONFIDENTIAL;
          case 3: return SECRET;
          case 4: return TOPSECRET;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ClassLevel>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ClassLevel>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ClassLevel>() {
              public ClassLevel findValueByNumber(int number) {
                return ClassLevel.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.getDescriptor().getEnumTypes().get(0);
      }

      private static final ClassLevel[] VALUES = values();

      public static ClassLevel valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private ClassLevel(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:falcon_psd.ClassificationHeader.ClassLevel)
    }

    /**
     * Protobuf enum {@code falcon_psd.ClassificationHeader.Compartment}
     */
    public enum Compartment
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SI = 1;</code>
       */
      SI(0, 1),
      /**
       * <code>TK = 2;</code>
       */
      TK(1, 2),
      ;

      /**
       * <code>SI = 1;</code>
       */
      public static final int SI_VALUE = 1;
      /**
       * <code>TK = 2;</code>
       */
      public static final int TK_VALUE = 2;


      public final int getNumber() { return value; }

      public static Compartment valueOf(int value) {
        switch (value) {
          case 1: return SI;
          case 2: return TK;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Compartment>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Compartment>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Compartment>() {
              public Compartment findValueByNumber(int number) {
                return Compartment.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.getDescriptor().getEnumTypes().get(1);
      }

      private static final Compartment[] VALUES = values();

      public static Compartment valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Compartment(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:falcon_psd.ClassificationHeader.Compartment)
    }

    /**
     * Protobuf enum {@code falcon_psd.ClassificationHeader.Releasability}
     */
    public enum Releasability
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>FOUO = 1;</code>
       */
      FOUO(0, 1),
      /**
       * <code>ROK = 2;</code>
       */
      ROK(1, 2),
      /**
       * <code>EY3 = 3;</code>
       */
      EY3(2, 3),
      /**
       * <code>EY4 = 4;</code>
       */
      EY4(3, 4),
      /**
       * <code>EY5 = 5;</code>
       */
      EY5(4, 5),
      /**
       * <code>EY9 = 6;</code>
       */
      EY9(5, 6),
      /**
       * <code>NOFOR = 7;</code>
       */
      NOFOR(6, 7),
      ;

      /**
       * <code>FOUO = 1;</code>
       */
      public static final int FOUO_VALUE = 1;
      /**
       * <code>ROK = 2;</code>
       */
      public static final int ROK_VALUE = 2;
      /**
       * <code>EY3 = 3;</code>
       */
      public static final int EY3_VALUE = 3;
      /**
       * <code>EY4 = 4;</code>
       */
      public static final int EY4_VALUE = 4;
      /**
       * <code>EY5 = 5;</code>
       */
      public static final int EY5_VALUE = 5;
      /**
       * <code>EY9 = 6;</code>
       */
      public static final int EY9_VALUE = 6;
      /**
       * <code>NOFOR = 7;</code>
       */
      public static final int NOFOR_VALUE = 7;


      public final int getNumber() { return value; }

      public static Releasability valueOf(int value) {
        switch (value) {
          case 1: return FOUO;
          case 2: return ROK;
          case 3: return EY3;
          case 4: return EY4;
          case 5: return EY5;
          case 6: return EY9;
          case 7: return NOFOR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Releasability>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Releasability>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Releasability>() {
              public Releasability findValueByNumber(int number) {
                return Releasability.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.getDescriptor().getEnumTypes().get(2);
      }

      private static final Releasability[] VALUES = values();

      public static Releasability valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Releasability(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:falcon_psd.ClassificationHeader.Releasability)
    }

    private int bitField0_;
    // required .falcon_psd.ClassificationHeader.ClassLevel classification = 1;
    public static final int CLASSIFICATION_FIELD_NUMBER = 1;
    private fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.ClassLevel classification_;
    /**
     * <code>required .falcon_psd.ClassificationHeader.ClassLevel classification = 1;</code>
     */
    public boolean hasClassification() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .falcon_psd.ClassificationHeader.ClassLevel classification = 1;</code>
     */
    public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.ClassLevel getClassification() {
      return classification_;
    }

    // optional .falcon_psd.ClassificationHeader.Compartment compartment = 2;
    public static final int COMPARTMENT_FIELD_NUMBER = 2;
    private fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Compartment compartment_;
    /**
     * <code>optional .falcon_psd.ClassificationHeader.Compartment compartment = 2;</code>
     */
    public boolean hasCompartment() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .falcon_psd.ClassificationHeader.Compartment compartment = 2;</code>
     */
    public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Compartment getCompartment() {
      return compartment_;
    }

    // optional .falcon_psd.ClassificationHeader.Releasability rel_to = 3;
    public static final int REL_TO_FIELD_NUMBER = 3;
    private fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Releasability relTo_;
    /**
     * <code>optional .falcon_psd.ClassificationHeader.Releasability rel_to = 3;</code>
     */
    public boolean hasRelTo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .falcon_psd.ClassificationHeader.Releasability rel_to = 3;</code>
     */
    public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Releasability getRelTo() {
      return relTo_;
    }

    private void initFields() {
      classification_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.ClassLevel.UNCLASSIFIED;
      compartment_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Compartment.SI;
      relTo_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Releasability.FOUO;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasClassification()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, classification_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, compartment_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, relTo_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, classification_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, compartment_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, relTo_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_psd.ClassificationHeader}
     *
     * <pre>
     *&#47;/
     * Classification Header message for PSD
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_ClassificationHeader_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_ClassificationHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.class, fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        classification_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.ClassLevel.UNCLASSIFIED;
        bitField0_ = (bitField0_ & ~0x00000001);
        compartment_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Compartment.SI;
        bitField0_ = (bitField0_ & ~0x00000002);
        relTo_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Releasability.FOUO;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_ClassificationHeader_descriptor;
      }

      public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader build() {
        fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader buildPartial() {
        fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader result = new fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.classification_ = classification_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.compartment_ = compartment_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.relTo_ = relTo_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader) {
          return mergeFrom((fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader other) {
        if (other == fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.getDefaultInstance()) return this;
        if (other.hasClassification()) {
          setClassification(other.getClassification());
        }
        if (other.hasCompartment()) {
          setCompartment(other.getCompartment());
        }
        if (other.hasRelTo()) {
          setRelTo(other.getRelTo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasClassification()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .falcon_psd.ClassificationHeader.ClassLevel classification = 1;
      private fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.ClassLevel classification_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.ClassLevel.UNCLASSIFIED;
      /**
       * <code>required .falcon_psd.ClassificationHeader.ClassLevel classification = 1;</code>
       */
      public boolean hasClassification() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader.ClassLevel classification = 1;</code>
       */
      public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.ClassLevel getClassification() {
        return classification_;
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader.ClassLevel classification = 1;</code>
       */
      public Builder setClassification(fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.ClassLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        classification_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader.ClassLevel classification = 1;</code>
       */
      public Builder clearClassification() {
        bitField0_ = (bitField0_ & ~0x00000001);
        classification_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.ClassLevel.UNCLASSIFIED;
        onChanged();
        return this;
      }

      // optional .falcon_psd.ClassificationHeader.Compartment compartment = 2;
      private fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Compartment compartment_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Compartment.SI;
      /**
       * <code>optional .falcon_psd.ClassificationHeader.Compartment compartment = 2;</code>
       */
      public boolean hasCompartment() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .falcon_psd.ClassificationHeader.Compartment compartment = 2;</code>
       */
      public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Compartment getCompartment() {
        return compartment_;
      }
      /**
       * <code>optional .falcon_psd.ClassificationHeader.Compartment compartment = 2;</code>
       */
      public Builder setCompartment(fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Compartment value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        compartment_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .falcon_psd.ClassificationHeader.Compartment compartment = 2;</code>
       */
      public Builder clearCompartment() {
        bitField0_ = (bitField0_ & ~0x00000002);
        compartment_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Compartment.SI;
        onChanged();
        return this;
      }

      // optional .falcon_psd.ClassificationHeader.Releasability rel_to = 3;
      private fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Releasability relTo_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Releasability.FOUO;
      /**
       * <code>optional .falcon_psd.ClassificationHeader.Releasability rel_to = 3;</code>
       */
      public boolean hasRelTo() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .falcon_psd.ClassificationHeader.Releasability rel_to = 3;</code>
       */
      public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Releasability getRelTo() {
        return relTo_;
      }
      /**
       * <code>optional .falcon_psd.ClassificationHeader.Releasability rel_to = 3;</code>
       */
      public Builder setRelTo(fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Releasability value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        relTo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .falcon_psd.ClassificationHeader.Releasability rel_to = 3;</code>
       */
      public Builder clearRelTo() {
        bitField0_ = (bitField0_ & ~0x00000004);
        relTo_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Releasability.FOUO;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_psd.ClassificationHeader)
    }

    static {
      defaultInstance = new ClassificationHeader(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_psd.ClassificationHeader)
  }

  public interface PSDHeaderOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string uuid = 1;
    /**
     * <code>required string uuid = 1;</code>
     */
    boolean hasUuid();
    /**
     * <code>required string uuid = 1;</code>
     */
    java.lang.String getUuid();
    /**
     * <code>required string uuid = 1;</code>
     */
    com.google.protobuf.ByteString
        getUuidBytes();

    // required double start_frequency = 2;
    /**
     * <code>required double start_frequency = 2;</code>
     */
    boolean hasStartFrequency();
    /**
     * <code>required double start_frequency = 2;</code>
     */
    double getStartFrequency();

    // required double end_frequency = 3;
    /**
     * <code>required double end_frequency = 3;</code>
     */
    boolean hasEndFrequency();
    /**
     * <code>required double end_frequency = 3;</code>
     */
    double getEndFrequency();

    // required double resolution_bandwidth = 4;
    /**
     * <code>required double resolution_bandwidth = 4;</code>
     */
    boolean hasResolutionBandwidth();
    /**
     * <code>required double resolution_bandwidth = 4;</code>
     */
    double getResolutionBandwidth();

    // required int32 num_points = 5;
    /**
     * <code>required int32 num_points = 5;</code>
     */
    boolean hasNumPoints();
    /**
     * <code>required int32 num_points = 5;</code>
     */
    int getNumPoints();

    // required double duration = 6;
    /**
     * <code>required double duration = 6;</code>
     */
    boolean hasDuration();
    /**
     * <code>required double duration = 6;</code>
     */
    double getDuration();

    // required int32 channel = 7;
    /**
     * <code>required int32 channel = 7;</code>
     */
    boolean hasChannel();
    /**
     * <code>required int32 channel = 7;</code>
     */
    int getChannel();

    // optional int32 highlight_start = 8;
    /**
     * <code>optional int32 highlight_start = 8;</code>
     */
    boolean hasHighlightStart();
    /**
     * <code>optional int32 highlight_start = 8;</code>
     */
    int getHighlightStart();

    // optional int32 highlight_end = 9;
    /**
     * <code>optional int32 highlight_end = 9;</code>
     */
    boolean hasHighlightEnd();
    /**
     * <code>optional int32 highlight_end = 9;</code>
     */
    int getHighlightEnd();

    // optional int32 saturation = 10;
    /**
     * <code>optional int32 saturation = 10;</code>
     */
    boolean hasSaturation();
    /**
     * <code>optional int32 saturation = 10;</code>
     */
    int getSaturation();

    // optional double psd_max = 11;
    /**
     * <code>optional double psd_max = 11;</code>
     */
    boolean hasPsdMax();
    /**
     * <code>optional double psd_max = 11;</code>
     */
    double getPsdMax();

    // optional double psd_min = 12;
    /**
     * <code>optional double psd_min = 12;</code>
     */
    boolean hasPsdMin();
    /**
     * <code>optional double psd_min = 12;</code>
     */
    double getPsdMin();
  }
  /**
   * Protobuf type {@code falcon_psd.PSDHeader}
   *
   * <pre>
   *&#47;/
   * PSD Header Message. This contains key information for the PSD.
   *
   * uuid: unique id. This will match the uuid returned from the subscribe for PSD Operation
   * start_frequency: Start Frequency of the PSD in Hz
   * end_frequency: End Frequency of the PSD in Hz
   * resolution_bandwidth: Resolution BW in Hz
   * num_points: number of fft points
   * duration: Length of the psd
   * channel: Channel number
   * highlight_start: Start frequency of the PSD's highlighted section in Hz
   * highlight_end: End frequency of the PSD's highlighted section in Hz
   * saturation: RX Saturcation value (1, 2, or 3 for green, yellow, or red)
   * psd_max: max value of the psd plot region on the Y axis
   * psd_min: min value of the psd plot region on the Y axis
   * </pre>
   */
  public static final class PSDHeader extends
      com.google.protobuf.GeneratedMessage
      implements PSDHeaderOrBuilder {
    // Use PSDHeader.newBuilder() to construct.
    private PSDHeader(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PSDHeader(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PSDHeader defaultInstance;
    public static PSDHeader getDefaultInstance() {
      return defaultInstance;
    }

    public PSDHeader getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PSDHeader(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              uuid_ = input.readBytes();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              startFrequency_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              endFrequency_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              resolutionBandwidth_ = input.readDouble();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              numPoints_ = input.readInt32();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              duration_ = input.readDouble();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              channel_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              highlightStart_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              highlightEnd_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              saturation_ = input.readInt32();
              break;
            }
            case 89: {
              bitField0_ |= 0x00000400;
              psdMax_ = input.readDouble();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              psdMin_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_PSDHeader_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_PSDHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.class, fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.Builder.class);
    }

    public static com.google.protobuf.Parser<PSDHeader> PARSER =
        new com.google.protobuf.AbstractParser<PSDHeader>() {
      public PSDHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PSDHeader(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PSDHeader> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string uuid = 1;
    public static final int UUID_FIELD_NUMBER = 1;
    private java.lang.Object uuid_;
    /**
     * <code>required string uuid = 1;</code>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string uuid = 1;</code>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uuid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string uuid = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required double start_frequency = 2;
    public static final int START_FREQUENCY_FIELD_NUMBER = 2;
    private double startFrequency_;
    /**
     * <code>required double start_frequency = 2;</code>
     */
    public boolean hasStartFrequency() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double start_frequency = 2;</code>
     */
    public double getStartFrequency() {
      return startFrequency_;
    }

    // required double end_frequency = 3;
    public static final int END_FREQUENCY_FIELD_NUMBER = 3;
    private double endFrequency_;
    /**
     * <code>required double end_frequency = 3;</code>
     */
    public boolean hasEndFrequency() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double end_frequency = 3;</code>
     */
    public double getEndFrequency() {
      return endFrequency_;
    }

    // required double resolution_bandwidth = 4;
    public static final int RESOLUTION_BANDWIDTH_FIELD_NUMBER = 4;
    private double resolutionBandwidth_;
    /**
     * <code>required double resolution_bandwidth = 4;</code>
     */
    public boolean hasResolutionBandwidth() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required double resolution_bandwidth = 4;</code>
     */
    public double getResolutionBandwidth() {
      return resolutionBandwidth_;
    }

    // required int32 num_points = 5;
    public static final int NUM_POINTS_FIELD_NUMBER = 5;
    private int numPoints_;
    /**
     * <code>required int32 num_points = 5;</code>
     */
    public boolean hasNumPoints() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 num_points = 5;</code>
     */
    public int getNumPoints() {
      return numPoints_;
    }

    // required double duration = 6;
    public static final int DURATION_FIELD_NUMBER = 6;
    private double duration_;
    /**
     * <code>required double duration = 6;</code>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required double duration = 6;</code>
     */
    public double getDuration() {
      return duration_;
    }

    // required int32 channel = 7;
    public static final int CHANNEL_FIELD_NUMBER = 7;
    private int channel_;
    /**
     * <code>required int32 channel = 7;</code>
     */
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 channel = 7;</code>
     */
    public int getChannel() {
      return channel_;
    }

    // optional int32 highlight_start = 8;
    public static final int HIGHLIGHT_START_FIELD_NUMBER = 8;
    private int highlightStart_;
    /**
     * <code>optional int32 highlight_start = 8;</code>
     */
    public boolean hasHighlightStart() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 highlight_start = 8;</code>
     */
    public int getHighlightStart() {
      return highlightStart_;
    }

    // optional int32 highlight_end = 9;
    public static final int HIGHLIGHT_END_FIELD_NUMBER = 9;
    private int highlightEnd_;
    /**
     * <code>optional int32 highlight_end = 9;</code>
     */
    public boolean hasHighlightEnd() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 highlight_end = 9;</code>
     */
    public int getHighlightEnd() {
      return highlightEnd_;
    }

    // optional int32 saturation = 10;
    public static final int SATURATION_FIELD_NUMBER = 10;
    private int saturation_;
    /**
     * <code>optional int32 saturation = 10;</code>
     */
    public boolean hasSaturation() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 saturation = 10;</code>
     */
    public int getSaturation() {
      return saturation_;
    }

    // optional double psd_max = 11;
    public static final int PSD_MAX_FIELD_NUMBER = 11;
    private double psdMax_;
    /**
     * <code>optional double psd_max = 11;</code>
     */
    public boolean hasPsdMax() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional double psd_max = 11;</code>
     */
    public double getPsdMax() {
      return psdMax_;
    }

    // optional double psd_min = 12;
    public static final int PSD_MIN_FIELD_NUMBER = 12;
    private double psdMin_;
    /**
     * <code>optional double psd_min = 12;</code>
     */
    public boolean hasPsdMin() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional double psd_min = 12;</code>
     */
    public double getPsdMin() {
      return psdMin_;
    }

    private void initFields() {
      uuid_ = "";
      startFrequency_ = 0D;
      endFrequency_ = 0D;
      resolutionBandwidth_ = 0D;
      numPoints_ = 0;
      duration_ = 0D;
      channel_ = 0;
      highlightStart_ = 0;
      highlightEnd_ = 0;
      saturation_ = 0;
      psdMax_ = 0D;
      psdMin_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStartFrequency()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEndFrequency()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasResolutionBandwidth()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNumPoints()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDuration()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChannel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUuidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, startFrequency_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, endFrequency_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, resolutionBandwidth_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, numPoints_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, duration_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, channel_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, highlightStart_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, highlightEnd_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, saturation_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeDouble(11, psdMax_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeDouble(12, psdMin_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUuidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, startFrequency_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, endFrequency_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, resolutionBandwidth_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, numPoints_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, duration_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, channel_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, highlightStart_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, highlightEnd_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, saturation_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, psdMax_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, psdMin_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconPSDMessages.PSDHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.PSDHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.PSDHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.PSDHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.PSDHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.PSDHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.PSDHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.PSDHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.PSDHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.PSDHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconPSDMessages.PSDHeader prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_psd.PSDHeader}
     *
     * <pre>
     *&#47;/
     * PSD Header Message. This contains key information for the PSD.
     *
     * uuid: unique id. This will match the uuid returned from the subscribe for PSD Operation
     * start_frequency: Start Frequency of the PSD in Hz
     * end_frequency: End Frequency of the PSD in Hz
     * resolution_bandwidth: Resolution BW in Hz
     * num_points: number of fft points
     * duration: Length of the psd
     * channel: Channel number
     * highlight_start: Start frequency of the PSD's highlighted section in Hz
     * highlight_end: End frequency of the PSD's highlighted section in Hz
     * saturation: RX Saturcation value (1, 2, or 3 for green, yellow, or red)
     * psd_max: max value of the psd plot region on the Y axis
     * psd_min: min value of the psd plot region on the Y axis
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconPSDMessages.PSDHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_PSDHeader_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_PSDHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.class, fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uuid_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        startFrequency_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        endFrequency_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        resolutionBandwidth_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        numPoints_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        duration_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        channel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        highlightStart_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        highlightEnd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        saturation_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        psdMax_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        psdMin_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_PSDHeader_descriptor;
      }

      public fv.protos.kepsvisor.FalconPSDMessages.PSDHeader getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconPSDMessages.PSDHeader build() {
        fv.protos.kepsvisor.FalconPSDMessages.PSDHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconPSDMessages.PSDHeader buildPartial() {
        fv.protos.kepsvisor.FalconPSDMessages.PSDHeader result = new fv.protos.kepsvisor.FalconPSDMessages.PSDHeader(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.startFrequency_ = startFrequency_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.endFrequency_ = endFrequency_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.resolutionBandwidth_ = resolutionBandwidth_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.numPoints_ = numPoints_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.duration_ = duration_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.highlightStart_ = highlightStart_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.highlightEnd_ = highlightEnd_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.saturation_ = saturation_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.psdMax_ = psdMax_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.psdMin_ = psdMin_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconPSDMessages.PSDHeader) {
          return mergeFrom((fv.protos.kepsvisor.FalconPSDMessages.PSDHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconPSDMessages.PSDHeader other) {
        if (other == fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.getDefaultInstance()) return this;
        if (other.hasUuid()) {
          bitField0_ |= 0x00000001;
          uuid_ = other.uuid_;
          onChanged();
        }
        if (other.hasStartFrequency()) {
          setStartFrequency(other.getStartFrequency());
        }
        if (other.hasEndFrequency()) {
          setEndFrequency(other.getEndFrequency());
        }
        if (other.hasResolutionBandwidth()) {
          setResolutionBandwidth(other.getResolutionBandwidth());
        }
        if (other.hasNumPoints()) {
          setNumPoints(other.getNumPoints());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        if (other.hasHighlightStart()) {
          setHighlightStart(other.getHighlightStart());
        }
        if (other.hasHighlightEnd()) {
          setHighlightEnd(other.getHighlightEnd());
        }
        if (other.hasSaturation()) {
          setSaturation(other.getSaturation());
        }
        if (other.hasPsdMax()) {
          setPsdMax(other.getPsdMax());
        }
        if (other.hasPsdMin()) {
          setPsdMin(other.getPsdMin());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUuid()) {
          
          return false;
        }
        if (!hasStartFrequency()) {
          
          return false;
        }
        if (!hasEndFrequency()) {
          
          return false;
        }
        if (!hasResolutionBandwidth()) {
          
          return false;
        }
        if (!hasNumPoints()) {
          
          return false;
        }
        if (!hasDuration()) {
          
          return false;
        }
        if (!hasChannel()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconPSDMessages.PSDHeader parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconPSDMessages.PSDHeader) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string uuid = 1;
      private java.lang.Object uuid_ = "";
      /**
       * <code>required string uuid = 1;</code>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uuid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public Builder setUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public Builder setUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }

      // required double start_frequency = 2;
      private double startFrequency_ ;
      /**
       * <code>required double start_frequency = 2;</code>
       */
      public boolean hasStartFrequency() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double start_frequency = 2;</code>
       */
      public double getStartFrequency() {
        return startFrequency_;
      }
      /**
       * <code>required double start_frequency = 2;</code>
       */
      public Builder setStartFrequency(double value) {
        bitField0_ |= 0x00000002;
        startFrequency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double start_frequency = 2;</code>
       */
      public Builder clearStartFrequency() {
        bitField0_ = (bitField0_ & ~0x00000002);
        startFrequency_ = 0D;
        onChanged();
        return this;
      }

      // required double end_frequency = 3;
      private double endFrequency_ ;
      /**
       * <code>required double end_frequency = 3;</code>
       */
      public boolean hasEndFrequency() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double end_frequency = 3;</code>
       */
      public double getEndFrequency() {
        return endFrequency_;
      }
      /**
       * <code>required double end_frequency = 3;</code>
       */
      public Builder setEndFrequency(double value) {
        bitField0_ |= 0x00000004;
        endFrequency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double end_frequency = 3;</code>
       */
      public Builder clearEndFrequency() {
        bitField0_ = (bitField0_ & ~0x00000004);
        endFrequency_ = 0D;
        onChanged();
        return this;
      }

      // required double resolution_bandwidth = 4;
      private double resolutionBandwidth_ ;
      /**
       * <code>required double resolution_bandwidth = 4;</code>
       */
      public boolean hasResolutionBandwidth() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required double resolution_bandwidth = 4;</code>
       */
      public double getResolutionBandwidth() {
        return resolutionBandwidth_;
      }
      /**
       * <code>required double resolution_bandwidth = 4;</code>
       */
      public Builder setResolutionBandwidth(double value) {
        bitField0_ |= 0x00000008;
        resolutionBandwidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double resolution_bandwidth = 4;</code>
       */
      public Builder clearResolutionBandwidth() {
        bitField0_ = (bitField0_ & ~0x00000008);
        resolutionBandwidth_ = 0D;
        onChanged();
        return this;
      }

      // required int32 num_points = 5;
      private int numPoints_ ;
      /**
       * <code>required int32 num_points = 5;</code>
       */
      public boolean hasNumPoints() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 num_points = 5;</code>
       */
      public int getNumPoints() {
        return numPoints_;
      }
      /**
       * <code>required int32 num_points = 5;</code>
       */
      public Builder setNumPoints(int value) {
        bitField0_ |= 0x00000010;
        numPoints_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 num_points = 5;</code>
       */
      public Builder clearNumPoints() {
        bitField0_ = (bitField0_ & ~0x00000010);
        numPoints_ = 0;
        onChanged();
        return this;
      }

      // required double duration = 6;
      private double duration_ ;
      /**
       * <code>required double duration = 6;</code>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required double duration = 6;</code>
       */
      public double getDuration() {
        return duration_;
      }
      /**
       * <code>required double duration = 6;</code>
       */
      public Builder setDuration(double value) {
        bitField0_ |= 0x00000020;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double duration = 6;</code>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000020);
        duration_ = 0D;
        onChanged();
        return this;
      }

      // required int32 channel = 7;
      private int channel_ ;
      /**
       * <code>required int32 channel = 7;</code>
       */
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 channel = 7;</code>
       */
      public int getChannel() {
        return channel_;
      }
      /**
       * <code>required int32 channel = 7;</code>
       */
      public Builder setChannel(int value) {
        bitField0_ |= 0x00000040;
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 channel = 7;</code>
       */
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000040);
        channel_ = 0;
        onChanged();
        return this;
      }

      // optional int32 highlight_start = 8;
      private int highlightStart_ ;
      /**
       * <code>optional int32 highlight_start = 8;</code>
       */
      public boolean hasHighlightStart() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 highlight_start = 8;</code>
       */
      public int getHighlightStart() {
        return highlightStart_;
      }
      /**
       * <code>optional int32 highlight_start = 8;</code>
       */
      public Builder setHighlightStart(int value) {
        bitField0_ |= 0x00000080;
        highlightStart_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 highlight_start = 8;</code>
       */
      public Builder clearHighlightStart() {
        bitField0_ = (bitField0_ & ~0x00000080);
        highlightStart_ = 0;
        onChanged();
        return this;
      }

      // optional int32 highlight_end = 9;
      private int highlightEnd_ ;
      /**
       * <code>optional int32 highlight_end = 9;</code>
       */
      public boolean hasHighlightEnd() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 highlight_end = 9;</code>
       */
      public int getHighlightEnd() {
        return highlightEnd_;
      }
      /**
       * <code>optional int32 highlight_end = 9;</code>
       */
      public Builder setHighlightEnd(int value) {
        bitField0_ |= 0x00000100;
        highlightEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 highlight_end = 9;</code>
       */
      public Builder clearHighlightEnd() {
        bitField0_ = (bitField0_ & ~0x00000100);
        highlightEnd_ = 0;
        onChanged();
        return this;
      }

      // optional int32 saturation = 10;
      private int saturation_ ;
      /**
       * <code>optional int32 saturation = 10;</code>
       */
      public boolean hasSaturation() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 saturation = 10;</code>
       */
      public int getSaturation() {
        return saturation_;
      }
      /**
       * <code>optional int32 saturation = 10;</code>
       */
      public Builder setSaturation(int value) {
        bitField0_ |= 0x00000200;
        saturation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 saturation = 10;</code>
       */
      public Builder clearSaturation() {
        bitField0_ = (bitField0_ & ~0x00000200);
        saturation_ = 0;
        onChanged();
        return this;
      }

      // optional double psd_max = 11;
      private double psdMax_ ;
      /**
       * <code>optional double psd_max = 11;</code>
       */
      public boolean hasPsdMax() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional double psd_max = 11;</code>
       */
      public double getPsdMax() {
        return psdMax_;
      }
      /**
       * <code>optional double psd_max = 11;</code>
       */
      public Builder setPsdMax(double value) {
        bitField0_ |= 0x00000400;
        psdMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double psd_max = 11;</code>
       */
      public Builder clearPsdMax() {
        bitField0_ = (bitField0_ & ~0x00000400);
        psdMax_ = 0D;
        onChanged();
        return this;
      }

      // optional double psd_min = 12;
      private double psdMin_ ;
      /**
       * <code>optional double psd_min = 12;</code>
       */
      public boolean hasPsdMin() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional double psd_min = 12;</code>
       */
      public double getPsdMin() {
        return psdMin_;
      }
      /**
       * <code>optional double psd_min = 12;</code>
       */
      public Builder setPsdMin(double value) {
        bitField0_ |= 0x00000800;
        psdMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double psd_min = 12;</code>
       */
      public Builder clearPsdMin() {
        bitField0_ = (bitField0_ & ~0x00000800);
        psdMin_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_psd.PSDHeader)
    }

    static {
      defaultInstance = new PSDHeader(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_psd.PSDHeader)
  }

  public interface PSDOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "PSD"];
    /**
     * <code>optional string msgName = 1 [default = "PSD"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "PSD"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "PSD"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // required .falcon_psd.ClassificationHeader classification_header = 2;
    /**
     * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
     */
    boolean hasClassificationHeader();
    /**
     * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
     */
    fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader getClassificationHeader();
    /**
     * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
     */
    fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeaderOrBuilder getClassificationHeaderOrBuilder();

    // required double timestamp = 3;
    /**
     * <code>required double timestamp = 3;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>required double timestamp = 3;</code>
     */
    double getTimestamp();

    // required string uuid = 4;
    /**
     * <code>required string uuid = 4;</code>
     */
    boolean hasUuid();
    /**
     * <code>required string uuid = 4;</code>
     */
    java.lang.String getUuid();
    /**
     * <code>required string uuid = 4;</code>
     */
    com.google.protobuf.ByteString
        getUuidBytes();

    // optional .falcon_psd.PSDHeader psd_header = 5;
    /**
     * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
     */
    boolean hasPsdHeader();
    /**
     * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
     */
    fv.protos.kepsvisor.FalconPSDMessages.PSDHeader getPsdHeader();
    /**
     * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
     */
    fv.protos.kepsvisor.FalconPSDMessages.PSDHeaderOrBuilder getPsdHeaderOrBuilder();

    // repeated float fft_data = 6 [packed = true];
    /**
     * <code>repeated float fft_data = 6 [packed = true];</code>
     */
    java.util.List<java.lang.Float> getFftDataList();
    /**
     * <code>repeated float fft_data = 6 [packed = true];</code>
     */
    int getFftDataCount();
    /**
     * <code>repeated float fft_data = 6 [packed = true];</code>
     */
    float getFftData(int index);
  }
  /**
   * Protobuf type {@code falcon_psd.PSD}
   *
   * <pre>
   *&#47;/
   * PSD message.  This will contain the headers as well as the raw PSD data.
   *
   * msgName: PSD, used to identify the message
   * classification_header: Classification Header message
   * timestamp: Timestamp in fractional seconds
   * uuid: unique id. This will match the uuid returned from the subscribe for PSD Operation
   * psd_header: PSD Header message
   * fft_data: Raw fft data
   * </pre>
   */
  public static final class PSD extends
      com.google.protobuf.GeneratedMessage
      implements PSDOrBuilder {
    // Use PSD.newBuilder() to construct.
    private PSD(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PSD(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PSD defaultInstance;
    public static PSD getDefaultInstance() {
      return defaultInstance;
    }

    public PSD getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PSD(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 18: {
              fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = classificationHeader_.toBuilder();
              }
              classificationHeader_ = input.readMessage(fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(classificationHeader_);
                classificationHeader_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              timestamp_ = input.readDouble();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              uuid_ = input.readBytes();
              break;
            }
            case 42: {
              fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = psdHeader_.toBuilder();
              }
              psdHeader_ = input.readMessage(fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(psdHeader_);
                psdHeader_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 53: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                fftData_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000020;
              }
              fftData_.add(input.readFloat());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                fftData_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                fftData_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          fftData_ = java.util.Collections.unmodifiableList(fftData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_PSD_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_PSD_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconPSDMessages.PSD.class, fv.protos.kepsvisor.FalconPSDMessages.PSD.Builder.class);
    }

    public static com.google.protobuf.Parser<PSD> PARSER =
        new com.google.protobuf.AbstractParser<PSD>() {
      public PSD parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PSD(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PSD> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "PSD"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "PSD"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "PSD"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "PSD"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .falcon_psd.ClassificationHeader classification_header = 2;
    public static final int CLASSIFICATION_HEADER_FIELD_NUMBER = 2;
    private fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader classificationHeader_;
    /**
     * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
     */
    public boolean hasClassificationHeader() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
     */
    public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader getClassificationHeader() {
      return classificationHeader_;
    }
    /**
     * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
     */
    public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeaderOrBuilder getClassificationHeaderOrBuilder() {
      return classificationHeader_;
    }

    // required double timestamp = 3;
    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private double timestamp_;
    /**
     * <code>required double timestamp = 3;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double timestamp = 3;</code>
     */
    public double getTimestamp() {
      return timestamp_;
    }

    // required string uuid = 4;
    public static final int UUID_FIELD_NUMBER = 4;
    private java.lang.Object uuid_;
    /**
     * <code>required string uuid = 4;</code>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string uuid = 4;</code>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uuid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string uuid = 4;</code>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .falcon_psd.PSDHeader psd_header = 5;
    public static final int PSD_HEADER_FIELD_NUMBER = 5;
    private fv.protos.kepsvisor.FalconPSDMessages.PSDHeader psdHeader_;
    /**
     * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
     */
    public boolean hasPsdHeader() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
     */
    public fv.protos.kepsvisor.FalconPSDMessages.PSDHeader getPsdHeader() {
      return psdHeader_;
    }
    /**
     * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
     */
    public fv.protos.kepsvisor.FalconPSDMessages.PSDHeaderOrBuilder getPsdHeaderOrBuilder() {
      return psdHeader_;
    }

    // repeated float fft_data = 6 [packed = true];
    public static final int FFT_DATA_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Float> fftData_;
    /**
     * <code>repeated float fft_data = 6 [packed = true];</code>
     */
    public java.util.List<java.lang.Float>
        getFftDataList() {
      return fftData_;
    }
    /**
     * <code>repeated float fft_data = 6 [packed = true];</code>
     */
    public int getFftDataCount() {
      return fftData_.size();
    }
    /**
     * <code>repeated float fft_data = 6 [packed = true];</code>
     */
    public float getFftData(int index) {
      return fftData_.get(index);
    }
    private int fftDataMemoizedSerializedSize = -1;

    private void initFields() {
      msgName_ = "PSD";
      classificationHeader_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.getDefaultInstance();
      timestamp_ = 0D;
      uuid_ = "";
      psdHeader_ = fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.getDefaultInstance();
      fftData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasClassificationHeader()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getClassificationHeader().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasPsdHeader()) {
        if (!getPsdHeader().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, classificationHeader_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getUuidBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, psdHeader_);
      }
      if (getFftDataList().size() > 0) {
        output.writeRawVarint32(50);
        output.writeRawVarint32(fftDataMemoizedSerializedSize);
      }
      for (int i = 0; i < fftData_.size(); i++) {
        output.writeFloatNoTag(fftData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, classificationHeader_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getUuidBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, psdHeader_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFftDataList().size();
        size += dataSize;
        if (!getFftDataList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        fftDataMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconPSDMessages.PSD parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.PSD parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.PSD parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.PSD parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.PSD parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.PSD parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.PSD parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.PSD parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.PSD parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.PSD parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconPSDMessages.PSD prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_psd.PSD}
     *
     * <pre>
     *&#47;/
     * PSD message.  This will contain the headers as well as the raw PSD data.
     *
     * msgName: PSD, used to identify the message
     * classification_header: Classification Header message
     * timestamp: Timestamp in fractional seconds
     * uuid: unique id. This will match the uuid returned from the subscribe for PSD Operation
     * psd_header: PSD Header message
     * fft_data: Raw fft data
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconPSDMessages.PSDOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_PSD_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_PSD_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconPSDMessages.PSD.class, fv.protos.kepsvisor.FalconPSDMessages.PSD.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconPSDMessages.PSD.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getClassificationHeaderFieldBuilder();
          getPsdHeaderFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "PSD";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (classificationHeaderBuilder_ == null) {
          classificationHeader_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.getDefaultInstance();
        } else {
          classificationHeaderBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        uuid_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        if (psdHeaderBuilder_ == null) {
          psdHeader_ = fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.getDefaultInstance();
        } else {
          psdHeaderBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        fftData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_PSD_descriptor;
      }

      public fv.protos.kepsvisor.FalconPSDMessages.PSD getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconPSDMessages.PSD.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconPSDMessages.PSD build() {
        fv.protos.kepsvisor.FalconPSDMessages.PSD result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconPSDMessages.PSD buildPartial() {
        fv.protos.kepsvisor.FalconPSDMessages.PSD result = new fv.protos.kepsvisor.FalconPSDMessages.PSD(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (classificationHeaderBuilder_ == null) {
          result.classificationHeader_ = classificationHeader_;
        } else {
          result.classificationHeader_ = classificationHeaderBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (psdHeaderBuilder_ == null) {
          result.psdHeader_ = psdHeader_;
        } else {
          result.psdHeader_ = psdHeaderBuilder_.build();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          fftData_ = java.util.Collections.unmodifiableList(fftData_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.fftData_ = fftData_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconPSDMessages.PSD) {
          return mergeFrom((fv.protos.kepsvisor.FalconPSDMessages.PSD)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconPSDMessages.PSD other) {
        if (other == fv.protos.kepsvisor.FalconPSDMessages.PSD.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasClassificationHeader()) {
          mergeClassificationHeader(other.getClassificationHeader());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasUuid()) {
          bitField0_ |= 0x00000008;
          uuid_ = other.uuid_;
          onChanged();
        }
        if (other.hasPsdHeader()) {
          mergePsdHeader(other.getPsdHeader());
        }
        if (!other.fftData_.isEmpty()) {
          if (fftData_.isEmpty()) {
            fftData_ = other.fftData_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureFftDataIsMutable();
            fftData_.addAll(other.fftData_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasClassificationHeader()) {
          
          return false;
        }
        if (!hasTimestamp()) {
          
          return false;
        }
        if (!hasUuid()) {
          
          return false;
        }
        if (!getClassificationHeader().isInitialized()) {
          
          return false;
        }
        if (hasPsdHeader()) {
          if (!getPsdHeader().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconPSDMessages.PSD parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconPSDMessages.PSD) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "PSD"];
      private java.lang.Object msgName_ = "PSD";
      /**
       * <code>optional string msgName = 1 [default = "PSD"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "PSD"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "PSD"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "PSD"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "PSD"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "PSD"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // required .falcon_psd.ClassificationHeader classification_header = 2;
      private fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader classificationHeader_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader, fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Builder, fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeaderOrBuilder> classificationHeaderBuilder_;
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public boolean hasClassificationHeader() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader getClassificationHeader() {
        if (classificationHeaderBuilder_ == null) {
          return classificationHeader_;
        } else {
          return classificationHeaderBuilder_.getMessage();
        }
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public Builder setClassificationHeader(fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader value) {
        if (classificationHeaderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          classificationHeader_ = value;
          onChanged();
        } else {
          classificationHeaderBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public Builder setClassificationHeader(
          fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Builder builderForValue) {
        if (classificationHeaderBuilder_ == null) {
          classificationHeader_ = builderForValue.build();
          onChanged();
        } else {
          classificationHeaderBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public Builder mergeClassificationHeader(fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader value) {
        if (classificationHeaderBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              classificationHeader_ != fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.getDefaultInstance()) {
            classificationHeader_ =
              fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.newBuilder(classificationHeader_).mergeFrom(value).buildPartial();
          } else {
            classificationHeader_ = value;
          }
          onChanged();
        } else {
          classificationHeaderBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public Builder clearClassificationHeader() {
        if (classificationHeaderBuilder_ == null) {
          classificationHeader_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.getDefaultInstance();
          onChanged();
        } else {
          classificationHeaderBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Builder getClassificationHeaderBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getClassificationHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeaderOrBuilder getClassificationHeaderOrBuilder() {
        if (classificationHeaderBuilder_ != null) {
          return classificationHeaderBuilder_.getMessageOrBuilder();
        } else {
          return classificationHeader_;
        }
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader, fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Builder, fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeaderOrBuilder> 
          getClassificationHeaderFieldBuilder() {
        if (classificationHeaderBuilder_ == null) {
          classificationHeaderBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader, fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Builder, fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeaderOrBuilder>(
                  classificationHeader_,
                  getParentForChildren(),
                  isClean());
          classificationHeader_ = null;
        }
        return classificationHeaderBuilder_;
      }

      // required double timestamp = 3;
      private double timestamp_ ;
      /**
       * <code>required double timestamp = 3;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double timestamp = 3;</code>
       */
      public double getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required double timestamp = 3;</code>
       */
      public Builder setTimestamp(double value) {
        bitField0_ |= 0x00000004;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double timestamp = 3;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timestamp_ = 0D;
        onChanged();
        return this;
      }

      // required string uuid = 4;
      private java.lang.Object uuid_ = "";
      /**
       * <code>required string uuid = 4;</code>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string uuid = 4;</code>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uuid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string uuid = 4;</code>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string uuid = 4;</code>
       */
      public Builder setUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string uuid = 4;</code>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000008);
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <code>required string uuid = 4;</code>
       */
      public Builder setUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        uuid_ = value;
        onChanged();
        return this;
      }

      // optional .falcon_psd.PSDHeader psd_header = 5;
      private fv.protos.kepsvisor.FalconPSDMessages.PSDHeader psdHeader_ = fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          fv.protos.kepsvisor.FalconPSDMessages.PSDHeader, fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.Builder, fv.protos.kepsvisor.FalconPSDMessages.PSDHeaderOrBuilder> psdHeaderBuilder_;
      /**
       * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
       */
      public boolean hasPsdHeader() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
       */
      public fv.protos.kepsvisor.FalconPSDMessages.PSDHeader getPsdHeader() {
        if (psdHeaderBuilder_ == null) {
          return psdHeader_;
        } else {
          return psdHeaderBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
       */
      public Builder setPsdHeader(fv.protos.kepsvisor.FalconPSDMessages.PSDHeader value) {
        if (psdHeaderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          psdHeader_ = value;
          onChanged();
        } else {
          psdHeaderBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
       */
      public Builder setPsdHeader(
          fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.Builder builderForValue) {
        if (psdHeaderBuilder_ == null) {
          psdHeader_ = builderForValue.build();
          onChanged();
        } else {
          psdHeaderBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
       */
      public Builder mergePsdHeader(fv.protos.kepsvisor.FalconPSDMessages.PSDHeader value) {
        if (psdHeaderBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              psdHeader_ != fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.getDefaultInstance()) {
            psdHeader_ =
              fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.newBuilder(psdHeader_).mergeFrom(value).buildPartial();
          } else {
            psdHeader_ = value;
          }
          onChanged();
        } else {
          psdHeaderBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
       */
      public Builder clearPsdHeader() {
        if (psdHeaderBuilder_ == null) {
          psdHeader_ = fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.getDefaultInstance();
          onChanged();
        } else {
          psdHeaderBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
       */
      public fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.Builder getPsdHeaderBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getPsdHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
       */
      public fv.protos.kepsvisor.FalconPSDMessages.PSDHeaderOrBuilder getPsdHeaderOrBuilder() {
        if (psdHeaderBuilder_ != null) {
          return psdHeaderBuilder_.getMessageOrBuilder();
        } else {
          return psdHeader_;
        }
      }
      /**
       * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          fv.protos.kepsvisor.FalconPSDMessages.PSDHeader, fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.Builder, fv.protos.kepsvisor.FalconPSDMessages.PSDHeaderOrBuilder> 
          getPsdHeaderFieldBuilder() {
        if (psdHeaderBuilder_ == null) {
          psdHeaderBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              fv.protos.kepsvisor.FalconPSDMessages.PSDHeader, fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.Builder, fv.protos.kepsvisor.FalconPSDMessages.PSDHeaderOrBuilder>(
                  psdHeader_,
                  getParentForChildren(),
                  isClean());
          psdHeader_ = null;
        }
        return psdHeaderBuilder_;
      }

      // repeated float fft_data = 6 [packed = true];
      private java.util.List<java.lang.Float> fftData_ = java.util.Collections.emptyList();
      private void ensureFftDataIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          fftData_ = new java.util.ArrayList<java.lang.Float>(fftData_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated float fft_data = 6 [packed = true];</code>
       */
      public java.util.List<java.lang.Float>
          getFftDataList() {
        return java.util.Collections.unmodifiableList(fftData_);
      }
      /**
       * <code>repeated float fft_data = 6 [packed = true];</code>
       */
      public int getFftDataCount() {
        return fftData_.size();
      }
      /**
       * <code>repeated float fft_data = 6 [packed = true];</code>
       */
      public float getFftData(int index) {
        return fftData_.get(index);
      }
      /**
       * <code>repeated float fft_data = 6 [packed = true];</code>
       */
      public Builder setFftData(
          int index, float value) {
        ensureFftDataIsMutable();
        fftData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float fft_data = 6 [packed = true];</code>
       */
      public Builder addFftData(float value) {
        ensureFftDataIsMutable();
        fftData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float fft_data = 6 [packed = true];</code>
       */
      public Builder addAllFftData(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFftDataIsMutable();
        super.addAll(values, fftData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float fft_data = 6 [packed = true];</code>
       */
      public Builder clearFftData() {
        fftData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_psd.PSD)
    }

    static {
      defaultInstance = new PSD(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_psd.PSD)
  }

  public interface DensePSDOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "DENSE_PSD"];
    /**
     * <code>optional string msgName = 1 [default = "DENSE_PSD"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "DENSE_PSD"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "DENSE_PSD"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // required .falcon_psd.ClassificationHeader classification_header = 2;
    /**
     * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
     */
    boolean hasClassificationHeader();
    /**
     * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
     */
    fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader getClassificationHeader();
    /**
     * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
     */
    fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeaderOrBuilder getClassificationHeaderOrBuilder();

    // required double timestamp = 3;
    /**
     * <code>required double timestamp = 3;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>required double timestamp = 3;</code>
     */
    double getTimestamp();

    // required string uuid = 4;
    /**
     * <code>required string uuid = 4;</code>
     */
    boolean hasUuid();
    /**
     * <code>required string uuid = 4;</code>
     */
    java.lang.String getUuid();
    /**
     * <code>required string uuid = 4;</code>
     */
    com.google.protobuf.ByteString
        getUuidBytes();

    // optional .falcon_psd.PSDHeader psd_header = 5;
    /**
     * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
     */
    boolean hasPsdHeader();
    /**
     * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
     */
    fv.protos.kepsvisor.FalconPSDMessages.PSDHeader getPsdHeader();
    /**
     * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
     */
    fv.protos.kepsvisor.FalconPSDMessages.PSDHeaderOrBuilder getPsdHeaderOrBuilder();

    // required float min = 6;
    /**
     * <code>required float min = 6;</code>
     */
    boolean hasMin();
    /**
     * <code>required float min = 6;</code>
     */
    float getMin();

    // required float step = 7;
    /**
     * <code>required float step = 7;</code>
     */
    boolean hasStep();
    /**
     * <code>required float step = 7;</code>
     */
    float getStep();

    // repeated float fft_data = 8;
    /**
     * <code>repeated float fft_data = 8;</code>
     */
    java.util.List<java.lang.Float> getFftDataList();
    /**
     * <code>repeated float fft_data = 8;</code>
     */
    int getFftDataCount();
    /**
     * <code>repeated float fft_data = 8;</code>
     */
    float getFftData(int index);
  }
  /**
   * Protobuf type {@code falcon_psd.DensePSD}
   *
   * <pre>
   *&#47;/
   * Dense PSD message.  This will contain the headers as well as the dense PSD data. This 
   * is basically quantized so that we can push smaller amounts of data through.
   *
   * msgName: DENSE_PSD, used to identify the message
   * classification_header: Classification Header message
   * timestamp: Timestamp in fractional seconds
   * uuid: unique id. This will match the uuid returned from the subscribe for PSD Operation
   * psd_header: PSD Header message
   * min: minimum value that a byte of 0 means
   * step: Step size between each byte for recalculation
   * fft_data: Raw fft data
   * </pre>
   */
  public static final class DensePSD extends
      com.google.protobuf.GeneratedMessage
      implements DensePSDOrBuilder {
    // Use DensePSD.newBuilder() to construct.
    private DensePSD(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DensePSD(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DensePSD defaultInstance;
    public static DensePSD getDefaultInstance() {
      return defaultInstance;
    }

    public DensePSD getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DensePSD(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 18: {
              fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = classificationHeader_.toBuilder();
              }
              classificationHeader_ = input.readMessage(fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(classificationHeader_);
                classificationHeader_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              timestamp_ = input.readDouble();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              uuid_ = input.readBytes();
              break;
            }
            case 42: {
              fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = psdHeader_.toBuilder();
              }
              psdHeader_ = input.readMessage(fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(psdHeader_);
                psdHeader_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              min_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              step_ = input.readFloat();
              break;
            }
            case 69: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                fftData_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000080;
              }
              fftData_.add(input.readFloat());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                fftData_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                fftData_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          fftData_ = java.util.Collections.unmodifiableList(fftData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_DensePSD_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_DensePSD_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconPSDMessages.DensePSD.class, fv.protos.kepsvisor.FalconPSDMessages.DensePSD.Builder.class);
    }

    public static com.google.protobuf.Parser<DensePSD> PARSER =
        new com.google.protobuf.AbstractParser<DensePSD>() {
      public DensePSD parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DensePSD(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DensePSD> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "DENSE_PSD"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "DENSE_PSD"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "DENSE_PSD"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "DENSE_PSD"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .falcon_psd.ClassificationHeader classification_header = 2;
    public static final int CLASSIFICATION_HEADER_FIELD_NUMBER = 2;
    private fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader classificationHeader_;
    /**
     * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
     */
    public boolean hasClassificationHeader() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
     */
    public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader getClassificationHeader() {
      return classificationHeader_;
    }
    /**
     * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
     */
    public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeaderOrBuilder getClassificationHeaderOrBuilder() {
      return classificationHeader_;
    }

    // required double timestamp = 3;
    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private double timestamp_;
    /**
     * <code>required double timestamp = 3;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double timestamp = 3;</code>
     */
    public double getTimestamp() {
      return timestamp_;
    }

    // required string uuid = 4;
    public static final int UUID_FIELD_NUMBER = 4;
    private java.lang.Object uuid_;
    /**
     * <code>required string uuid = 4;</code>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string uuid = 4;</code>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uuid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string uuid = 4;</code>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .falcon_psd.PSDHeader psd_header = 5;
    public static final int PSD_HEADER_FIELD_NUMBER = 5;
    private fv.protos.kepsvisor.FalconPSDMessages.PSDHeader psdHeader_;
    /**
     * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
     */
    public boolean hasPsdHeader() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
     */
    public fv.protos.kepsvisor.FalconPSDMessages.PSDHeader getPsdHeader() {
      return psdHeader_;
    }
    /**
     * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
     */
    public fv.protos.kepsvisor.FalconPSDMessages.PSDHeaderOrBuilder getPsdHeaderOrBuilder() {
      return psdHeader_;
    }

    // required float min = 6;
    public static final int MIN_FIELD_NUMBER = 6;
    private float min_;
    /**
     * <code>required float min = 6;</code>
     */
    public boolean hasMin() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required float min = 6;</code>
     */
    public float getMin() {
      return min_;
    }

    // required float step = 7;
    public static final int STEP_FIELD_NUMBER = 7;
    private float step_;
    /**
     * <code>required float step = 7;</code>
     */
    public boolean hasStep() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required float step = 7;</code>
     */
    public float getStep() {
      return step_;
    }

    // repeated float fft_data = 8;
    public static final int FFT_DATA_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Float> fftData_;
    /**
     * <code>repeated float fft_data = 8;</code>
     */
    public java.util.List<java.lang.Float>
        getFftDataList() {
      return fftData_;
    }
    /**
     * <code>repeated float fft_data = 8;</code>
     */
    public int getFftDataCount() {
      return fftData_.size();
    }
    /**
     * <code>repeated float fft_data = 8;</code>
     */
    public float getFftData(int index) {
      return fftData_.get(index);
    }

    private void initFields() {
      msgName_ = "DENSE_PSD";
      classificationHeader_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.getDefaultInstance();
      timestamp_ = 0D;
      uuid_ = "";
      psdHeader_ = fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.getDefaultInstance();
      min_ = 0F;
      step_ = 0F;
      fftData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasClassificationHeader()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStep()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getClassificationHeader().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasPsdHeader()) {
        if (!getPsdHeader().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, classificationHeader_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getUuidBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, psdHeader_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, min_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, step_);
      }
      for (int i = 0; i < fftData_.size(); i++) {
        output.writeFloat(8, fftData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, classificationHeader_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getUuidBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, psdHeader_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, min_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, step_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getFftDataList().size();
        size += dataSize;
        size += 1 * getFftDataList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconPSDMessages.DensePSD parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.DensePSD parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.DensePSD parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.DensePSD parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.DensePSD parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.DensePSD parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.DensePSD parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.DensePSD parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.DensePSD parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.DensePSD parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconPSDMessages.DensePSD prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_psd.DensePSD}
     *
     * <pre>
     *&#47;/
     * Dense PSD message.  This will contain the headers as well as the dense PSD data. This 
     * is basically quantized so that we can push smaller amounts of data through.
     *
     * msgName: DENSE_PSD, used to identify the message
     * classification_header: Classification Header message
     * timestamp: Timestamp in fractional seconds
     * uuid: unique id. This will match the uuid returned from the subscribe for PSD Operation
     * psd_header: PSD Header message
     * min: minimum value that a byte of 0 means
     * step: Step size between each byte for recalculation
     * fft_data: Raw fft data
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconPSDMessages.DensePSDOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_DensePSD_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_DensePSD_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconPSDMessages.DensePSD.class, fv.protos.kepsvisor.FalconPSDMessages.DensePSD.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconPSDMessages.DensePSD.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getClassificationHeaderFieldBuilder();
          getPsdHeaderFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "DENSE_PSD";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (classificationHeaderBuilder_ == null) {
          classificationHeader_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.getDefaultInstance();
        } else {
          classificationHeaderBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        uuid_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        if (psdHeaderBuilder_ == null) {
          psdHeader_ = fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.getDefaultInstance();
        } else {
          psdHeaderBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        min_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        step_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        fftData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_DensePSD_descriptor;
      }

      public fv.protos.kepsvisor.FalconPSDMessages.DensePSD getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconPSDMessages.DensePSD.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconPSDMessages.DensePSD build() {
        fv.protos.kepsvisor.FalconPSDMessages.DensePSD result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconPSDMessages.DensePSD buildPartial() {
        fv.protos.kepsvisor.FalconPSDMessages.DensePSD result = new fv.protos.kepsvisor.FalconPSDMessages.DensePSD(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (classificationHeaderBuilder_ == null) {
          result.classificationHeader_ = classificationHeader_;
        } else {
          result.classificationHeader_ = classificationHeaderBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (psdHeaderBuilder_ == null) {
          result.psdHeader_ = psdHeader_;
        } else {
          result.psdHeader_ = psdHeaderBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.min_ = min_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.step_ = step_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          fftData_ = java.util.Collections.unmodifiableList(fftData_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.fftData_ = fftData_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconPSDMessages.DensePSD) {
          return mergeFrom((fv.protos.kepsvisor.FalconPSDMessages.DensePSD)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconPSDMessages.DensePSD other) {
        if (other == fv.protos.kepsvisor.FalconPSDMessages.DensePSD.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasClassificationHeader()) {
          mergeClassificationHeader(other.getClassificationHeader());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasUuid()) {
          bitField0_ |= 0x00000008;
          uuid_ = other.uuid_;
          onChanged();
        }
        if (other.hasPsdHeader()) {
          mergePsdHeader(other.getPsdHeader());
        }
        if (other.hasMin()) {
          setMin(other.getMin());
        }
        if (other.hasStep()) {
          setStep(other.getStep());
        }
        if (!other.fftData_.isEmpty()) {
          if (fftData_.isEmpty()) {
            fftData_ = other.fftData_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureFftDataIsMutable();
            fftData_.addAll(other.fftData_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasClassificationHeader()) {
          
          return false;
        }
        if (!hasTimestamp()) {
          
          return false;
        }
        if (!hasUuid()) {
          
          return false;
        }
        if (!hasMin()) {
          
          return false;
        }
        if (!hasStep()) {
          
          return false;
        }
        if (!getClassificationHeader().isInitialized()) {
          
          return false;
        }
        if (hasPsdHeader()) {
          if (!getPsdHeader().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconPSDMessages.DensePSD parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconPSDMessages.DensePSD) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "DENSE_PSD"];
      private java.lang.Object msgName_ = "DENSE_PSD";
      /**
       * <code>optional string msgName = 1 [default = "DENSE_PSD"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "DENSE_PSD"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "DENSE_PSD"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "DENSE_PSD"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "DENSE_PSD"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "DENSE_PSD"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // required .falcon_psd.ClassificationHeader classification_header = 2;
      private fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader classificationHeader_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader, fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Builder, fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeaderOrBuilder> classificationHeaderBuilder_;
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public boolean hasClassificationHeader() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader getClassificationHeader() {
        if (classificationHeaderBuilder_ == null) {
          return classificationHeader_;
        } else {
          return classificationHeaderBuilder_.getMessage();
        }
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public Builder setClassificationHeader(fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader value) {
        if (classificationHeaderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          classificationHeader_ = value;
          onChanged();
        } else {
          classificationHeaderBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public Builder setClassificationHeader(
          fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Builder builderForValue) {
        if (classificationHeaderBuilder_ == null) {
          classificationHeader_ = builderForValue.build();
          onChanged();
        } else {
          classificationHeaderBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public Builder mergeClassificationHeader(fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader value) {
        if (classificationHeaderBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              classificationHeader_ != fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.getDefaultInstance()) {
            classificationHeader_ =
              fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.newBuilder(classificationHeader_).mergeFrom(value).buildPartial();
          } else {
            classificationHeader_ = value;
          }
          onChanged();
        } else {
          classificationHeaderBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public Builder clearClassificationHeader() {
        if (classificationHeaderBuilder_ == null) {
          classificationHeader_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.getDefaultInstance();
          onChanged();
        } else {
          classificationHeaderBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Builder getClassificationHeaderBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getClassificationHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeaderOrBuilder getClassificationHeaderOrBuilder() {
        if (classificationHeaderBuilder_ != null) {
          return classificationHeaderBuilder_.getMessageOrBuilder();
        } else {
          return classificationHeader_;
        }
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader, fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Builder, fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeaderOrBuilder> 
          getClassificationHeaderFieldBuilder() {
        if (classificationHeaderBuilder_ == null) {
          classificationHeaderBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader, fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Builder, fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeaderOrBuilder>(
                  classificationHeader_,
                  getParentForChildren(),
                  isClean());
          classificationHeader_ = null;
        }
        return classificationHeaderBuilder_;
      }

      // required double timestamp = 3;
      private double timestamp_ ;
      /**
       * <code>required double timestamp = 3;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double timestamp = 3;</code>
       */
      public double getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required double timestamp = 3;</code>
       */
      public Builder setTimestamp(double value) {
        bitField0_ |= 0x00000004;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double timestamp = 3;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timestamp_ = 0D;
        onChanged();
        return this;
      }

      // required string uuid = 4;
      private java.lang.Object uuid_ = "";
      /**
       * <code>required string uuid = 4;</code>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string uuid = 4;</code>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uuid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string uuid = 4;</code>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string uuid = 4;</code>
       */
      public Builder setUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string uuid = 4;</code>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000008);
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <code>required string uuid = 4;</code>
       */
      public Builder setUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        uuid_ = value;
        onChanged();
        return this;
      }

      // optional .falcon_psd.PSDHeader psd_header = 5;
      private fv.protos.kepsvisor.FalconPSDMessages.PSDHeader psdHeader_ = fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          fv.protos.kepsvisor.FalconPSDMessages.PSDHeader, fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.Builder, fv.protos.kepsvisor.FalconPSDMessages.PSDHeaderOrBuilder> psdHeaderBuilder_;
      /**
       * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
       */
      public boolean hasPsdHeader() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
       */
      public fv.protos.kepsvisor.FalconPSDMessages.PSDHeader getPsdHeader() {
        if (psdHeaderBuilder_ == null) {
          return psdHeader_;
        } else {
          return psdHeaderBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
       */
      public Builder setPsdHeader(fv.protos.kepsvisor.FalconPSDMessages.PSDHeader value) {
        if (psdHeaderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          psdHeader_ = value;
          onChanged();
        } else {
          psdHeaderBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
       */
      public Builder setPsdHeader(
          fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.Builder builderForValue) {
        if (psdHeaderBuilder_ == null) {
          psdHeader_ = builderForValue.build();
          onChanged();
        } else {
          psdHeaderBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
       */
      public Builder mergePsdHeader(fv.protos.kepsvisor.FalconPSDMessages.PSDHeader value) {
        if (psdHeaderBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              psdHeader_ != fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.getDefaultInstance()) {
            psdHeader_ =
              fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.newBuilder(psdHeader_).mergeFrom(value).buildPartial();
          } else {
            psdHeader_ = value;
          }
          onChanged();
        } else {
          psdHeaderBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
       */
      public Builder clearPsdHeader() {
        if (psdHeaderBuilder_ == null) {
          psdHeader_ = fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.getDefaultInstance();
          onChanged();
        } else {
          psdHeaderBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
       */
      public fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.Builder getPsdHeaderBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getPsdHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
       */
      public fv.protos.kepsvisor.FalconPSDMessages.PSDHeaderOrBuilder getPsdHeaderOrBuilder() {
        if (psdHeaderBuilder_ != null) {
          return psdHeaderBuilder_.getMessageOrBuilder();
        } else {
          return psdHeader_;
        }
      }
      /**
       * <code>optional .falcon_psd.PSDHeader psd_header = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          fv.protos.kepsvisor.FalconPSDMessages.PSDHeader, fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.Builder, fv.protos.kepsvisor.FalconPSDMessages.PSDHeaderOrBuilder> 
          getPsdHeaderFieldBuilder() {
        if (psdHeaderBuilder_ == null) {
          psdHeaderBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              fv.protos.kepsvisor.FalconPSDMessages.PSDHeader, fv.protos.kepsvisor.FalconPSDMessages.PSDHeader.Builder, fv.protos.kepsvisor.FalconPSDMessages.PSDHeaderOrBuilder>(
                  psdHeader_,
                  getParentForChildren(),
                  isClean());
          psdHeader_ = null;
        }
        return psdHeaderBuilder_;
      }

      // required float min = 6;
      private float min_ ;
      /**
       * <code>required float min = 6;</code>
       */
      public boolean hasMin() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required float min = 6;</code>
       */
      public float getMin() {
        return min_;
      }
      /**
       * <code>required float min = 6;</code>
       */
      public Builder setMin(float value) {
        bitField0_ |= 0x00000020;
        min_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float min = 6;</code>
       */
      public Builder clearMin() {
        bitField0_ = (bitField0_ & ~0x00000020);
        min_ = 0F;
        onChanged();
        return this;
      }

      // required float step = 7;
      private float step_ ;
      /**
       * <code>required float step = 7;</code>
       */
      public boolean hasStep() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required float step = 7;</code>
       */
      public float getStep() {
        return step_;
      }
      /**
       * <code>required float step = 7;</code>
       */
      public Builder setStep(float value) {
        bitField0_ |= 0x00000040;
        step_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float step = 7;</code>
       */
      public Builder clearStep() {
        bitField0_ = (bitField0_ & ~0x00000040);
        step_ = 0F;
        onChanged();
        return this;
      }

      // repeated float fft_data = 8;
      private java.util.List<java.lang.Float> fftData_ = java.util.Collections.emptyList();
      private void ensureFftDataIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          fftData_ = new java.util.ArrayList<java.lang.Float>(fftData_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated float fft_data = 8;</code>
       */
      public java.util.List<java.lang.Float>
          getFftDataList() {
        return java.util.Collections.unmodifiableList(fftData_);
      }
      /**
       * <code>repeated float fft_data = 8;</code>
       */
      public int getFftDataCount() {
        return fftData_.size();
      }
      /**
       * <code>repeated float fft_data = 8;</code>
       */
      public float getFftData(int index) {
        return fftData_.get(index);
      }
      /**
       * <code>repeated float fft_data = 8;</code>
       */
      public Builder setFftData(
          int index, float value) {
        ensureFftDataIsMutable();
        fftData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float fft_data = 8;</code>
       */
      public Builder addFftData(float value) {
        ensureFftDataIsMutable();
        fftData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float fft_data = 8;</code>
       */
      public Builder addAllFftData(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureFftDataIsMutable();
        super.addAll(values, fftData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float fft_data = 8;</code>
       */
      public Builder clearFftData() {
        fftData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_psd.DensePSD)
    }

    static {
      defaultInstance = new DensePSD(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_psd.DensePSD)
  }

  public interface BitFrameHeaderOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string uuid = 1;
    /**
     * <code>required string uuid = 1;</code>
     */
    boolean hasUuid();
    /**
     * <code>required string uuid = 1;</code>
     */
    java.lang.String getUuid();
    /**
     * <code>required string uuid = 1;</code>
     */
    com.google.protobuf.ByteString
        getUuidBytes();

    // required int32 num_points = 2;
    /**
     * <code>required int32 num_points = 2;</code>
     */
    boolean hasNumPoints();
    /**
     * <code>required int32 num_points = 2;</code>
     */
    int getNumPoints();

    // required double duration = 3;
    /**
     * <code>required double duration = 3;</code>
     */
    boolean hasDuration();
    /**
     * <code>required double duration = 3;</code>
     */
    double getDuration();

    // required int32 channel = 4;
    /**
     * <code>required int32 channel = 4;</code>
     */
    boolean hasChannel();
    /**
     * <code>required int32 channel = 4;</code>
     */
    int getChannel();

    // optional double bit_max = 5;
    /**
     * <code>optional double bit_max = 5;</code>
     */
    boolean hasBitMax();
    /**
     * <code>optional double bit_max = 5;</code>
     */
    double getBitMax();

    // optional double bit_min = 6;
    /**
     * <code>optional double bit_min = 6;</code>
     */
    boolean hasBitMin();
    /**
     * <code>optional double bit_min = 6;</code>
     */
    double getBitMin();

    // optional string appName = 7;
    /**
     * <code>optional string appName = 7;</code>
     */
    boolean hasAppName();
    /**
     * <code>optional string appName = 7;</code>
     */
    java.lang.String getAppName();
    /**
     * <code>optional string appName = 7;</code>
     */
    com.google.protobuf.ByteString
        getAppNameBytes();
  }
  /**
   * Protobuf type {@code falcon_psd.BitFrameHeader}
   *
   * <pre>
   *&#47;/
   * BitFrame Header Message. This contains key information for the BitFrame.
   *
   * uuid: unique id. This will match the uuid returned from the subscribe for PSD Operation
   * num_points: number of fft points
   * duration: Length of the psd
   * channel: Channel number
   * bit_max: max value of the data region on the Y axis
   * bit_min: min value of the data region on the Y axis
   * appName: Name of the application this rast goes to
   * </pre>
   */
  public static final class BitFrameHeader extends
      com.google.protobuf.GeneratedMessage
      implements BitFrameHeaderOrBuilder {
    // Use BitFrameHeader.newBuilder() to construct.
    private BitFrameHeader(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BitFrameHeader(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BitFrameHeader defaultInstance;
    public static BitFrameHeader getDefaultInstance() {
      return defaultInstance;
    }

    public BitFrameHeader getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BitFrameHeader(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              uuid_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              numPoints_ = input.readInt32();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              duration_ = input.readDouble();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              channel_ = input.readInt32();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              bitMax_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              bitMin_ = input.readDouble();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              appName_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_BitFrameHeader_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_BitFrameHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader.class, fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader.Builder.class);
    }

    public static com.google.protobuf.Parser<BitFrameHeader> PARSER =
        new com.google.protobuf.AbstractParser<BitFrameHeader>() {
      public BitFrameHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BitFrameHeader(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BitFrameHeader> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string uuid = 1;
    public static final int UUID_FIELD_NUMBER = 1;
    private java.lang.Object uuid_;
    /**
     * <code>required string uuid = 1;</code>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string uuid = 1;</code>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uuid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string uuid = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 num_points = 2;
    public static final int NUM_POINTS_FIELD_NUMBER = 2;
    private int numPoints_;
    /**
     * <code>required int32 num_points = 2;</code>
     */
    public boolean hasNumPoints() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 num_points = 2;</code>
     */
    public int getNumPoints() {
      return numPoints_;
    }

    // required double duration = 3;
    public static final int DURATION_FIELD_NUMBER = 3;
    private double duration_;
    /**
     * <code>required double duration = 3;</code>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double duration = 3;</code>
     */
    public double getDuration() {
      return duration_;
    }

    // required int32 channel = 4;
    public static final int CHANNEL_FIELD_NUMBER = 4;
    private int channel_;
    /**
     * <code>required int32 channel = 4;</code>
     */
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 channel = 4;</code>
     */
    public int getChannel() {
      return channel_;
    }

    // optional double bit_max = 5;
    public static final int BIT_MAX_FIELD_NUMBER = 5;
    private double bitMax_;
    /**
     * <code>optional double bit_max = 5;</code>
     */
    public boolean hasBitMax() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional double bit_max = 5;</code>
     */
    public double getBitMax() {
      return bitMax_;
    }

    // optional double bit_min = 6;
    public static final int BIT_MIN_FIELD_NUMBER = 6;
    private double bitMin_;
    /**
     * <code>optional double bit_min = 6;</code>
     */
    public boolean hasBitMin() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional double bit_min = 6;</code>
     */
    public double getBitMin() {
      return bitMin_;
    }

    // optional string appName = 7;
    public static final int APPNAME_FIELD_NUMBER = 7;
    private java.lang.Object appName_;
    /**
     * <code>optional string appName = 7;</code>
     */
    public boolean hasAppName() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string appName = 7;</code>
     */
    public java.lang.String getAppName() {
      java.lang.Object ref = appName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          appName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string appName = 7;</code>
     */
    public com.google.protobuf.ByteString
        getAppNameBytes() {
      java.lang.Object ref = appName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        appName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      uuid_ = "";
      numPoints_ = 0;
      duration_ = 0D;
      channel_ = 0;
      bitMax_ = 0D;
      bitMin_ = 0D;
      appName_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNumPoints()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDuration()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasChannel()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUuidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, numPoints_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, duration_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, channel_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, bitMax_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, bitMin_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getAppNameBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUuidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, numPoints_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, duration_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, channel_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, bitMax_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, bitMin_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getAppNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_psd.BitFrameHeader}
     *
     * <pre>
     *&#47;/
     * BitFrame Header Message. This contains key information for the BitFrame.
     *
     * uuid: unique id. This will match the uuid returned from the subscribe for PSD Operation
     * num_points: number of fft points
     * duration: Length of the psd
     * channel: Channel number
     * bit_max: max value of the data region on the Y axis
     * bit_min: min value of the data region on the Y axis
     * appName: Name of the application this rast goes to
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_BitFrameHeader_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_BitFrameHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader.class, fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uuid_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        numPoints_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        duration_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        channel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bitMax_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        bitMin_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        appName_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_BitFrameHeader_descriptor;
      }

      public fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader build() {
        fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader buildPartial() {
        fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader result = new fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.numPoints_ = numPoints_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.duration_ = duration_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bitMax_ = bitMax_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.bitMin_ = bitMin_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.appName_ = appName_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader) {
          return mergeFrom((fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader other) {
        if (other == fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader.getDefaultInstance()) return this;
        if (other.hasUuid()) {
          bitField0_ |= 0x00000001;
          uuid_ = other.uuid_;
          onChanged();
        }
        if (other.hasNumPoints()) {
          setNumPoints(other.getNumPoints());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        if (other.hasBitMax()) {
          setBitMax(other.getBitMax());
        }
        if (other.hasBitMin()) {
          setBitMin(other.getBitMin());
        }
        if (other.hasAppName()) {
          bitField0_ |= 0x00000040;
          appName_ = other.appName_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUuid()) {
          
          return false;
        }
        if (!hasNumPoints()) {
          
          return false;
        }
        if (!hasDuration()) {
          
          return false;
        }
        if (!hasChannel()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string uuid = 1;
      private java.lang.Object uuid_ = "";
      /**
       * <code>required string uuid = 1;</code>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uuid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public Builder setUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <code>required string uuid = 1;</code>
       */
      public Builder setUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        uuid_ = value;
        onChanged();
        return this;
      }

      // required int32 num_points = 2;
      private int numPoints_ ;
      /**
       * <code>required int32 num_points = 2;</code>
       */
      public boolean hasNumPoints() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 num_points = 2;</code>
       */
      public int getNumPoints() {
        return numPoints_;
      }
      /**
       * <code>required int32 num_points = 2;</code>
       */
      public Builder setNumPoints(int value) {
        bitField0_ |= 0x00000002;
        numPoints_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 num_points = 2;</code>
       */
      public Builder clearNumPoints() {
        bitField0_ = (bitField0_ & ~0x00000002);
        numPoints_ = 0;
        onChanged();
        return this;
      }

      // required double duration = 3;
      private double duration_ ;
      /**
       * <code>required double duration = 3;</code>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double duration = 3;</code>
       */
      public double getDuration() {
        return duration_;
      }
      /**
       * <code>required double duration = 3;</code>
       */
      public Builder setDuration(double value) {
        bitField0_ |= 0x00000004;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double duration = 3;</code>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000004);
        duration_ = 0D;
        onChanged();
        return this;
      }

      // required int32 channel = 4;
      private int channel_ ;
      /**
       * <code>required int32 channel = 4;</code>
       */
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 channel = 4;</code>
       */
      public int getChannel() {
        return channel_;
      }
      /**
       * <code>required int32 channel = 4;</code>
       */
      public Builder setChannel(int value) {
        bitField0_ |= 0x00000008;
        channel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 channel = 4;</code>
       */
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000008);
        channel_ = 0;
        onChanged();
        return this;
      }

      // optional double bit_max = 5;
      private double bitMax_ ;
      /**
       * <code>optional double bit_max = 5;</code>
       */
      public boolean hasBitMax() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional double bit_max = 5;</code>
       */
      public double getBitMax() {
        return bitMax_;
      }
      /**
       * <code>optional double bit_max = 5;</code>
       */
      public Builder setBitMax(double value) {
        bitField0_ |= 0x00000010;
        bitMax_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double bit_max = 5;</code>
       */
      public Builder clearBitMax() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bitMax_ = 0D;
        onChanged();
        return this;
      }

      // optional double bit_min = 6;
      private double bitMin_ ;
      /**
       * <code>optional double bit_min = 6;</code>
       */
      public boolean hasBitMin() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional double bit_min = 6;</code>
       */
      public double getBitMin() {
        return bitMin_;
      }
      /**
       * <code>optional double bit_min = 6;</code>
       */
      public Builder setBitMin(double value) {
        bitField0_ |= 0x00000020;
        bitMin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double bit_min = 6;</code>
       */
      public Builder clearBitMin() {
        bitField0_ = (bitField0_ & ~0x00000020);
        bitMin_ = 0D;
        onChanged();
        return this;
      }

      // optional string appName = 7;
      private java.lang.Object appName_ = "";
      /**
       * <code>optional string appName = 7;</code>
       */
      public boolean hasAppName() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string appName = 7;</code>
       */
      public java.lang.String getAppName() {
        java.lang.Object ref = appName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          appName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string appName = 7;</code>
       */
      public com.google.protobuf.ByteString
          getAppNameBytes() {
        java.lang.Object ref = appName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          appName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string appName = 7;</code>
       */
      public Builder setAppName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        appName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string appName = 7;</code>
       */
      public Builder clearAppName() {
        bitField0_ = (bitField0_ & ~0x00000040);
        appName_ = getDefaultInstance().getAppName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string appName = 7;</code>
       */
      public Builder setAppNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        appName_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_psd.BitFrameHeader)
    }

    static {
      defaultInstance = new BitFrameHeader(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_psd.BitFrameHeader)
  }

  public interface BitFrameOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "BIT_FRAME"];
    /**
     * <code>optional string msgName = 1 [default = "BIT_FRAME"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "BIT_FRAME"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "BIT_FRAME"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // required .falcon_psd.ClassificationHeader classification_header = 2;
    /**
     * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
     */
    boolean hasClassificationHeader();
    /**
     * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
     */
    fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader getClassificationHeader();
    /**
     * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
     */
    fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeaderOrBuilder getClassificationHeaderOrBuilder();

    // required double timestamp = 3;
    /**
     * <code>required double timestamp = 3;</code>
     */
    boolean hasTimestamp();
    /**
     * <code>required double timestamp = 3;</code>
     */
    double getTimestamp();

    // required string uuid = 4;
    /**
     * <code>required string uuid = 4;</code>
     */
    boolean hasUuid();
    /**
     * <code>required string uuid = 4;</code>
     */
    java.lang.String getUuid();
    /**
     * <code>required string uuid = 4;</code>
     */
    com.google.protobuf.ByteString
        getUuidBytes();

    // optional .falcon_psd.BitFrameHeader header = 5;
    /**
     * <code>optional .falcon_psd.BitFrameHeader header = 5;</code>
     */
    boolean hasHeader();
    /**
     * <code>optional .falcon_psd.BitFrameHeader header = 5;</code>
     */
    fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader getHeader();
    /**
     * <code>optional .falcon_psd.BitFrameHeader header = 5;</code>
     */
    fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeaderOrBuilder getHeaderOrBuilder();

    // repeated int32 bit_data = 6;
    /**
     * <code>repeated int32 bit_data = 6;</code>
     */
    java.util.List<java.lang.Integer> getBitDataList();
    /**
     * <code>repeated int32 bit_data = 6;</code>
     */
    int getBitDataCount();
    /**
     * <code>repeated int32 bit_data = 6;</code>
     */
    int getBitData(int index);
  }
  /**
   * Protobuf type {@code falcon_psd.BitFrame}
   *
   * <pre>
   *&#47;/
   * PSD message.  This will contain the headers as well as the raw PSD data.
   *
   * msgName: BIT_FRAME, used to identify the message
   * classification_header: Classification Header message
   * timestamp: Timestamp in fractional seconds
   * uuid: unique id. This will match the uuid returned from the subscribe for PSD Operation
   * header: PSD Header message
   * bit_data: BIT  data
   * </pre>
   */
  public static final class BitFrame extends
      com.google.protobuf.GeneratedMessage
      implements BitFrameOrBuilder {
    // Use BitFrame.newBuilder() to construct.
    private BitFrame(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BitFrame(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BitFrame defaultInstance;
    public static BitFrame getDefaultInstance() {
      return defaultInstance;
    }

    public BitFrame getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BitFrame(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 18: {
              fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = classificationHeader_.toBuilder();
              }
              classificationHeader_ = input.readMessage(fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(classificationHeader_);
                classificationHeader_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              timestamp_ = input.readDouble();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              uuid_ = input.readBytes();
              break;
            }
            case 42: {
              fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                bitData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              bitData_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                bitData_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                bitData_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          bitData_ = java.util.Collections.unmodifiableList(bitData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_BitFrame_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_BitFrame_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.FalconPSDMessages.BitFrame.class, fv.protos.kepsvisor.FalconPSDMessages.BitFrame.Builder.class);
    }

    public static com.google.protobuf.Parser<BitFrame> PARSER =
        new com.google.protobuf.AbstractParser<BitFrame>() {
      public BitFrame parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BitFrame(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BitFrame> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "BIT_FRAME"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "BIT_FRAME"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "BIT_FRAME"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "BIT_FRAME"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required .falcon_psd.ClassificationHeader classification_header = 2;
    public static final int CLASSIFICATION_HEADER_FIELD_NUMBER = 2;
    private fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader classificationHeader_;
    /**
     * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
     */
    public boolean hasClassificationHeader() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
     */
    public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader getClassificationHeader() {
      return classificationHeader_;
    }
    /**
     * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
     */
    public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeaderOrBuilder getClassificationHeaderOrBuilder() {
      return classificationHeader_;
    }

    // required double timestamp = 3;
    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private double timestamp_;
    /**
     * <code>required double timestamp = 3;</code>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double timestamp = 3;</code>
     */
    public double getTimestamp() {
      return timestamp_;
    }

    // required string uuid = 4;
    public static final int UUID_FIELD_NUMBER = 4;
    private java.lang.Object uuid_;
    /**
     * <code>required string uuid = 4;</code>
     */
    public boolean hasUuid() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string uuid = 4;</code>
     */
    public java.lang.String getUuid() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uuid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string uuid = 4;</code>
     */
    public com.google.protobuf.ByteString
        getUuidBytes() {
      java.lang.Object ref = uuid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uuid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .falcon_psd.BitFrameHeader header = 5;
    public static final int HEADER_FIELD_NUMBER = 5;
    private fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader header_;
    /**
     * <code>optional .falcon_psd.BitFrameHeader header = 5;</code>
     */
    public boolean hasHeader() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .falcon_psd.BitFrameHeader header = 5;</code>
     */
    public fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader getHeader() {
      return header_;
    }
    /**
     * <code>optional .falcon_psd.BitFrameHeader header = 5;</code>
     */
    public fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeaderOrBuilder getHeaderOrBuilder() {
      return header_;
    }

    // repeated int32 bit_data = 6;
    public static final int BIT_DATA_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> bitData_;
    /**
     * <code>repeated int32 bit_data = 6;</code>
     */
    public java.util.List<java.lang.Integer>
        getBitDataList() {
      return bitData_;
    }
    /**
     * <code>repeated int32 bit_data = 6;</code>
     */
    public int getBitDataCount() {
      return bitData_.size();
    }
    /**
     * <code>repeated int32 bit_data = 6;</code>
     */
    public int getBitData(int index) {
      return bitData_.get(index);
    }

    private void initFields() {
      msgName_ = "BIT_FRAME";
      classificationHeader_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.getDefaultInstance();
      timestamp_ = 0D;
      uuid_ = "";
      header_ = fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader.getDefaultInstance();
      bitData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasClassificationHeader()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasUuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getClassificationHeader().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasHeader()) {
        if (!getHeader().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, classificationHeader_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getUuidBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, header_);
      }
      for (int i = 0; i < bitData_.size(); i++) {
        output.writeInt32(6, bitData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, classificationHeader_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, timestamp_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getUuidBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, header_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bitData_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(bitData_.get(i));
        }
        size += dataSize;
        size += 1 * getBitDataList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.FalconPSDMessages.BitFrame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.BitFrame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.BitFrame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.BitFrame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.BitFrame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.BitFrame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.BitFrame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.BitFrame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.BitFrame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.FalconPSDMessages.BitFrame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.FalconPSDMessages.BitFrame prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code falcon_psd.BitFrame}
     *
     * <pre>
     *&#47;/
     * PSD message.  This will contain the headers as well as the raw PSD data.
     *
     * msgName: BIT_FRAME, used to identify the message
     * classification_header: Classification Header message
     * timestamp: Timestamp in fractional seconds
     * uuid: unique id. This will match the uuid returned from the subscribe for PSD Operation
     * header: PSD Header message
     * bit_data: BIT  data
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.FalconPSDMessages.BitFrameOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_BitFrame_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_BitFrame_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.FalconPSDMessages.BitFrame.class, fv.protos.kepsvisor.FalconPSDMessages.BitFrame.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.FalconPSDMessages.BitFrame.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getClassificationHeaderFieldBuilder();
          getHeaderFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "BIT_FRAME";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (classificationHeaderBuilder_ == null) {
          classificationHeader_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.getDefaultInstance();
        } else {
          classificationHeaderBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        uuid_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        if (headerBuilder_ == null) {
          header_ = fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader.getDefaultInstance();
        } else {
          headerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        bitData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.FalconPSDMessages.internal_static_falcon_psd_BitFrame_descriptor;
      }

      public fv.protos.kepsvisor.FalconPSDMessages.BitFrame getDefaultInstanceForType() {
        return fv.protos.kepsvisor.FalconPSDMessages.BitFrame.getDefaultInstance();
      }

      public fv.protos.kepsvisor.FalconPSDMessages.BitFrame build() {
        fv.protos.kepsvisor.FalconPSDMessages.BitFrame result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.FalconPSDMessages.BitFrame buildPartial() {
        fv.protos.kepsvisor.FalconPSDMessages.BitFrame result = new fv.protos.kepsvisor.FalconPSDMessages.BitFrame(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (classificationHeaderBuilder_ == null) {
          result.classificationHeader_ = classificationHeader_;
        } else {
          result.classificationHeader_ = classificationHeaderBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.uuid_ = uuid_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          bitData_ = java.util.Collections.unmodifiableList(bitData_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.bitData_ = bitData_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.FalconPSDMessages.BitFrame) {
          return mergeFrom((fv.protos.kepsvisor.FalconPSDMessages.BitFrame)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.FalconPSDMessages.BitFrame other) {
        if (other == fv.protos.kepsvisor.FalconPSDMessages.BitFrame.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasClassificationHeader()) {
          mergeClassificationHeader(other.getClassificationHeader());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasUuid()) {
          bitField0_ |= 0x00000008;
          uuid_ = other.uuid_;
          onChanged();
        }
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (!other.bitData_.isEmpty()) {
          if (bitData_.isEmpty()) {
            bitData_ = other.bitData_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureBitDataIsMutable();
            bitData_.addAll(other.bitData_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasClassificationHeader()) {
          
          return false;
        }
        if (!hasTimestamp()) {
          
          return false;
        }
        if (!hasUuid()) {
          
          return false;
        }
        if (!getClassificationHeader().isInitialized()) {
          
          return false;
        }
        if (hasHeader()) {
          if (!getHeader().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.FalconPSDMessages.BitFrame parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.FalconPSDMessages.BitFrame) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "BIT_FRAME"];
      private java.lang.Object msgName_ = "BIT_FRAME";
      /**
       * <code>optional string msgName = 1 [default = "BIT_FRAME"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "BIT_FRAME"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "BIT_FRAME"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "BIT_FRAME"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "BIT_FRAME"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "BIT_FRAME"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // required .falcon_psd.ClassificationHeader classification_header = 2;
      private fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader classificationHeader_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader, fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Builder, fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeaderOrBuilder> classificationHeaderBuilder_;
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public boolean hasClassificationHeader() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader getClassificationHeader() {
        if (classificationHeaderBuilder_ == null) {
          return classificationHeader_;
        } else {
          return classificationHeaderBuilder_.getMessage();
        }
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public Builder setClassificationHeader(fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader value) {
        if (classificationHeaderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          classificationHeader_ = value;
          onChanged();
        } else {
          classificationHeaderBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public Builder setClassificationHeader(
          fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Builder builderForValue) {
        if (classificationHeaderBuilder_ == null) {
          classificationHeader_ = builderForValue.build();
          onChanged();
        } else {
          classificationHeaderBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public Builder mergeClassificationHeader(fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader value) {
        if (classificationHeaderBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              classificationHeader_ != fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.getDefaultInstance()) {
            classificationHeader_ =
              fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.newBuilder(classificationHeader_).mergeFrom(value).buildPartial();
          } else {
            classificationHeader_ = value;
          }
          onChanged();
        } else {
          classificationHeaderBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public Builder clearClassificationHeader() {
        if (classificationHeaderBuilder_ == null) {
          classificationHeader_ = fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.getDefaultInstance();
          onChanged();
        } else {
          classificationHeaderBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Builder getClassificationHeaderBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getClassificationHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      public fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeaderOrBuilder getClassificationHeaderOrBuilder() {
        if (classificationHeaderBuilder_ != null) {
          return classificationHeaderBuilder_.getMessageOrBuilder();
        } else {
          return classificationHeader_;
        }
      }
      /**
       * <code>required .falcon_psd.ClassificationHeader classification_header = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader, fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Builder, fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeaderOrBuilder> 
          getClassificationHeaderFieldBuilder() {
        if (classificationHeaderBuilder_ == null) {
          classificationHeaderBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader, fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeader.Builder, fv.protos.kepsvisor.FalconPSDMessages.ClassificationHeaderOrBuilder>(
                  classificationHeader_,
                  getParentForChildren(),
                  isClean());
          classificationHeader_ = null;
        }
        return classificationHeaderBuilder_;
      }

      // required double timestamp = 3;
      private double timestamp_ ;
      /**
       * <code>required double timestamp = 3;</code>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double timestamp = 3;</code>
       */
      public double getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required double timestamp = 3;</code>
       */
      public Builder setTimestamp(double value) {
        bitField0_ |= 0x00000004;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double timestamp = 3;</code>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timestamp_ = 0D;
        onChanged();
        return this;
      }

      // required string uuid = 4;
      private java.lang.Object uuid_ = "";
      /**
       * <code>required string uuid = 4;</code>
       */
      public boolean hasUuid() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string uuid = 4;</code>
       */
      public java.lang.String getUuid() {
        java.lang.Object ref = uuid_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          uuid_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string uuid = 4;</code>
       */
      public com.google.protobuf.ByteString
          getUuidBytes() {
        java.lang.Object ref = uuid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uuid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string uuid = 4;</code>
       */
      public Builder setUuid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        uuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string uuid = 4;</code>
       */
      public Builder clearUuid() {
        bitField0_ = (bitField0_ & ~0x00000008);
        uuid_ = getDefaultInstance().getUuid();
        onChanged();
        return this;
      }
      /**
       * <code>required string uuid = 4;</code>
       */
      public Builder setUuidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        uuid_ = value;
        onChanged();
        return this;
      }

      // optional .falcon_psd.BitFrameHeader header = 5;
      private fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader header_ = fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader, fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader.Builder, fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeaderOrBuilder> headerBuilder_;
      /**
       * <code>optional .falcon_psd.BitFrameHeader header = 5;</code>
       */
      public boolean hasHeader() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .falcon_psd.BitFrameHeader header = 5;</code>
       */
      public fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader getHeader() {
        if (headerBuilder_ == null) {
          return header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .falcon_psd.BitFrameHeader header = 5;</code>
       */
      public Builder setHeader(fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .falcon_psd.BitFrameHeader header = 5;</code>
       */
      public Builder setHeader(
          fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .falcon_psd.BitFrameHeader header = 5;</code>
       */
      public Builder mergeHeader(fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader value) {
        if (headerBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              header_ != fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader.getDefaultInstance()) {
            header_ =
              fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .falcon_psd.BitFrameHeader header = 5;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader.getDefaultInstance();
          onChanged();
        } else {
          headerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .falcon_psd.BitFrameHeader header = 5;</code>
       */
      public fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader.Builder getHeaderBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .falcon_psd.BitFrameHeader header = 5;</code>
       */
      public fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_;
        }
      }
      /**
       * <code>optional .falcon_psd.BitFrameHeader header = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader, fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader.Builder, fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader, fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeader.Builder, fv.protos.kepsvisor.FalconPSDMessages.BitFrameHeaderOrBuilder>(
                  header_,
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      // repeated int32 bit_data = 6;
      private java.util.List<java.lang.Integer> bitData_ = java.util.Collections.emptyList();
      private void ensureBitDataIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          bitData_ = new java.util.ArrayList<java.lang.Integer>(bitData_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 bit_data = 6;</code>
       */
      public java.util.List<java.lang.Integer>
          getBitDataList() {
        return java.util.Collections.unmodifiableList(bitData_);
      }
      /**
       * <code>repeated int32 bit_data = 6;</code>
       */
      public int getBitDataCount() {
        return bitData_.size();
      }
      /**
       * <code>repeated int32 bit_data = 6;</code>
       */
      public int getBitData(int index) {
        return bitData_.get(index);
      }
      /**
       * <code>repeated int32 bit_data = 6;</code>
       */
      public Builder setBitData(
          int index, int value) {
        ensureBitDataIsMutable();
        bitData_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bit_data = 6;</code>
       */
      public Builder addBitData(int value) {
        ensureBitDataIsMutable();
        bitData_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bit_data = 6;</code>
       */
      public Builder addAllBitData(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBitDataIsMutable();
        super.addAll(values, bitData_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bit_data = 6;</code>
       */
      public Builder clearBitData() {
        bitData_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:falcon_psd.BitFrame)
    }

    static {
      defaultInstance = new BitFrame(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:falcon_psd.BitFrame)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_psd_ClassificationHeader_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_psd_ClassificationHeader_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_psd_PSDHeader_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_psd_PSDHeader_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_psd_PSD_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_psd_PSD_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_psd_DensePSD_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_psd_DensePSD_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_psd_BitFrameHeader_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_psd_BitFrameHeader_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_falcon_psd_BitFrame_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_falcon_psd_BitFrame_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027FalconPSDMessages.proto\022\nfalcon_psd\"\235\003" +
      "\n\024ClassificationHeader\022C\n\016classification" +
      "\030\001 \002(\0162+.falcon_psd.ClassificationHeader" +
      ".ClassLevel\022A\n\013compartment\030\002 \001(\0162,.falco" +
      "n_psd.ClassificationHeader.Compartment\022>" +
      "\n\006rel_to\030\003 \001(\0162..falcon_psd.Classificati" +
      "onHeader.Releasability\"K\n\nClassLevel\022\020\n\014" +
      "UNCLASSIFIED\020\001\022\020\n\014CONFIDENTIAL\020\002\022\n\n\006SECR" +
      "ET\020\003\022\r\n\tTOPSECRET\020\004\"\035\n\013Compartment\022\006\n\002SI" +
      "\020\001\022\006\n\002TK\020\002\"Q\n\rReleasability\022\010\n\004FOUO\020\001\022\007\n",
      "\003ROK\020\002\022\007\n\003EY3\020\003\022\007\n\003EY4\020\004\022\007\n\003EY5\020\005\022\007\n\003EY9" +
      "\020\006\022\t\n\005NOFOR\020\007\"\204\002\n\tPSDHeader\022\014\n\004uuid\030\001 \002(" +
      "\t\022\027\n\017start_frequency\030\002 \002(\001\022\025\n\rend_freque" +
      "ncy\030\003 \002(\001\022\034\n\024resolution_bandwidth\030\004 \002(\001\022" +
      "\022\n\nnum_points\030\005 \002(\005\022\020\n\010duration\030\006 \002(\001\022\017\n" +
      "\007channel\030\007 \002(\005\022\027\n\017highlight_start\030\010 \001(\005\022" +
      "\025\n\rhighlight_end\030\t \001(\005\022\022\n\nsaturation\030\n \001" +
      "(\005\022\017\n\007psd_max\030\013 \001(\001\022\017\n\007psd_min\030\014 \001(\001\"\276\001\n" +
      "\003PSD\022\024\n\007msgName\030\001 \001(\t:\003PSD\022?\n\025classifica" +
      "tion_header\030\002 \002(\0132 .falcon_psd.Classific",
      "ationHeader\022\021\n\ttimestamp\030\003 \002(\001\022\014\n\004uuid\030\004" +
      " \002(\t\022)\n\npsd_header\030\005 \001(\0132\025.falcon_psd.PS" +
      "DHeader\022\024\n\010fft_data\030\006 \003(\002B\002\020\001\"\340\001\n\010DenseP" +
      "SD\022\032\n\007msgName\030\001 \001(\t:\tDENSE_PSD\022?\n\025classi" +
      "fication_header\030\002 \002(\0132 .falcon_psd.Class" +
      "ificationHeader\022\021\n\ttimestamp\030\003 \002(\001\022\014\n\004uu" +
      "id\030\004 \002(\t\022)\n\npsd_header\030\005 \001(\0132\025.falcon_ps" +
      "d.PSDHeader\022\013\n\003min\030\006 \002(\002\022\014\n\004step\030\007 \002(\002\022\020" +
      "\n\010fft_data\030\010 \003(\002\"\210\001\n\016BitFrameHeader\022\014\n\004u" +
      "uid\030\001 \002(\t\022\022\n\nnum_points\030\002 \002(\005\022\020\n\010duratio",
      "n\030\003 \002(\001\022\017\n\007channel\030\004 \002(\005\022\017\n\007bit_max\030\005 \001(" +
      "\001\022\017\n\007bit_min\030\006 \001(\001\022\017\n\007appName\030\007 \001(\t\"\306\001\n\010" +
      "BitFrame\022\032\n\007msgName\030\001 \001(\t:\tBIT_FRAME\022?\n\025" +
      "classification_header\030\002 \002(\0132 .falcon_psd" +
      ".ClassificationHeader\022\021\n\ttimestamp\030\003 \002(\001" +
      "\022\014\n\004uuid\030\004 \002(\t\022*\n\006header\030\005 \001(\0132\032.falcon_" +
      "psd.BitFrameHeader\022\020\n\010bit_data\030\006 \003(\005B\025\n\023" +
      "fv.protos.kepsvisor"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_falcon_psd_ClassificationHeader_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_falcon_psd_ClassificationHeader_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_psd_ClassificationHeader_descriptor,
              new java.lang.String[] { "Classification", "Compartment", "RelTo", });
          internal_static_falcon_psd_PSDHeader_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_falcon_psd_PSDHeader_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_psd_PSDHeader_descriptor,
              new java.lang.String[] { "Uuid", "StartFrequency", "EndFrequency", "ResolutionBandwidth", "NumPoints", "Duration", "Channel", "HighlightStart", "HighlightEnd", "Saturation", "PsdMax", "PsdMin", });
          internal_static_falcon_psd_PSD_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_falcon_psd_PSD_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_psd_PSD_descriptor,
              new java.lang.String[] { "MsgName", "ClassificationHeader", "Timestamp", "Uuid", "PsdHeader", "FftData", });
          internal_static_falcon_psd_DensePSD_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_falcon_psd_DensePSD_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_psd_DensePSD_descriptor,
              new java.lang.String[] { "MsgName", "ClassificationHeader", "Timestamp", "Uuid", "PsdHeader", "Min", "Step", "FftData", });
          internal_static_falcon_psd_BitFrameHeader_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_falcon_psd_BitFrameHeader_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_psd_BitFrameHeader_descriptor,
              new java.lang.String[] { "Uuid", "NumPoints", "Duration", "Channel", "BitMax", "BitMin", "AppName", });
          internal_static_falcon_psd_BitFrame_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_falcon_psd_BitFrame_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_falcon_psd_BitFrame_descriptor,
              new java.lang.String[] { "MsgName", "ClassificationHeader", "Timestamp", "Uuid", "Header", "BitData", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
