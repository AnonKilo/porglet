// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service_rfswitch_controller.proto

package fv.protos.kepsvisor;

public final class ServiceRfswitchController {
  private ServiceRfswitchController() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface rfSwitchControllerConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string msgName = 1 [default = "service_rfswitch_controller.rfSwitchConfig"];
    /**
     * <code>optional string msgName = 1 [default = "service_rfswitch_controller.rfSwitchConfig"];</code>
     */
    boolean hasMsgName();
    /**
     * <code>optional string msgName = 1 [default = "service_rfswitch_controller.rfSwitchConfig"];</code>
     */
    java.lang.String getMsgName();
    /**
     * <code>optional string msgName = 1 [default = "service_rfswitch_controller.rfSwitchConfig"];</code>
     */
    com.google.protobuf.ByteString
        getMsgNameBytes();

    // optional string device = 2;
    /**
     * <code>optional string device = 2;</code>
     */
    boolean hasDevice();
    /**
     * <code>optional string device = 2;</code>
     */
    java.lang.String getDevice();
    /**
     * <code>optional string device = 2;</code>
     */
    com.google.protobuf.ByteString
        getDeviceBytes();

    // optional int32 baud = 3 [default = 115200];
    /**
     * <code>optional int32 baud = 3 [default = 115200];</code>
     */
    boolean hasBaud();
    /**
     * <code>optional int32 baud = 3 [default = 115200];</code>
     */
    int getBaud();

    // optional int32 timeout = 4 [default = 180];
    /**
     * <code>optional int32 timeout = 4 [default = 180];</code>
     */
    boolean hasTimeout();
    /**
     * <code>optional int32 timeout = 4 [default = 180];</code>
     */
    int getTimeout();

    // optional int32 maxAttempts = 5 [default = 10];
    /**
     * <code>optional int32 maxAttempts = 5 [default = 10];</code>
     */
    boolean hasMaxAttempts();
    /**
     * <code>optional int32 maxAttempts = 5 [default = 10];</code>
     */
    int getMaxAttempts();

    // optional int32 writeTimeout = 6 [default = 100];
    /**
     * <code>optional int32 writeTimeout = 6 [default = 100];</code>
     */
    boolean hasWriteTimeout();
    /**
     * <code>optional int32 writeTimeout = 6 [default = 100];</code>
     */
    int getWriteTimeout();
  }
  /**
   * Protobuf type {@code service_rfswitch_controller.rfSwitchControllerConfig}
   */
  public static final class rfSwitchControllerConfig extends
      com.google.protobuf.GeneratedMessage
      implements rfSwitchControllerConfigOrBuilder {
    // Use rfSwitchControllerConfig.newBuilder() to construct.
    private rfSwitchControllerConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private rfSwitchControllerConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final rfSwitchControllerConfig defaultInstance;
    public static rfSwitchControllerConfig getDefaultInstance() {
      return defaultInstance;
    }

    public rfSwitchControllerConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private rfSwitchControllerConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              msgName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              device_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              baud_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              timeout_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              maxAttempts_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              writeTimeout_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fv.protos.kepsvisor.ServiceRfswitchController.internal_static_service_rfswitch_controller_rfSwitchControllerConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fv.protos.kepsvisor.ServiceRfswitchController.internal_static_service_rfswitch_controller_rfSwitchControllerConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig.class, fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<rfSwitchControllerConfig> PARSER =
        new com.google.protobuf.AbstractParser<rfSwitchControllerConfig>() {
      public rfSwitchControllerConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new rfSwitchControllerConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<rfSwitchControllerConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string msgName = 1 [default = "service_rfswitch_controller.rfSwitchConfig"];
    public static final int MSGNAME_FIELD_NUMBER = 1;
    private java.lang.Object msgName_;
    /**
     * <code>optional string msgName = 1 [default = "service_rfswitch_controller.rfSwitchConfig"];</code>
     */
    public boolean hasMsgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string msgName = 1 [default = "service_rfswitch_controller.rfSwitchConfig"];</code>
     */
    public java.lang.String getMsgName() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msgName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msgName = 1 [default = "service_rfswitch_controller.rfSwitchConfig"];</code>
     */
    public com.google.protobuf.ByteString
        getMsgNameBytes() {
      java.lang.Object ref = msgName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string device = 2;
    public static final int DEVICE_FIELD_NUMBER = 2;
    private java.lang.Object device_;
    /**
     * <code>optional string device = 2;</code>
     */
    public boolean hasDevice() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string device = 2;</code>
     */
    public java.lang.String getDevice() {
      java.lang.Object ref = device_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          device_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string device = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDeviceBytes() {
      java.lang.Object ref = device_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        device_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 baud = 3 [default = 115200];
    public static final int BAUD_FIELD_NUMBER = 3;
    private int baud_;
    /**
     * <code>optional int32 baud = 3 [default = 115200];</code>
     */
    public boolean hasBaud() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 baud = 3 [default = 115200];</code>
     */
    public int getBaud() {
      return baud_;
    }

    // optional int32 timeout = 4 [default = 180];
    public static final int TIMEOUT_FIELD_NUMBER = 4;
    private int timeout_;
    /**
     * <code>optional int32 timeout = 4 [default = 180];</code>
     */
    public boolean hasTimeout() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 timeout = 4 [default = 180];</code>
     */
    public int getTimeout() {
      return timeout_;
    }

    // optional int32 maxAttempts = 5 [default = 10];
    public static final int MAXATTEMPTS_FIELD_NUMBER = 5;
    private int maxAttempts_;
    /**
     * <code>optional int32 maxAttempts = 5 [default = 10];</code>
     */
    public boolean hasMaxAttempts() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 maxAttempts = 5 [default = 10];</code>
     */
    public int getMaxAttempts() {
      return maxAttempts_;
    }

    // optional int32 writeTimeout = 6 [default = 100];
    public static final int WRITETIMEOUT_FIELD_NUMBER = 6;
    private int writeTimeout_;
    /**
     * <code>optional int32 writeTimeout = 6 [default = 100];</code>
     */
    public boolean hasWriteTimeout() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 writeTimeout = 6 [default = 100];</code>
     */
    public int getWriteTimeout() {
      return writeTimeout_;
    }

    private void initFields() {
      msgName_ = "service_rfswitch_controller.rfSwitchConfig";
      device_ = "";
      baud_ = 115200;
      timeout_ = 180;
      maxAttempts_ = 10;
      writeTimeout_ = 100;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDeviceBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, baud_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, timeout_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, maxAttempts_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, writeTimeout_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMsgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDeviceBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, baud_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, timeout_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, maxAttempts_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, writeTimeout_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code service_rfswitch_controller.rfSwitchControllerConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return fv.protos.kepsvisor.ServiceRfswitchController.internal_static_service_rfswitch_controller_rfSwitchControllerConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return fv.protos.kepsvisor.ServiceRfswitchController.internal_static_service_rfswitch_controller_rfSwitchControllerConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig.class, fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig.Builder.class);
      }

      // Construct using fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        msgName_ = "service_rfswitch_controller.rfSwitchConfig";
        bitField0_ = (bitField0_ & ~0x00000001);
        device_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        baud_ = 115200;
        bitField0_ = (bitField0_ & ~0x00000004);
        timeout_ = 180;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxAttempts_ = 10;
        bitField0_ = (bitField0_ & ~0x00000010);
        writeTimeout_ = 100;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return fv.protos.kepsvisor.ServiceRfswitchController.internal_static_service_rfswitch_controller_rfSwitchControllerConfig_descriptor;
      }

      public fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig getDefaultInstanceForType() {
        return fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig.getDefaultInstance();
      }

      public fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig build() {
        fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig buildPartial() {
        fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig result = new fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.msgName_ = msgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.device_ = device_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.baud_ = baud_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.timeout_ = timeout_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.maxAttempts_ = maxAttempts_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.writeTimeout_ = writeTimeout_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig) {
          return mergeFrom((fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig other) {
        if (other == fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig.getDefaultInstance()) return this;
        if (other.hasMsgName()) {
          bitField0_ |= 0x00000001;
          msgName_ = other.msgName_;
          onChanged();
        }
        if (other.hasDevice()) {
          bitField0_ |= 0x00000002;
          device_ = other.device_;
          onChanged();
        }
        if (other.hasBaud()) {
          setBaud(other.getBaud());
        }
        if (other.hasTimeout()) {
          setTimeout(other.getTimeout());
        }
        if (other.hasMaxAttempts()) {
          setMaxAttempts(other.getMaxAttempts());
        }
        if (other.hasWriteTimeout()) {
          setWriteTimeout(other.getWriteTimeout());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (fv.protos.kepsvisor.ServiceRfswitchController.rfSwitchControllerConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string msgName = 1 [default = "service_rfswitch_controller.rfSwitchConfig"];
      private java.lang.Object msgName_ = "service_rfswitch_controller.rfSwitchConfig";
      /**
       * <code>optional string msgName = 1 [default = "service_rfswitch_controller.rfSwitchConfig"];</code>
       */
      public boolean hasMsgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string msgName = 1 [default = "service_rfswitch_controller.rfSwitchConfig"];</code>
       */
      public java.lang.String getMsgName() {
        java.lang.Object ref = msgName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msgName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "service_rfswitch_controller.rfSwitchConfig"];</code>
       */
      public com.google.protobuf.ByteString
          getMsgNameBytes() {
        java.lang.Object ref = msgName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msgName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msgName = 1 [default = "service_rfswitch_controller.rfSwitchConfig"];</code>
       */
      public Builder setMsgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "service_rfswitch_controller.rfSwitchConfig"];</code>
       */
      public Builder clearMsgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        msgName_ = getDefaultInstance().getMsgName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msgName = 1 [default = "service_rfswitch_controller.rfSwitchConfig"];</code>
       */
      public Builder setMsgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        msgName_ = value;
        onChanged();
        return this;
      }

      // optional string device = 2;
      private java.lang.Object device_ = "";
      /**
       * <code>optional string device = 2;</code>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string device = 2;</code>
       */
      public java.lang.String getDevice() {
        java.lang.Object ref = device_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          device_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string device = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceBytes() {
        java.lang.Object ref = device_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          device_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string device = 2;</code>
       */
      public Builder setDevice(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        device_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string device = 2;</code>
       */
      public Builder clearDevice() {
        bitField0_ = (bitField0_ & ~0x00000002);
        device_ = getDefaultInstance().getDevice();
        onChanged();
        return this;
      }
      /**
       * <code>optional string device = 2;</code>
       */
      public Builder setDeviceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        device_ = value;
        onChanged();
        return this;
      }

      // optional int32 baud = 3 [default = 115200];
      private int baud_ = 115200;
      /**
       * <code>optional int32 baud = 3 [default = 115200];</code>
       */
      public boolean hasBaud() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 baud = 3 [default = 115200];</code>
       */
      public int getBaud() {
        return baud_;
      }
      /**
       * <code>optional int32 baud = 3 [default = 115200];</code>
       */
      public Builder setBaud(int value) {
        bitField0_ |= 0x00000004;
        baud_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 baud = 3 [default = 115200];</code>
       */
      public Builder clearBaud() {
        bitField0_ = (bitField0_ & ~0x00000004);
        baud_ = 115200;
        onChanged();
        return this;
      }

      // optional int32 timeout = 4 [default = 180];
      private int timeout_ = 180;
      /**
       * <code>optional int32 timeout = 4 [default = 180];</code>
       */
      public boolean hasTimeout() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 timeout = 4 [default = 180];</code>
       */
      public int getTimeout() {
        return timeout_;
      }
      /**
       * <code>optional int32 timeout = 4 [default = 180];</code>
       */
      public Builder setTimeout(int value) {
        bitField0_ |= 0x00000008;
        timeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 timeout = 4 [default = 180];</code>
       */
      public Builder clearTimeout() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timeout_ = 180;
        onChanged();
        return this;
      }

      // optional int32 maxAttempts = 5 [default = 10];
      private int maxAttempts_ = 10;
      /**
       * <code>optional int32 maxAttempts = 5 [default = 10];</code>
       */
      public boolean hasMaxAttempts() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 maxAttempts = 5 [default = 10];</code>
       */
      public int getMaxAttempts() {
        return maxAttempts_;
      }
      /**
       * <code>optional int32 maxAttempts = 5 [default = 10];</code>
       */
      public Builder setMaxAttempts(int value) {
        bitField0_ |= 0x00000010;
        maxAttempts_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxAttempts = 5 [default = 10];</code>
       */
      public Builder clearMaxAttempts() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxAttempts_ = 10;
        onChanged();
        return this;
      }

      // optional int32 writeTimeout = 6 [default = 100];
      private int writeTimeout_ = 100;
      /**
       * <code>optional int32 writeTimeout = 6 [default = 100];</code>
       */
      public boolean hasWriteTimeout() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 writeTimeout = 6 [default = 100];</code>
       */
      public int getWriteTimeout() {
        return writeTimeout_;
      }
      /**
       * <code>optional int32 writeTimeout = 6 [default = 100];</code>
       */
      public Builder setWriteTimeout(int value) {
        bitField0_ |= 0x00000020;
        writeTimeout_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 writeTimeout = 6 [default = 100];</code>
       */
      public Builder clearWriteTimeout() {
        bitField0_ = (bitField0_ & ~0x00000020);
        writeTimeout_ = 100;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:service_rfswitch_controller.rfSwitchControllerConfig)
    }

    static {
      defaultInstance = new rfSwitchControllerConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:service_rfswitch_controller.rfSwitchControllerConfig)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_service_rfswitch_controller_rfSwitchControllerConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_service_rfswitch_controller_rfSwitchControllerConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!service_rfswitch_controller.proto\022\033ser" +
      "vice_rfswitch_controller\"\307\001\n\030rfSwitchCon" +
      "trollerConfig\022;\n\007msgName\030\001 \001(\t:*service_" +
      "rfswitch_controller.rfSwitchConfig\022\016\n\006de" +
      "vice\030\002 \001(\t\022\024\n\004baud\030\003 \001(\005:\006115200\022\024\n\007time" +
      "out\030\004 \001(\005:\003180\022\027\n\013maxAttempts\030\005 \001(\005:\00210\022" +
      "\031\n\014writeTimeout\030\006 \001(\005:\003100B\025\n\023fv.protos." +
      "kepsvisor"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_service_rfswitch_controller_rfSwitchControllerConfig_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_service_rfswitch_controller_rfSwitchControllerConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_service_rfswitch_controller_rfSwitchControllerConfig_descriptor,
              new java.lang.String[] { "MsgName", "Device", "Baud", "Timeout", "MaxAttempts", "WriteTimeout", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
