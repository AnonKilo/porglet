// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BitManifestMessage.proto

package com.srcinc.ngi.data;

public final class BitManifestMessage {
  private BitManifestMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface BitManifestOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;
    /**
     * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
     *
     * <pre>
     * The top level nodes for the tree. All sub-nodes are contained within these nodes.
     * </pre>
     */
    java.util.List<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode> 
        getRootNodeList();
    /**
     * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
     *
     * <pre>
     * The top level nodes for the tree. All sub-nodes are contained within these nodes.
     * </pre>
     */
    com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode getRootNode(int index);
    /**
     * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
     *
     * <pre>
     * The top level nodes for the tree. All sub-nodes are contained within these nodes.
     * </pre>
     */
    int getRootNodeCount();
    /**
     * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
     *
     * <pre>
     * The top level nodes for the tree. All sub-nodes are contained within these nodes.
     * </pre>
     */
    java.util.List<? extends com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNodeOrBuilder> 
        getRootNodeOrBuilderList();
    /**
     * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
     *
     * <pre>
     * The top level nodes for the tree. All sub-nodes are contained within these nodes.
     * </pre>
     */
    com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNodeOrBuilder getRootNodeOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.srcinc.ngi.data.BitManifest}
   *
   * <pre>
   * Description:
   * -   The BIT Manifest message provides a tree structure that contains the
   * identifying information for every BIT field that will be sent by the sensor.
   * ................
   * Direction:
   * -   From Sensor
   * ................
   * Send Conditions:
   * -   On Connect
   * -   On Change
   * </pre>
   */
  public static final class BitManifest extends
      com.google.protobuf.GeneratedMessage
      implements BitManifestOrBuilder {
    // Use BitManifest.newBuilder() to construct.
    private BitManifest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BitManifest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BitManifest defaultInstance;
    public static BitManifest getDefaultInstance() {
      return defaultInstance;
    }

    public BitManifest getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BitManifest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                rootNode_ = new java.util.ArrayList<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode>();
                mutable_bitField0_ |= 0x00000001;
              }
              rootNode_.add(input.readMessage(com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          rootNode_ = java.util.Collections.unmodifiableList(rootNode_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.srcinc.ngi.data.BitManifestMessage.BitManifest.class, com.srcinc.ngi.data.BitManifestMessage.BitManifest.Builder.class);
    }

    public static com.google.protobuf.Parser<BitManifest> PARSER =
        new com.google.protobuf.AbstractParser<BitManifest>() {
      public BitManifest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BitManifest(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BitManifest> getParserForType() {
      return PARSER;
    }

    public interface BitPropertyOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required int32 id = 1;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * The identifier for this property. BIT values will be sent with this ID.
       * </pre>
       */
      boolean hasId();
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * The identifier for this property. BIT values will be sent with this ID.
       * </pre>
       */
      int getId();

      // required string display_name = 2;
      /**
       * <code>required string display_name = 2;</code>
       *
       * <pre>
       * The string that should be displayed for this property
       * </pre>
       */
      boolean hasDisplayName();
      /**
       * <code>required string display_name = 2;</code>
       *
       * <pre>
       * The string that should be displayed for this property
       * </pre>
       */
      java.lang.String getDisplayName();
      /**
       * <code>required string display_name = 2;</code>
       *
       * <pre>
       * The string that should be displayed for this property
       * </pre>
       */
      com.google.protobuf.ByteString
          getDisplayNameBytes();

      // optional string description = 3;
      /**
       * <code>optional string description = 3;</code>
       *
       * <pre>
       * A string that describes this property
       * </pre>
       */
      boolean hasDescription();
      /**
       * <code>optional string description = 3;</code>
       *
       * <pre>
       * A string that describes this property
       * </pre>
       */
      java.lang.String getDescription();
      /**
       * <code>optional string description = 3;</code>
       *
       * <pre>
       * A string that describes this property
       * </pre>
       */
      com.google.protobuf.ByteString
          getDescriptionBytes();

      // optional .com.srcinc.ngi.data.BitManifest.BitProperty.Units units = 4;
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Units units = 4;</code>
       *
       * <pre>
       * The units for the value associated with this field
       * </pre>
       */
      boolean hasUnits();
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Units units = 4;</code>
       *
       * <pre>
       * The units for the value associated with this field
       * </pre>
       */
      com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Units getUnits();

      // optional .com.srcinc.ngi.data.BitManifest.BitProperty.Types type = 5;
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Types type = 5;</code>
       *
       * <pre>
       * The type for the value associated with this field
       * </pre>
       */
      boolean hasType();
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Types type = 5;</code>
       *
       * <pre>
       * The type for the value associated with this field
       * </pre>
       */
      com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Types getType();

      // optional .com.srcinc.ngi.common.UserLevel min_user_level = 6;
      /**
       * <code>optional .com.srcinc.ngi.common.UserLevel min_user_level = 6;</code>
       *
       * <pre>
       * The level that should be required to view this property. This only needs
       * to be included if the property requires a higher level of permissions
       * than the node it is associated with.
       * </pre>
       */
      boolean hasMinUserLevel();
      /**
       * <code>optional .com.srcinc.ngi.common.UserLevel min_user_level = 6;</code>
       *
       * <pre>
       * The level that should be required to view this property. This only needs
       * to be included if the property requires a higher level of permissions
       * than the node it is associated with.
       * </pre>
       */
      com.srcinc.ngi.common.Users.UserLevel getMinUserLevel();

      // optional .com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds thresholds = 7;
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds thresholds = 7;</code>
       *
       * <pre>
       * The values that constitute the field being degraded/faulted. These
       * fields allow for values to be graphed.
       * </pre>
       */
      boolean hasThresholds();
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds thresholds = 7;</code>
       *
       * <pre>
       * The values that constitute the field being degraded/faulted. These
       * fields allow for values to be graphed.
       * </pre>
       */
      com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds getThresholds();
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds thresholds = 7;</code>
       *
       * <pre>
       * The values that constitute the field being degraded/faulted. These
       * fields allow for values to be graphed.
       * </pre>
       */
      com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.ThresholdsOrBuilder getThresholdsOrBuilder();

      // optional string group_name = 8;
      /**
       * <code>optional string group_name = 8;</code>
       *
       * <pre>
       * The name of the group this property should fall into (if any).
       * </pre>
       */
      boolean hasGroupName();
      /**
       * <code>optional string group_name = 8;</code>
       *
       * <pre>
       * The name of the group this property should fall into (if any).
       * </pre>
       */
      java.lang.String getGroupName();
      /**
       * <code>optional string group_name = 8;</code>
       *
       * <pre>
       * The name of the group this property should fall into (if any).
       * </pre>
       */
      com.google.protobuf.ByteString
          getGroupNameBytes();

      // optional int32 history_length = 9;
      /**
       * <code>optional int32 history_length = 9;</code>
       *
       * <pre>
       * The number of historical entries that are valid for this property. This
       * can be used for graphing historical data.
       * </pre>
       */
      boolean hasHistoryLength();
      /**
       * <code>optional int32 history_length = 9;</code>
       *
       * <pre>
       * The number of historical entries that are valid for this property. This
       * can be used for graphing historical data.
       * </pre>
       */
      int getHistoryLength();
    }
    /**
     * Protobuf type {@code com.srcinc.ngi.data.BitManifest.BitProperty}
     *
     * <pre>
     * information about a property
     * </pre>
     */
    public static final class BitProperty extends
        com.google.protobuf.GeneratedMessage
        implements BitPropertyOrBuilder {
      // Use BitProperty.newBuilder() to construct.
      private BitProperty(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private BitProperty(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final BitProperty defaultInstance;
      public static BitProperty getDefaultInstance() {
        return defaultInstance;
      }

      public BitProperty getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private BitProperty(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                id_ = input.readInt32();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                displayName_ = input.readBytes();
                break;
              }
              case 26: {
                bitField0_ |= 0x00000004;
                description_ = input.readBytes();
                break;
              }
              case 32: {
                int rawValue = input.readEnum();
                com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Units value = com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Units.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                } else {
                  bitField0_ |= 0x00000008;
                  units_ = value;
                }
                break;
              }
              case 40: {
                int rawValue = input.readEnum();
                com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Types value = com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Types.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(5, rawValue);
                } else {
                  bitField0_ |= 0x00000010;
                  type_ = value;
                }
                break;
              }
              case 48: {
                int rawValue = input.readEnum();
                com.srcinc.ngi.common.Users.UserLevel value = com.srcinc.ngi.common.Users.UserLevel.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(6, rawValue);
                } else {
                  bitField0_ |= 0x00000020;
                  minUserLevel_ = value;
                }
                break;
              }
              case 58: {
                com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds.Builder subBuilder = null;
                if (((bitField0_ & 0x00000040) == 0x00000040)) {
                  subBuilder = thresholds_.toBuilder();
                }
                thresholds_ = input.readMessage(com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(thresholds_);
                  thresholds_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000040;
                break;
              }
              case 66: {
                bitField0_ |= 0x00000080;
                groupName_ = input.readBytes();
                break;
              }
              case 72: {
                bitField0_ |= 0x00000100;
                historyLength_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifest_BitProperty_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifest_BitProperty_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.class, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Builder.class);
      }

      public static com.google.protobuf.Parser<BitProperty> PARSER =
          new com.google.protobuf.AbstractParser<BitProperty>() {
        public BitProperty parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BitProperty(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<BitProperty> getParserForType() {
        return PARSER;
      }

      /**
       * Protobuf enum {@code com.srcinc.ngi.data.BitManifest.BitProperty.Units}
       *
       * <pre>
       * all possible units for properties
       * </pre>
       */
      public enum Units
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>UNITS_UNKNOWN = 0;</code>
         *
         * <pre>
         *Unknown
         * </pre>
         */
        UNITS_UNKNOWN(0, 0),
        /**
         * <code>UNITS_VOLTS = 1;</code>
         *
         * <pre>
         *Volts
         * </pre>
         */
        UNITS_VOLTS(1, 1),
        /**
         * <code>UNITS_AMPS = 2;</code>
         *
         * <pre>
         *Amps
         * </pre>
         */
        UNITS_AMPS(2, 2),
        /**
         * <code>UNITS_DB = 3;</code>
         *
         * <pre>
         *Decibels
         * </pre>
         */
        UNITS_DB(3, 3),
        /**
         * <code>UNITS_CELSIUS = 4;</code>
         *
         * <pre>
         *Degrees Celsius
         * </pre>
         */
        UNITS_CELSIUS(4, 4),
        /**
         * <code>UNITS_HZ = 5;</code>
         *
         * <pre>
         *Hertz
         * </pre>
         */
        UNITS_HZ(5, 5),
        /**
         * <code>UNITS_TIMESPAN = 6;</code>
         *
         * <pre>
         *A duration in seconds
         * </pre>
         */
        UNITS_TIMESPAN(6, 6),
        /**
         * <code>UNITS_TIMESPEC = 7;</code>
         *
         * <pre>
         *Seconds since UTC epoch
         * </pre>
         */
        UNITS_TIMESPEC(7, 7),
        /**
         * <code>UNITS_RADIANS = 8;</code>
         *
         * <pre>
         *Angle in radians
         * </pre>
         */
        UNITS_RADIANS(8, 8),
        /**
         * <code>UNITS_KBPS = 9;</code>
         *
         * <pre>
         *Kilobits per second
         * </pre>
         */
        UNITS_KBPS(9, 9),
        /**
         * <code>UNITS_PERCENT = 10;</code>
         *
         * <pre>
         *Percentage
         * </pre>
         */
        UNITS_PERCENT(10, 10),
        /**
         * <code>UNITS_ECEF = 11;</code>
         *
         * <pre>
         *Earth Center, Earth Fixed
         * </pre>
         */
        UNITS_ECEF(11, 11),
        ;

        /**
         * <code>UNITS_UNKNOWN = 0;</code>
         *
         * <pre>
         *Unknown
         * </pre>
         */
        public static final int UNITS_UNKNOWN_VALUE = 0;
        /**
         * <code>UNITS_VOLTS = 1;</code>
         *
         * <pre>
         *Volts
         * </pre>
         */
        public static final int UNITS_VOLTS_VALUE = 1;
        /**
         * <code>UNITS_AMPS = 2;</code>
         *
         * <pre>
         *Amps
         * </pre>
         */
        public static final int UNITS_AMPS_VALUE = 2;
        /**
         * <code>UNITS_DB = 3;</code>
         *
         * <pre>
         *Decibels
         * </pre>
         */
        public static final int UNITS_DB_VALUE = 3;
        /**
         * <code>UNITS_CELSIUS = 4;</code>
         *
         * <pre>
         *Degrees Celsius
         * </pre>
         */
        public static final int UNITS_CELSIUS_VALUE = 4;
        /**
         * <code>UNITS_HZ = 5;</code>
         *
         * <pre>
         *Hertz
         * </pre>
         */
        public static final int UNITS_HZ_VALUE = 5;
        /**
         * <code>UNITS_TIMESPAN = 6;</code>
         *
         * <pre>
         *A duration in seconds
         * </pre>
         */
        public static final int UNITS_TIMESPAN_VALUE = 6;
        /**
         * <code>UNITS_TIMESPEC = 7;</code>
         *
         * <pre>
         *Seconds since UTC epoch
         * </pre>
         */
        public static final int UNITS_TIMESPEC_VALUE = 7;
        /**
         * <code>UNITS_RADIANS = 8;</code>
         *
         * <pre>
         *Angle in radians
         * </pre>
         */
        public static final int UNITS_RADIANS_VALUE = 8;
        /**
         * <code>UNITS_KBPS = 9;</code>
         *
         * <pre>
         *Kilobits per second
         * </pre>
         */
        public static final int UNITS_KBPS_VALUE = 9;
        /**
         * <code>UNITS_PERCENT = 10;</code>
         *
         * <pre>
         *Percentage
         * </pre>
         */
        public static final int UNITS_PERCENT_VALUE = 10;
        /**
         * <code>UNITS_ECEF = 11;</code>
         *
         * <pre>
         *Earth Center, Earth Fixed
         * </pre>
         */
        public static final int UNITS_ECEF_VALUE = 11;


        public final int getNumber() { return value; }

        public static Units valueOf(int value) {
          switch (value) {
            case 0: return UNITS_UNKNOWN;
            case 1: return UNITS_VOLTS;
            case 2: return UNITS_AMPS;
            case 3: return UNITS_DB;
            case 4: return UNITS_CELSIUS;
            case 5: return UNITS_HZ;
            case 6: return UNITS_TIMESPAN;
            case 7: return UNITS_TIMESPEC;
            case 8: return UNITS_RADIANS;
            case 9: return UNITS_KBPS;
            case 10: return UNITS_PERCENT;
            case 11: return UNITS_ECEF;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Units>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<Units>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Units>() {
                public Units findValueByNumber(int number) {
                  return Units.valueOf(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.getDescriptor().getEnumTypes().get(0);
        }

        private static final Units[] VALUES = values();

        public static Units valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private Units(int index, int value) {
          this.index = index;
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:com.srcinc.ngi.data.BitManifest.BitProperty.Units)
      }

      /**
       * Protobuf enum {@code com.srcinc.ngi.data.BitManifest.BitProperty.Types}
       */
      public enum Types
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>TYPE_UNKNOWN = 0;</code>
         */
        TYPE_UNKNOWN(0, 0),
        /**
         * <code>TYPE_BOOL = 1;</code>
         */
        TYPE_BOOL(1, 1),
        /**
         * <code>TYPE_INT = 2;</code>
         */
        TYPE_INT(2, 2),
        /**
         * <code>TYPE_DOUBLE = 3;</code>
         */
        TYPE_DOUBLE(3, 3),
        /**
         * <code>TYPE_STRING = 4;</code>
         */
        TYPE_STRING(4, 4),
        /**
         * <code>TYPE_DOUBLE_REPEATED = 5;</code>
         */
        TYPE_DOUBLE_REPEATED(5, 5),
        ;

        /**
         * <code>TYPE_UNKNOWN = 0;</code>
         */
        public static final int TYPE_UNKNOWN_VALUE = 0;
        /**
         * <code>TYPE_BOOL = 1;</code>
         */
        public static final int TYPE_BOOL_VALUE = 1;
        /**
         * <code>TYPE_INT = 2;</code>
         */
        public static final int TYPE_INT_VALUE = 2;
        /**
         * <code>TYPE_DOUBLE = 3;</code>
         */
        public static final int TYPE_DOUBLE_VALUE = 3;
        /**
         * <code>TYPE_STRING = 4;</code>
         */
        public static final int TYPE_STRING_VALUE = 4;
        /**
         * <code>TYPE_DOUBLE_REPEATED = 5;</code>
         */
        public static final int TYPE_DOUBLE_REPEATED_VALUE = 5;


        public final int getNumber() { return value; }

        public static Types valueOf(int value) {
          switch (value) {
            case 0: return TYPE_UNKNOWN;
            case 1: return TYPE_BOOL;
            case 2: return TYPE_INT;
            case 3: return TYPE_DOUBLE;
            case 4: return TYPE_STRING;
            case 5: return TYPE_DOUBLE_REPEATED;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Types>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<Types>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Types>() {
                public Types findValueByNumber(int number) {
                  return Types.valueOf(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.getDescriptor().getEnumTypes().get(1);
        }

        private static final Types[] VALUES = values();

        public static Types valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private Types(int index, int value) {
          this.index = index;
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:com.srcinc.ngi.data.BitManifest.BitProperty.Types)
      }

      public interface ThresholdsOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional double max_faulted = 1;
        /**
         * <code>optional double max_faulted = 1;</code>
         *
         * <pre>
         * The threshold above which a value is faulted
         * </pre>
         */
        boolean hasMaxFaulted();
        /**
         * <code>optional double max_faulted = 1;</code>
         *
         * <pre>
         * The threshold above which a value is faulted
         * </pre>
         */
        double getMaxFaulted();

        // optional double max_degraded = 2;
        /**
         * <code>optional double max_degraded = 2;</code>
         *
         * <pre>
         * The threshold above which a value is degraded
         * </pre>
         */
        boolean hasMaxDegraded();
        /**
         * <code>optional double max_degraded = 2;</code>
         *
         * <pre>
         * The threshold above which a value is degraded
         * </pre>
         */
        double getMaxDegraded();

        // optional double min_degraded = 3;
        /**
         * <code>optional double min_degraded = 3;</code>
         *
         * <pre>
         * The threshold below which a value is degraded
         * </pre>
         */
        boolean hasMinDegraded();
        /**
         * <code>optional double min_degraded = 3;</code>
         *
         * <pre>
         * The threshold below which a value is degraded
         * </pre>
         */
        double getMinDegraded();

        // optional double min_faulted = 4;
        /**
         * <code>optional double min_faulted = 4;</code>
         *
         * <pre>
         * The threshold below which a value is faulted
         * </pre>
         */
        boolean hasMinFaulted();
        /**
         * <code>optional double min_faulted = 4;</code>
         *
         * <pre>
         * The threshold below which a value is faulted
         * </pre>
         */
        double getMinFaulted();
      }
      /**
       * Protobuf type {@code com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds}
       *
       * <pre>
       * The min/max thresholds for displaying values. Not all properties will
       * use all threshold fields.
       * </pre>
       */
      public static final class Thresholds extends
          com.google.protobuf.GeneratedMessage
          implements ThresholdsOrBuilder {
        // Use Thresholds.newBuilder() to construct.
        private Thresholds(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Thresholds(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Thresholds defaultInstance;
        public static Thresholds getDefaultInstance() {
          return defaultInstance;
        }

        public Thresholds getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Thresholds(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 9: {
                  bitField0_ |= 0x00000001;
                  maxFaulted_ = input.readDouble();
                  break;
                }
                case 17: {
                  bitField0_ |= 0x00000002;
                  maxDegraded_ = input.readDouble();
                  break;
                }
                case 25: {
                  bitField0_ |= 0x00000004;
                  minDegraded_ = input.readDouble();
                  break;
                }
                case 33: {
                  bitField0_ |= 0x00000008;
                  minFaulted_ = input.readDouble();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifest_BitProperty_Thresholds_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifest_BitProperty_Thresholds_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds.class, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds.Builder.class);
        }

        public static com.google.protobuf.Parser<Thresholds> PARSER =
            new com.google.protobuf.AbstractParser<Thresholds>() {
          public Thresholds parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Thresholds(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Thresholds> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional double max_faulted = 1;
        public static final int MAX_FAULTED_FIELD_NUMBER = 1;
        private double maxFaulted_;
        /**
         * <code>optional double max_faulted = 1;</code>
         *
         * <pre>
         * The threshold above which a value is faulted
         * </pre>
         */
        public boolean hasMaxFaulted() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional double max_faulted = 1;</code>
         *
         * <pre>
         * The threshold above which a value is faulted
         * </pre>
         */
        public double getMaxFaulted() {
          return maxFaulted_;
        }

        // optional double max_degraded = 2;
        public static final int MAX_DEGRADED_FIELD_NUMBER = 2;
        private double maxDegraded_;
        /**
         * <code>optional double max_degraded = 2;</code>
         *
         * <pre>
         * The threshold above which a value is degraded
         * </pre>
         */
        public boolean hasMaxDegraded() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional double max_degraded = 2;</code>
         *
         * <pre>
         * The threshold above which a value is degraded
         * </pre>
         */
        public double getMaxDegraded() {
          return maxDegraded_;
        }

        // optional double min_degraded = 3;
        public static final int MIN_DEGRADED_FIELD_NUMBER = 3;
        private double minDegraded_;
        /**
         * <code>optional double min_degraded = 3;</code>
         *
         * <pre>
         * The threshold below which a value is degraded
         * </pre>
         */
        public boolean hasMinDegraded() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional double min_degraded = 3;</code>
         *
         * <pre>
         * The threshold below which a value is degraded
         * </pre>
         */
        public double getMinDegraded() {
          return minDegraded_;
        }

        // optional double min_faulted = 4;
        public static final int MIN_FAULTED_FIELD_NUMBER = 4;
        private double minFaulted_;
        /**
         * <code>optional double min_faulted = 4;</code>
         *
         * <pre>
         * The threshold below which a value is faulted
         * </pre>
         */
        public boolean hasMinFaulted() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional double min_faulted = 4;</code>
         *
         * <pre>
         * The threshold below which a value is faulted
         * </pre>
         */
        public double getMinFaulted() {
          return minFaulted_;
        }

        private void initFields() {
          maxFaulted_ = 0D;
          maxDegraded_ = 0D;
          minDegraded_ = 0D;
          minFaulted_ = 0D;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeDouble(1, maxFaulted_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeDouble(2, maxDegraded_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeDouble(3, minDegraded_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeDouble(4, minFaulted_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(1, maxFaulted_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(2, maxDegraded_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(3, minDegraded_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(4, minFaulted_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds}
         *
         * <pre>
         * The min/max thresholds for displaying values. Not all properties will
         * use all threshold fields.
         * </pre>
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.ThresholdsOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifest_BitProperty_Thresholds_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifest_BitProperty_Thresholds_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds.class, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds.Builder.class);
          }

          // Construct using com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            maxFaulted_ = 0D;
            bitField0_ = (bitField0_ & ~0x00000001);
            maxDegraded_ = 0D;
            bitField0_ = (bitField0_ & ~0x00000002);
            minDegraded_ = 0D;
            bitField0_ = (bitField0_ & ~0x00000004);
            minFaulted_ = 0D;
            bitField0_ = (bitField0_ & ~0x00000008);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifest_BitProperty_Thresholds_descriptor;
          }

          public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds getDefaultInstanceForType() {
            return com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds.getDefaultInstance();
          }

          public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds build() {
            com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds buildPartial() {
            com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds result = new com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.maxFaulted_ = maxFaulted_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.maxDegraded_ = maxDegraded_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.minDegraded_ = minDegraded_;
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000008;
            }
            result.minFaulted_ = minFaulted_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds) {
              return mergeFrom((com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds other) {
            if (other == com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds.getDefaultInstance()) return this;
            if (other.hasMaxFaulted()) {
              setMaxFaulted(other.getMaxFaulted());
            }
            if (other.hasMaxDegraded()) {
              setMaxDegraded(other.getMaxDegraded());
            }
            if (other.hasMinDegraded()) {
              setMinDegraded(other.getMinDegraded());
            }
            if (other.hasMinFaulted()) {
              setMinFaulted(other.getMinFaulted());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional double max_faulted = 1;
          private double maxFaulted_ ;
          /**
           * <code>optional double max_faulted = 1;</code>
           *
           * <pre>
           * The threshold above which a value is faulted
           * </pre>
           */
          public boolean hasMaxFaulted() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional double max_faulted = 1;</code>
           *
           * <pre>
           * The threshold above which a value is faulted
           * </pre>
           */
          public double getMaxFaulted() {
            return maxFaulted_;
          }
          /**
           * <code>optional double max_faulted = 1;</code>
           *
           * <pre>
           * The threshold above which a value is faulted
           * </pre>
           */
          public Builder setMaxFaulted(double value) {
            bitField0_ |= 0x00000001;
            maxFaulted_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional double max_faulted = 1;</code>
           *
           * <pre>
           * The threshold above which a value is faulted
           * </pre>
           */
          public Builder clearMaxFaulted() {
            bitField0_ = (bitField0_ & ~0x00000001);
            maxFaulted_ = 0D;
            onChanged();
            return this;
          }

          // optional double max_degraded = 2;
          private double maxDegraded_ ;
          /**
           * <code>optional double max_degraded = 2;</code>
           *
           * <pre>
           * The threshold above which a value is degraded
           * </pre>
           */
          public boolean hasMaxDegraded() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional double max_degraded = 2;</code>
           *
           * <pre>
           * The threshold above which a value is degraded
           * </pre>
           */
          public double getMaxDegraded() {
            return maxDegraded_;
          }
          /**
           * <code>optional double max_degraded = 2;</code>
           *
           * <pre>
           * The threshold above which a value is degraded
           * </pre>
           */
          public Builder setMaxDegraded(double value) {
            bitField0_ |= 0x00000002;
            maxDegraded_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional double max_degraded = 2;</code>
           *
           * <pre>
           * The threshold above which a value is degraded
           * </pre>
           */
          public Builder clearMaxDegraded() {
            bitField0_ = (bitField0_ & ~0x00000002);
            maxDegraded_ = 0D;
            onChanged();
            return this;
          }

          // optional double min_degraded = 3;
          private double minDegraded_ ;
          /**
           * <code>optional double min_degraded = 3;</code>
           *
           * <pre>
           * The threshold below which a value is degraded
           * </pre>
           */
          public boolean hasMinDegraded() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional double min_degraded = 3;</code>
           *
           * <pre>
           * The threshold below which a value is degraded
           * </pre>
           */
          public double getMinDegraded() {
            return minDegraded_;
          }
          /**
           * <code>optional double min_degraded = 3;</code>
           *
           * <pre>
           * The threshold below which a value is degraded
           * </pre>
           */
          public Builder setMinDegraded(double value) {
            bitField0_ |= 0x00000004;
            minDegraded_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional double min_degraded = 3;</code>
           *
           * <pre>
           * The threshold below which a value is degraded
           * </pre>
           */
          public Builder clearMinDegraded() {
            bitField0_ = (bitField0_ & ~0x00000004);
            minDegraded_ = 0D;
            onChanged();
            return this;
          }

          // optional double min_faulted = 4;
          private double minFaulted_ ;
          /**
           * <code>optional double min_faulted = 4;</code>
           *
           * <pre>
           * The threshold below which a value is faulted
           * </pre>
           */
          public boolean hasMinFaulted() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>optional double min_faulted = 4;</code>
           *
           * <pre>
           * The threshold below which a value is faulted
           * </pre>
           */
          public double getMinFaulted() {
            return minFaulted_;
          }
          /**
           * <code>optional double min_faulted = 4;</code>
           *
           * <pre>
           * The threshold below which a value is faulted
           * </pre>
           */
          public Builder setMinFaulted(double value) {
            bitField0_ |= 0x00000008;
            minFaulted_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional double min_faulted = 4;</code>
           *
           * <pre>
           * The threshold below which a value is faulted
           * </pre>
           */
          public Builder clearMinFaulted() {
            bitField0_ = (bitField0_ & ~0x00000008);
            minFaulted_ = 0D;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds)
        }

        static {
          defaultInstance = new Thresholds(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds)
      }

      private int bitField0_;
      // required int32 id = 1;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * The identifier for this property. BIT values will be sent with this ID.
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * The identifier for this property. BIT values will be sent with this ID.
       * </pre>
       */
      public int getId() {
        return id_;
      }

      // required string display_name = 2;
      public static final int DISPLAY_NAME_FIELD_NUMBER = 2;
      private java.lang.Object displayName_;
      /**
       * <code>required string display_name = 2;</code>
       *
       * <pre>
       * The string that should be displayed for this property
       * </pre>
       */
      public boolean hasDisplayName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string display_name = 2;</code>
       *
       * <pre>
       * The string that should be displayed for this property
       * </pre>
       */
      public java.lang.String getDisplayName() {
        java.lang.Object ref = displayName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            displayName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string display_name = 2;</code>
       *
       * <pre>
       * The string that should be displayed for this property
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDisplayNameBytes() {
        java.lang.Object ref = displayName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          displayName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional string description = 3;
      public static final int DESCRIPTION_FIELD_NUMBER = 3;
      private java.lang.Object description_;
      /**
       * <code>optional string description = 3;</code>
       *
       * <pre>
       * A string that describes this property
       * </pre>
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string description = 3;</code>
       *
       * <pre>
       * A string that describes this property
       * </pre>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            description_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string description = 3;</code>
       *
       * <pre>
       * A string that describes this property
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional .com.srcinc.ngi.data.BitManifest.BitProperty.Units units = 4;
      public static final int UNITS_FIELD_NUMBER = 4;
      private com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Units units_;
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Units units = 4;</code>
       *
       * <pre>
       * The units for the value associated with this field
       * </pre>
       */
      public boolean hasUnits() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Units units = 4;</code>
       *
       * <pre>
       * The units for the value associated with this field
       * </pre>
       */
      public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Units getUnits() {
        return units_;
      }

      // optional .com.srcinc.ngi.data.BitManifest.BitProperty.Types type = 5;
      public static final int TYPE_FIELD_NUMBER = 5;
      private com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Types type_;
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Types type = 5;</code>
       *
       * <pre>
       * The type for the value associated with this field
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Types type = 5;</code>
       *
       * <pre>
       * The type for the value associated with this field
       * </pre>
       */
      public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Types getType() {
        return type_;
      }

      // optional .com.srcinc.ngi.common.UserLevel min_user_level = 6;
      public static final int MIN_USER_LEVEL_FIELD_NUMBER = 6;
      private com.srcinc.ngi.common.Users.UserLevel minUserLevel_;
      /**
       * <code>optional .com.srcinc.ngi.common.UserLevel min_user_level = 6;</code>
       *
       * <pre>
       * The level that should be required to view this property. This only needs
       * to be included if the property requires a higher level of permissions
       * than the node it is associated with.
       * </pre>
       */
      public boolean hasMinUserLevel() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .com.srcinc.ngi.common.UserLevel min_user_level = 6;</code>
       *
       * <pre>
       * The level that should be required to view this property. This only needs
       * to be included if the property requires a higher level of permissions
       * than the node it is associated with.
       * </pre>
       */
      public com.srcinc.ngi.common.Users.UserLevel getMinUserLevel() {
        return minUserLevel_;
      }

      // optional .com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds thresholds = 7;
      public static final int THRESHOLDS_FIELD_NUMBER = 7;
      private com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds thresholds_;
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds thresholds = 7;</code>
       *
       * <pre>
       * The values that constitute the field being degraded/faulted. These
       * fields allow for values to be graphed.
       * </pre>
       */
      public boolean hasThresholds() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds thresholds = 7;</code>
       *
       * <pre>
       * The values that constitute the field being degraded/faulted. These
       * fields allow for values to be graphed.
       * </pre>
       */
      public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds getThresholds() {
        return thresholds_;
      }
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds thresholds = 7;</code>
       *
       * <pre>
       * The values that constitute the field being degraded/faulted. These
       * fields allow for values to be graphed.
       * </pre>
       */
      public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.ThresholdsOrBuilder getThresholdsOrBuilder() {
        return thresholds_;
      }

      // optional string group_name = 8;
      public static final int GROUP_NAME_FIELD_NUMBER = 8;
      private java.lang.Object groupName_;
      /**
       * <code>optional string group_name = 8;</code>
       *
       * <pre>
       * The name of the group this property should fall into (if any).
       * </pre>
       */
      public boolean hasGroupName() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string group_name = 8;</code>
       *
       * <pre>
       * The name of the group this property should fall into (if any).
       * </pre>
       */
      public java.lang.String getGroupName() {
        java.lang.Object ref = groupName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            groupName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string group_name = 8;</code>
       *
       * <pre>
       * The name of the group this property should fall into (if any).
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGroupNameBytes() {
        java.lang.Object ref = groupName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          groupName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional int32 history_length = 9;
      public static final int HISTORY_LENGTH_FIELD_NUMBER = 9;
      private int historyLength_;
      /**
       * <code>optional int32 history_length = 9;</code>
       *
       * <pre>
       * The number of historical entries that are valid for this property. This
       * can be used for graphing historical data.
       * </pre>
       */
      public boolean hasHistoryLength() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 history_length = 9;</code>
       *
       * <pre>
       * The number of historical entries that are valid for this property. This
       * can be used for graphing historical data.
       * </pre>
       */
      public int getHistoryLength() {
        return historyLength_;
      }

      private void initFields() {
        id_ = 0;
        displayName_ = "";
        description_ = "";
        units_ = com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Units.UNITS_UNKNOWN;
        type_ = com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Types.TYPE_UNKNOWN;
        minUserLevel_ = com.srcinc.ngi.common.Users.UserLevel.USER_LEVEL_0;
        thresholds_ = com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds.getDefaultInstance();
        groupName_ = "";
        historyLength_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasDisplayName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getDisplayNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getDescriptionBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeEnum(4, units_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeEnum(5, type_.getNumber());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeEnum(6, minUserLevel_.getNumber());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeMessage(7, thresholds_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeBytes(8, getGroupNameBytes());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeInt32(9, historyLength_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getDisplayNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getDescriptionBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, units_.getNumber());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(5, type_.getNumber());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(6, minUserLevel_.getNumber());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, thresholds_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(8, getGroupNameBytes());
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(9, historyLength_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.srcinc.ngi.data.BitManifest.BitProperty}
       *
       * <pre>
       * information about a property
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitPropertyOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifest_BitProperty_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifest_BitProperty_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.class, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Builder.class);
        }

        // Construct using com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getThresholdsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          displayName_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          description_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          units_ = com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Units.UNITS_UNKNOWN;
          bitField0_ = (bitField0_ & ~0x00000008);
          type_ = com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Types.TYPE_UNKNOWN;
          bitField0_ = (bitField0_ & ~0x00000010);
          minUserLevel_ = com.srcinc.ngi.common.Users.UserLevel.USER_LEVEL_0;
          bitField0_ = (bitField0_ & ~0x00000020);
          if (thresholdsBuilder_ == null) {
            thresholds_ = com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds.getDefaultInstance();
          } else {
            thresholdsBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000040);
          groupName_ = "";
          bitField0_ = (bitField0_ & ~0x00000080);
          historyLength_ = 0;
          bitField0_ = (bitField0_ & ~0x00000100);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifest_BitProperty_descriptor;
        }

        public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty getDefaultInstanceForType() {
          return com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.getDefaultInstance();
        }

        public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty build() {
          com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty buildPartial() {
          com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty result = new com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.displayName_ = displayName_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.description_ = description_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.units_ = units_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.type_ = type_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.minUserLevel_ = minUserLevel_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          if (thresholdsBuilder_ == null) {
            result.thresholds_ = thresholds_;
          } else {
            result.thresholds_ = thresholdsBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.groupName_ = groupName_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.historyLength_ = historyLength_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty) {
            return mergeFrom((com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty other) {
          if (other == com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasDisplayName()) {
            bitField0_ |= 0x00000002;
            displayName_ = other.displayName_;
            onChanged();
          }
          if (other.hasDescription()) {
            bitField0_ |= 0x00000004;
            description_ = other.description_;
            onChanged();
          }
          if (other.hasUnits()) {
            setUnits(other.getUnits());
          }
          if (other.hasType()) {
            setType(other.getType());
          }
          if (other.hasMinUserLevel()) {
            setMinUserLevel(other.getMinUserLevel());
          }
          if (other.hasThresholds()) {
            mergeThresholds(other.getThresholds());
          }
          if (other.hasGroupName()) {
            bitField0_ |= 0x00000080;
            groupName_ = other.groupName_;
            onChanged();
          }
          if (other.hasHistoryLength()) {
            setHistoryLength(other.getHistoryLength());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasId()) {
            
            return false;
          }
          if (!hasDisplayName()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required int32 id = 1;
        private int id_ ;
        /**
         * <code>required int32 id = 1;</code>
         *
         * <pre>
         * The identifier for this property. BIT values will be sent with this ID.
         * </pre>
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int32 id = 1;</code>
         *
         * <pre>
         * The identifier for this property. BIT values will be sent with this ID.
         * </pre>
         */
        public int getId() {
          return id_;
        }
        /**
         * <code>required int32 id = 1;</code>
         *
         * <pre>
         * The identifier for this property. BIT values will be sent with this ID.
         * </pre>
         */
        public Builder setId(int value) {
          bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 id = 1;</code>
         *
         * <pre>
         * The identifier for this property. BIT values will be sent with this ID.
         * </pre>
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          onChanged();
          return this;
        }

        // required string display_name = 2;
        private java.lang.Object displayName_ = "";
        /**
         * <code>required string display_name = 2;</code>
         *
         * <pre>
         * The string that should be displayed for this property
         * </pre>
         */
        public boolean hasDisplayName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string display_name = 2;</code>
         *
         * <pre>
         * The string that should be displayed for this property
         * </pre>
         */
        public java.lang.String getDisplayName() {
          java.lang.Object ref = displayName_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            displayName_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string display_name = 2;</code>
         *
         * <pre>
         * The string that should be displayed for this property
         * </pre>
         */
        public com.google.protobuf.ByteString
            getDisplayNameBytes() {
          java.lang.Object ref = displayName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            displayName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string display_name = 2;</code>
         *
         * <pre>
         * The string that should be displayed for this property
         * </pre>
         */
        public Builder setDisplayName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          displayName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string display_name = 2;</code>
         *
         * <pre>
         * The string that should be displayed for this property
         * </pre>
         */
        public Builder clearDisplayName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          displayName_ = getDefaultInstance().getDisplayName();
          onChanged();
          return this;
        }
        /**
         * <code>required string display_name = 2;</code>
         *
         * <pre>
         * The string that should be displayed for this property
         * </pre>
         */
        public Builder setDisplayNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          displayName_ = value;
          onChanged();
          return this;
        }

        // optional string description = 3;
        private java.lang.Object description_ = "";
        /**
         * <code>optional string description = 3;</code>
         *
         * <pre>
         * A string that describes this property
         * </pre>
         */
        public boolean hasDescription() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string description = 3;</code>
         *
         * <pre>
         * A string that describes this property
         * </pre>
         */
        public java.lang.String getDescription() {
          java.lang.Object ref = description_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            description_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string description = 3;</code>
         *
         * <pre>
         * A string that describes this property
         * </pre>
         */
        public com.google.protobuf.ByteString
            getDescriptionBytes() {
          java.lang.Object ref = description_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            description_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string description = 3;</code>
         *
         * <pre>
         * A string that describes this property
         * </pre>
         */
        public Builder setDescription(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          description_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string description = 3;</code>
         *
         * <pre>
         * A string that describes this property
         * </pre>
         */
        public Builder clearDescription() {
          bitField0_ = (bitField0_ & ~0x00000004);
          description_ = getDefaultInstance().getDescription();
          onChanged();
          return this;
        }
        /**
         * <code>optional string description = 3;</code>
         *
         * <pre>
         * A string that describes this property
         * </pre>
         */
        public Builder setDescriptionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          description_ = value;
          onChanged();
          return this;
        }

        // optional .com.srcinc.ngi.data.BitManifest.BitProperty.Units units = 4;
        private com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Units units_ = com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Units.UNITS_UNKNOWN;
        /**
         * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Units units = 4;</code>
         *
         * <pre>
         * The units for the value associated with this field
         * </pre>
         */
        public boolean hasUnits() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Units units = 4;</code>
         *
         * <pre>
         * The units for the value associated with this field
         * </pre>
         */
        public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Units getUnits() {
          return units_;
        }
        /**
         * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Units units = 4;</code>
         *
         * <pre>
         * The units for the value associated with this field
         * </pre>
         */
        public Builder setUnits(com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Units value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          units_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Units units = 4;</code>
         *
         * <pre>
         * The units for the value associated with this field
         * </pre>
         */
        public Builder clearUnits() {
          bitField0_ = (bitField0_ & ~0x00000008);
          units_ = com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Units.UNITS_UNKNOWN;
          onChanged();
          return this;
        }

        // optional .com.srcinc.ngi.data.BitManifest.BitProperty.Types type = 5;
        private com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Types type_ = com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Types.TYPE_UNKNOWN;
        /**
         * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Types type = 5;</code>
         *
         * <pre>
         * The type for the value associated with this field
         * </pre>
         */
        public boolean hasType() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Types type = 5;</code>
         *
         * <pre>
         * The type for the value associated with this field
         * </pre>
         */
        public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Types getType() {
          return type_;
        }
        /**
         * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Types type = 5;</code>
         *
         * <pre>
         * The type for the value associated with this field
         * </pre>
         */
        public Builder setType(com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Types value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000010;
          type_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Types type = 5;</code>
         *
         * <pre>
         * The type for the value associated with this field
         * </pre>
         */
        public Builder clearType() {
          bitField0_ = (bitField0_ & ~0x00000010);
          type_ = com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Types.TYPE_UNKNOWN;
          onChanged();
          return this;
        }

        // optional .com.srcinc.ngi.common.UserLevel min_user_level = 6;
        private com.srcinc.ngi.common.Users.UserLevel minUserLevel_ = com.srcinc.ngi.common.Users.UserLevel.USER_LEVEL_0;
        /**
         * <code>optional .com.srcinc.ngi.common.UserLevel min_user_level = 6;</code>
         *
         * <pre>
         * The level that should be required to view this property. This only needs
         * to be included if the property requires a higher level of permissions
         * than the node it is associated with.
         * </pre>
         */
        public boolean hasMinUserLevel() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional .com.srcinc.ngi.common.UserLevel min_user_level = 6;</code>
         *
         * <pre>
         * The level that should be required to view this property. This only needs
         * to be included if the property requires a higher level of permissions
         * than the node it is associated with.
         * </pre>
         */
        public com.srcinc.ngi.common.Users.UserLevel getMinUserLevel() {
          return minUserLevel_;
        }
        /**
         * <code>optional .com.srcinc.ngi.common.UserLevel min_user_level = 6;</code>
         *
         * <pre>
         * The level that should be required to view this property. This only needs
         * to be included if the property requires a higher level of permissions
         * than the node it is associated with.
         * </pre>
         */
        public Builder setMinUserLevel(com.srcinc.ngi.common.Users.UserLevel value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000020;
          minUserLevel_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .com.srcinc.ngi.common.UserLevel min_user_level = 6;</code>
         *
         * <pre>
         * The level that should be required to view this property. This only needs
         * to be included if the property requires a higher level of permissions
         * than the node it is associated with.
         * </pre>
         */
        public Builder clearMinUserLevel() {
          bitField0_ = (bitField0_ & ~0x00000020);
          minUserLevel_ = com.srcinc.ngi.common.Users.UserLevel.USER_LEVEL_0;
          onChanged();
          return this;
        }

        // optional .com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds thresholds = 7;
        private com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds thresholds_ = com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds.Builder, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.ThresholdsOrBuilder> thresholdsBuilder_;
        /**
         * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds thresholds = 7;</code>
         *
         * <pre>
         * The values that constitute the field being degraded/faulted. These
         * fields allow for values to be graphed.
         * </pre>
         */
        public boolean hasThresholds() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds thresholds = 7;</code>
         *
         * <pre>
         * The values that constitute the field being degraded/faulted. These
         * fields allow for values to be graphed.
         * </pre>
         */
        public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds getThresholds() {
          if (thresholdsBuilder_ == null) {
            return thresholds_;
          } else {
            return thresholdsBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds thresholds = 7;</code>
         *
         * <pre>
         * The values that constitute the field being degraded/faulted. These
         * fields allow for values to be graphed.
         * </pre>
         */
        public Builder setThresholds(com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds value) {
          if (thresholdsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            thresholds_ = value;
            onChanged();
          } else {
            thresholdsBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000040;
          return this;
        }
        /**
         * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds thresholds = 7;</code>
         *
         * <pre>
         * The values that constitute the field being degraded/faulted. These
         * fields allow for values to be graphed.
         * </pre>
         */
        public Builder setThresholds(
            com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds.Builder builderForValue) {
          if (thresholdsBuilder_ == null) {
            thresholds_ = builderForValue.build();
            onChanged();
          } else {
            thresholdsBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000040;
          return this;
        }
        /**
         * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds thresholds = 7;</code>
         *
         * <pre>
         * The values that constitute the field being degraded/faulted. These
         * fields allow for values to be graphed.
         * </pre>
         */
        public Builder mergeThresholds(com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds value) {
          if (thresholdsBuilder_ == null) {
            if (((bitField0_ & 0x00000040) == 0x00000040) &&
                thresholds_ != com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds.getDefaultInstance()) {
              thresholds_ =
                com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds.newBuilder(thresholds_).mergeFrom(value).buildPartial();
            } else {
              thresholds_ = value;
            }
            onChanged();
          } else {
            thresholdsBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000040;
          return this;
        }
        /**
         * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds thresholds = 7;</code>
         *
         * <pre>
         * The values that constitute the field being degraded/faulted. These
         * fields allow for values to be graphed.
         * </pre>
         */
        public Builder clearThresholds() {
          if (thresholdsBuilder_ == null) {
            thresholds_ = com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds.getDefaultInstance();
            onChanged();
          } else {
            thresholdsBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }
        /**
         * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds thresholds = 7;</code>
         *
         * <pre>
         * The values that constitute the field being degraded/faulted. These
         * fields allow for values to be graphed.
         * </pre>
         */
        public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds.Builder getThresholdsBuilder() {
          bitField0_ |= 0x00000040;
          onChanged();
          return getThresholdsFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds thresholds = 7;</code>
         *
         * <pre>
         * The values that constitute the field being degraded/faulted. These
         * fields allow for values to be graphed.
         * </pre>
         */
        public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.ThresholdsOrBuilder getThresholdsOrBuilder() {
          if (thresholdsBuilder_ != null) {
            return thresholdsBuilder_.getMessageOrBuilder();
          } else {
            return thresholds_;
          }
        }
        /**
         * <code>optional .com.srcinc.ngi.data.BitManifest.BitProperty.Thresholds thresholds = 7;</code>
         *
         * <pre>
         * The values that constitute the field being degraded/faulted. These
         * fields allow for values to be graphed.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds.Builder, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.ThresholdsOrBuilder> 
            getThresholdsFieldBuilder() {
          if (thresholdsBuilder_ == null) {
            thresholdsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Thresholds.Builder, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.ThresholdsOrBuilder>(
                    thresholds_,
                    getParentForChildren(),
                    isClean());
            thresholds_ = null;
          }
          return thresholdsBuilder_;
        }

        // optional string group_name = 8;
        private java.lang.Object groupName_ = "";
        /**
         * <code>optional string group_name = 8;</code>
         *
         * <pre>
         * The name of the group this property should fall into (if any).
         * </pre>
         */
        public boolean hasGroupName() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional string group_name = 8;</code>
         *
         * <pre>
         * The name of the group this property should fall into (if any).
         * </pre>
         */
        public java.lang.String getGroupName() {
          java.lang.Object ref = groupName_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            groupName_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string group_name = 8;</code>
         *
         * <pre>
         * The name of the group this property should fall into (if any).
         * </pre>
         */
        public com.google.protobuf.ByteString
            getGroupNameBytes() {
          java.lang.Object ref = groupName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            groupName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string group_name = 8;</code>
         *
         * <pre>
         * The name of the group this property should fall into (if any).
         * </pre>
         */
        public Builder setGroupName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          groupName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string group_name = 8;</code>
         *
         * <pre>
         * The name of the group this property should fall into (if any).
         * </pre>
         */
        public Builder clearGroupName() {
          bitField0_ = (bitField0_ & ~0x00000080);
          groupName_ = getDefaultInstance().getGroupName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string group_name = 8;</code>
         *
         * <pre>
         * The name of the group this property should fall into (if any).
         * </pre>
         */
        public Builder setGroupNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
          groupName_ = value;
          onChanged();
          return this;
        }

        // optional int32 history_length = 9;
        private int historyLength_ ;
        /**
         * <code>optional int32 history_length = 9;</code>
         *
         * <pre>
         * The number of historical entries that are valid for this property. This
         * can be used for graphing historical data.
         * </pre>
         */
        public boolean hasHistoryLength() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional int32 history_length = 9;</code>
         *
         * <pre>
         * The number of historical entries that are valid for this property. This
         * can be used for graphing historical data.
         * </pre>
         */
        public int getHistoryLength() {
          return historyLength_;
        }
        /**
         * <code>optional int32 history_length = 9;</code>
         *
         * <pre>
         * The number of historical entries that are valid for this property. This
         * can be used for graphing historical data.
         * </pre>
         */
        public Builder setHistoryLength(int value) {
          bitField0_ |= 0x00000100;
          historyLength_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 history_length = 9;</code>
         *
         * <pre>
         * The number of historical entries that are valid for this property. This
         * can be used for graphing historical data.
         * </pre>
         */
        public Builder clearHistoryLength() {
          bitField0_ = (bitField0_ & ~0x00000100);
          historyLength_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.srcinc.ngi.data.BitManifest.BitProperty)
      }

      static {
        defaultInstance = new BitProperty(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.srcinc.ngi.data.BitManifest.BitProperty)
    }

    public interface BitNodeOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required int32 id = 1;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * The identifier for the node. BIT values will be sent with this ID.
       * </pre>
       */
      boolean hasId();
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * The identifier for the node. BIT values will be sent with this ID.
       * </pre>
       */
      int getId();

      // required string display_name = 2;
      /**
       * <code>required string display_name = 2;</code>
       *
       * <pre>
       * The string that should be displayed to represent this node
       * </pre>
       */
      boolean hasDisplayName();
      /**
       * <code>required string display_name = 2;</code>
       *
       * <pre>
       * The string that should be displayed to represent this node
       * </pre>
       */
      java.lang.String getDisplayName();
      /**
       * <code>required string display_name = 2;</code>
       *
       * <pre>
       * The string that should be displayed to represent this node
       * </pre>
       */
      com.google.protobuf.ByteString
          getDisplayNameBytes();

      // optional string description = 3;
      /**
       * <code>optional string description = 3;</code>
       *
       * <pre>
       * A string that describes the node
       * </pre>
       */
      boolean hasDescription();
      /**
       * <code>optional string description = 3;</code>
       *
       * <pre>
       * A string that describes the node
       * </pre>
       */
      java.lang.String getDescription();
      /**
       * <code>optional string description = 3;</code>
       *
       * <pre>
       * A string that describes the node
       * </pre>
       */
      com.google.protobuf.ByteString
          getDescriptionBytes();

      // optional .com.srcinc.ngi.common.UserLevel user_level = 4;
      /**
       * <code>optional .com.srcinc.ngi.common.UserLevel user_level = 4;</code>
       *
       * <pre>
       * The level that should be required to view this node
       * </pre>
       */
      boolean hasUserLevel();
      /**
       * <code>optional .com.srcinc.ngi.common.UserLevel user_level = 4;</code>
       *
       * <pre>
       * The level that should be required to view this node
       * </pre>
       */
      com.srcinc.ngi.common.Users.UserLevel getUserLevel();

      // repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
       *
       * <pre>
       * The properties that are associated with this node
       * </pre>
       */
      java.util.List<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty> 
          getPropertiesList();
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
       *
       * <pre>
       * The properties that are associated with this node
       * </pre>
       */
      com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty getProperties(int index);
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
       *
       * <pre>
       * The properties that are associated with this node
       * </pre>
       */
      int getPropertiesCount();
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
       *
       * <pre>
       * The properties that are associated with this node
       * </pre>
       */
      java.util.List<? extends com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitPropertyOrBuilder> 
          getPropertiesOrBuilderList();
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
       *
       * <pre>
       * The properties that are associated with this node
       * </pre>
       */
      com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitPropertyOrBuilder getPropertiesOrBuilder(
          int index);

      // repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
       *
       * <pre>
       * The nodes that fall under this node within the BIT Tree structure
       * </pre>
       */
      java.util.List<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode> 
          getNodesList();
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
       *
       * <pre>
       * The nodes that fall under this node within the BIT Tree structure
       * </pre>
       */
      com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode getNodes(int index);
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
       *
       * <pre>
       * The nodes that fall under this node within the BIT Tree structure
       * </pre>
       */
      int getNodesCount();
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
       *
       * <pre>
       * The nodes that fall under this node within the BIT Tree structure
       * </pre>
       */
      java.util.List<? extends com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNodeOrBuilder> 
          getNodesOrBuilderList();
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
       *
       * <pre>
       * The nodes that fall under this node within the BIT Tree structure
       * </pre>
       */
      com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNodeOrBuilder getNodesOrBuilder(
          int index);

      // optional bool is_top_level_status = 7;
      /**
       * <code>optional bool is_top_level_status = 7;</code>
       *
       * <pre>
       * This is true if this node should be considered the top level status for
       * the entire BIT tree. There may be multiple nodes with top level status.
       * </pre>
       */
      boolean hasIsTopLevelStatus();
      /**
       * <code>optional bool is_top_level_status = 7;</code>
       *
       * <pre>
       * This is true if this node should be considered the top level status for
       * the entire BIT tree. There may be multiple nodes with top level status.
       * </pre>
       */
      boolean getIsTopLevelStatus();
    }
    /**
     * Protobuf type {@code com.srcinc.ngi.data.BitManifest.BitNode}
     *
     * <pre>
     * A node in the BIT tree. This can contain properties and/or other nodes.
     * </pre>
     */
    public static final class BitNode extends
        com.google.protobuf.GeneratedMessage
        implements BitNodeOrBuilder {
      // Use BitNode.newBuilder() to construct.
      private BitNode(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private BitNode(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final BitNode defaultInstance;
      public static BitNode getDefaultInstance() {
        return defaultInstance;
      }

      public BitNode getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private BitNode(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                id_ = input.readInt32();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                displayName_ = input.readBytes();
                break;
              }
              case 26: {
                bitField0_ |= 0x00000004;
                description_ = input.readBytes();
                break;
              }
              case 32: {
                int rawValue = input.readEnum();
                com.srcinc.ngi.common.Users.UserLevel value = com.srcinc.ngi.common.Users.UserLevel.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                } else {
                  bitField0_ |= 0x00000008;
                  userLevel_ = value;
                }
                break;
              }
              case 42: {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  properties_ = new java.util.ArrayList<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty>();
                  mutable_bitField0_ |= 0x00000010;
                }
                properties_.add(input.readMessage(com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.PARSER, extensionRegistry));
                break;
              }
              case 50: {
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                  nodes_ = new java.util.ArrayList<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode>();
                  mutable_bitField0_ |= 0x00000020;
                }
                nodes_.add(input.readMessage(com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.PARSER, extensionRegistry));
                break;
              }
              case 56: {
                bitField0_ |= 0x00000010;
                isTopLevelStatus_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            properties_ = java.util.Collections.unmodifiableList(properties_);
          }
          if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
            nodes_ = java.util.Collections.unmodifiableList(nodes_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifest_BitNode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifest_BitNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.class, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder.class);
      }

      public static com.google.protobuf.Parser<BitNode> PARSER =
          new com.google.protobuf.AbstractParser<BitNode>() {
        public BitNode parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BitNode(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<BitNode> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required int32 id = 1;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_;
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * The identifier for the node. BIT values will be sent with this ID.
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       *
       * <pre>
       * The identifier for the node. BIT values will be sent with this ID.
       * </pre>
       */
      public int getId() {
        return id_;
      }

      // required string display_name = 2;
      public static final int DISPLAY_NAME_FIELD_NUMBER = 2;
      private java.lang.Object displayName_;
      /**
       * <code>required string display_name = 2;</code>
       *
       * <pre>
       * The string that should be displayed to represent this node
       * </pre>
       */
      public boolean hasDisplayName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string display_name = 2;</code>
       *
       * <pre>
       * The string that should be displayed to represent this node
       * </pre>
       */
      public java.lang.String getDisplayName() {
        java.lang.Object ref = displayName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            displayName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string display_name = 2;</code>
       *
       * <pre>
       * The string that should be displayed to represent this node
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDisplayNameBytes() {
        java.lang.Object ref = displayName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          displayName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional string description = 3;
      public static final int DESCRIPTION_FIELD_NUMBER = 3;
      private java.lang.Object description_;
      /**
       * <code>optional string description = 3;</code>
       *
       * <pre>
       * A string that describes the node
       * </pre>
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string description = 3;</code>
       *
       * <pre>
       * A string that describes the node
       * </pre>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            description_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string description = 3;</code>
       *
       * <pre>
       * A string that describes the node
       * </pre>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional .com.srcinc.ngi.common.UserLevel user_level = 4;
      public static final int USER_LEVEL_FIELD_NUMBER = 4;
      private com.srcinc.ngi.common.Users.UserLevel userLevel_;
      /**
       * <code>optional .com.srcinc.ngi.common.UserLevel user_level = 4;</code>
       *
       * <pre>
       * The level that should be required to view this node
       * </pre>
       */
      public boolean hasUserLevel() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.srcinc.ngi.common.UserLevel user_level = 4;</code>
       *
       * <pre>
       * The level that should be required to view this node
       * </pre>
       */
      public com.srcinc.ngi.common.Users.UserLevel getUserLevel() {
        return userLevel_;
      }

      // repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;
      public static final int PROPERTIES_FIELD_NUMBER = 5;
      private java.util.List<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty> properties_;
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
       *
       * <pre>
       * The properties that are associated with this node
       * </pre>
       */
      public java.util.List<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty> getPropertiesList() {
        return properties_;
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
       *
       * <pre>
       * The properties that are associated with this node
       * </pre>
       */
      public java.util.List<? extends com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitPropertyOrBuilder> 
          getPropertiesOrBuilderList() {
        return properties_;
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
       *
       * <pre>
       * The properties that are associated with this node
       * </pre>
       */
      public int getPropertiesCount() {
        return properties_.size();
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
       *
       * <pre>
       * The properties that are associated with this node
       * </pre>
       */
      public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty getProperties(int index) {
        return properties_.get(index);
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
       *
       * <pre>
       * The properties that are associated with this node
       * </pre>
       */
      public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitPropertyOrBuilder getPropertiesOrBuilder(
          int index) {
        return properties_.get(index);
      }

      // repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;
      public static final int NODES_FIELD_NUMBER = 6;
      private java.util.List<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode> nodes_;
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
       *
       * <pre>
       * The nodes that fall under this node within the BIT Tree structure
       * </pre>
       */
      public java.util.List<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode> getNodesList() {
        return nodes_;
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
       *
       * <pre>
       * The nodes that fall under this node within the BIT Tree structure
       * </pre>
       */
      public java.util.List<? extends com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNodeOrBuilder> 
          getNodesOrBuilderList() {
        return nodes_;
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
       *
       * <pre>
       * The nodes that fall under this node within the BIT Tree structure
       * </pre>
       */
      public int getNodesCount() {
        return nodes_.size();
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
       *
       * <pre>
       * The nodes that fall under this node within the BIT Tree structure
       * </pre>
       */
      public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode getNodes(int index) {
        return nodes_.get(index);
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
       *
       * <pre>
       * The nodes that fall under this node within the BIT Tree structure
       * </pre>
       */
      public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNodeOrBuilder getNodesOrBuilder(
          int index) {
        return nodes_.get(index);
      }

      // optional bool is_top_level_status = 7;
      public static final int IS_TOP_LEVEL_STATUS_FIELD_NUMBER = 7;
      private boolean isTopLevelStatus_;
      /**
       * <code>optional bool is_top_level_status = 7;</code>
       *
       * <pre>
       * This is true if this node should be considered the top level status for
       * the entire BIT tree. There may be multiple nodes with top level status.
       * </pre>
       */
      public boolean hasIsTopLevelStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool is_top_level_status = 7;</code>
       *
       * <pre>
       * This is true if this node should be considered the top level status for
       * the entire BIT tree. There may be multiple nodes with top level status.
       * </pre>
       */
      public boolean getIsTopLevelStatus() {
        return isTopLevelStatus_;
      }

      private void initFields() {
        id_ = 0;
        displayName_ = "";
        description_ = "";
        userLevel_ = com.srcinc.ngi.common.Users.UserLevel.USER_LEVEL_0;
        properties_ = java.util.Collections.emptyList();
        nodes_ = java.util.Collections.emptyList();
        isTopLevelStatus_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasDisplayName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getPropertiesCount(); i++) {
          if (!getProperties(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        for (int i = 0; i < getNodesCount(); i++) {
          if (!getNodes(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getDisplayNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getDescriptionBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeEnum(4, userLevel_.getNumber());
        }
        for (int i = 0; i < properties_.size(); i++) {
          output.writeMessage(5, properties_.get(i));
        }
        for (int i = 0; i < nodes_.size(); i++) {
          output.writeMessage(6, nodes_.get(i));
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBool(7, isTopLevelStatus_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getDisplayNameBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getDescriptionBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, userLevel_.getNumber());
        }
        for (int i = 0; i < properties_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, properties_.get(i));
        }
        for (int i = 0; i < nodes_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, nodes_.get(i));
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(7, isTopLevelStatus_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.srcinc.ngi.data.BitManifest.BitNode}
       *
       * <pre>
       * A node in the BIT tree. This can contain properties and/or other nodes.
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNodeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifest_BitNode_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifest_BitNode_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.class, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder.class);
        }

        // Construct using com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPropertiesFieldBuilder();
            getNodesFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          displayName_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          description_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          userLevel_ = com.srcinc.ngi.common.Users.UserLevel.USER_LEVEL_0;
          bitField0_ = (bitField0_ & ~0x00000008);
          if (propertiesBuilder_ == null) {
            properties_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            propertiesBuilder_.clear();
          }
          if (nodesBuilder_ == null) {
            nodes_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            nodesBuilder_.clear();
          }
          isTopLevelStatus_ = false;
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifest_BitNode_descriptor;
        }

        public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode getDefaultInstanceForType() {
          return com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.getDefaultInstance();
        }

        public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode build() {
          com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode buildPartial() {
          com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode result = new com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.displayName_ = displayName_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.description_ = description_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.userLevel_ = userLevel_;
          if (propertiesBuilder_ == null) {
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
              properties_ = java.util.Collections.unmodifiableList(properties_);
              bitField0_ = (bitField0_ & ~0x00000010);
            }
            result.properties_ = properties_;
          } else {
            result.properties_ = propertiesBuilder_.build();
          }
          if (nodesBuilder_ == null) {
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
              nodes_ = java.util.Collections.unmodifiableList(nodes_);
              bitField0_ = (bitField0_ & ~0x00000020);
            }
            result.nodes_ = nodes_;
          } else {
            result.nodes_ = nodesBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000010;
          }
          result.isTopLevelStatus_ = isTopLevelStatus_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode) {
            return mergeFrom((com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode other) {
          if (other == com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasDisplayName()) {
            bitField0_ |= 0x00000002;
            displayName_ = other.displayName_;
            onChanged();
          }
          if (other.hasDescription()) {
            bitField0_ |= 0x00000004;
            description_ = other.description_;
            onChanged();
          }
          if (other.hasUserLevel()) {
            setUserLevel(other.getUserLevel());
          }
          if (propertiesBuilder_ == null) {
            if (!other.properties_.isEmpty()) {
              if (properties_.isEmpty()) {
                properties_ = other.properties_;
                bitField0_ = (bitField0_ & ~0x00000010);
              } else {
                ensurePropertiesIsMutable();
                properties_.addAll(other.properties_);
              }
              onChanged();
            }
          } else {
            if (!other.properties_.isEmpty()) {
              if (propertiesBuilder_.isEmpty()) {
                propertiesBuilder_.dispose();
                propertiesBuilder_ = null;
                properties_ = other.properties_;
                bitField0_ = (bitField0_ & ~0x00000010);
                propertiesBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getPropertiesFieldBuilder() : null;
              } else {
                propertiesBuilder_.addAllMessages(other.properties_);
              }
            }
          }
          if (nodesBuilder_ == null) {
            if (!other.nodes_.isEmpty()) {
              if (nodes_.isEmpty()) {
                nodes_ = other.nodes_;
                bitField0_ = (bitField0_ & ~0x00000020);
              } else {
                ensureNodesIsMutable();
                nodes_.addAll(other.nodes_);
              }
              onChanged();
            }
          } else {
            if (!other.nodes_.isEmpty()) {
              if (nodesBuilder_.isEmpty()) {
                nodesBuilder_.dispose();
                nodesBuilder_ = null;
                nodes_ = other.nodes_;
                bitField0_ = (bitField0_ & ~0x00000020);
                nodesBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getNodesFieldBuilder() : null;
              } else {
                nodesBuilder_.addAllMessages(other.nodes_);
              }
            }
          }
          if (other.hasIsTopLevelStatus()) {
            setIsTopLevelStatus(other.getIsTopLevelStatus());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasId()) {
            
            return false;
          }
          if (!hasDisplayName()) {
            
            return false;
          }
          for (int i = 0; i < getPropertiesCount(); i++) {
            if (!getProperties(i).isInitialized()) {
              
              return false;
            }
          }
          for (int i = 0; i < getNodesCount(); i++) {
            if (!getNodes(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required int32 id = 1;
        private int id_ ;
        /**
         * <code>required int32 id = 1;</code>
         *
         * <pre>
         * The identifier for the node. BIT values will be sent with this ID.
         * </pre>
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int32 id = 1;</code>
         *
         * <pre>
         * The identifier for the node. BIT values will be sent with this ID.
         * </pre>
         */
        public int getId() {
          return id_;
        }
        /**
         * <code>required int32 id = 1;</code>
         *
         * <pre>
         * The identifier for the node. BIT values will be sent with this ID.
         * </pre>
         */
        public Builder setId(int value) {
          bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 id = 1;</code>
         *
         * <pre>
         * The identifier for the node. BIT values will be sent with this ID.
         * </pre>
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          onChanged();
          return this;
        }

        // required string display_name = 2;
        private java.lang.Object displayName_ = "";
        /**
         * <code>required string display_name = 2;</code>
         *
         * <pre>
         * The string that should be displayed to represent this node
         * </pre>
         */
        public boolean hasDisplayName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string display_name = 2;</code>
         *
         * <pre>
         * The string that should be displayed to represent this node
         * </pre>
         */
        public java.lang.String getDisplayName() {
          java.lang.Object ref = displayName_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            displayName_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string display_name = 2;</code>
         *
         * <pre>
         * The string that should be displayed to represent this node
         * </pre>
         */
        public com.google.protobuf.ByteString
            getDisplayNameBytes() {
          java.lang.Object ref = displayName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            displayName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string display_name = 2;</code>
         *
         * <pre>
         * The string that should be displayed to represent this node
         * </pre>
         */
        public Builder setDisplayName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          displayName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string display_name = 2;</code>
         *
         * <pre>
         * The string that should be displayed to represent this node
         * </pre>
         */
        public Builder clearDisplayName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          displayName_ = getDefaultInstance().getDisplayName();
          onChanged();
          return this;
        }
        /**
         * <code>required string display_name = 2;</code>
         *
         * <pre>
         * The string that should be displayed to represent this node
         * </pre>
         */
        public Builder setDisplayNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          displayName_ = value;
          onChanged();
          return this;
        }

        // optional string description = 3;
        private java.lang.Object description_ = "";
        /**
         * <code>optional string description = 3;</code>
         *
         * <pre>
         * A string that describes the node
         * </pre>
         */
        public boolean hasDescription() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string description = 3;</code>
         *
         * <pre>
         * A string that describes the node
         * </pre>
         */
        public java.lang.String getDescription() {
          java.lang.Object ref = description_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            description_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string description = 3;</code>
         *
         * <pre>
         * A string that describes the node
         * </pre>
         */
        public com.google.protobuf.ByteString
            getDescriptionBytes() {
          java.lang.Object ref = description_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            description_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string description = 3;</code>
         *
         * <pre>
         * A string that describes the node
         * </pre>
         */
        public Builder setDescription(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          description_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string description = 3;</code>
         *
         * <pre>
         * A string that describes the node
         * </pre>
         */
        public Builder clearDescription() {
          bitField0_ = (bitField0_ & ~0x00000004);
          description_ = getDefaultInstance().getDescription();
          onChanged();
          return this;
        }
        /**
         * <code>optional string description = 3;</code>
         *
         * <pre>
         * A string that describes the node
         * </pre>
         */
        public Builder setDescriptionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          description_ = value;
          onChanged();
          return this;
        }

        // optional .com.srcinc.ngi.common.UserLevel user_level = 4;
        private com.srcinc.ngi.common.Users.UserLevel userLevel_ = com.srcinc.ngi.common.Users.UserLevel.USER_LEVEL_0;
        /**
         * <code>optional .com.srcinc.ngi.common.UserLevel user_level = 4;</code>
         *
         * <pre>
         * The level that should be required to view this node
         * </pre>
         */
        public boolean hasUserLevel() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .com.srcinc.ngi.common.UserLevel user_level = 4;</code>
         *
         * <pre>
         * The level that should be required to view this node
         * </pre>
         */
        public com.srcinc.ngi.common.Users.UserLevel getUserLevel() {
          return userLevel_;
        }
        /**
         * <code>optional .com.srcinc.ngi.common.UserLevel user_level = 4;</code>
         *
         * <pre>
         * The level that should be required to view this node
         * </pre>
         */
        public Builder setUserLevel(com.srcinc.ngi.common.Users.UserLevel value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          userLevel_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .com.srcinc.ngi.common.UserLevel user_level = 4;</code>
         *
         * <pre>
         * The level that should be required to view this node
         * </pre>
         */
        public Builder clearUserLevel() {
          bitField0_ = (bitField0_ & ~0x00000008);
          userLevel_ = com.srcinc.ngi.common.Users.UserLevel.USER_LEVEL_0;
          onChanged();
          return this;
        }

        // repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;
        private java.util.List<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty> properties_ =
          java.util.Collections.emptyList();
        private void ensurePropertiesIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            properties_ = new java.util.ArrayList<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty>(properties_);
            bitField0_ |= 0x00000010;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Builder, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitPropertyOrBuilder> propertiesBuilder_;

        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
         *
         * <pre>
         * The properties that are associated with this node
         * </pre>
         */
        public java.util.List<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty> getPropertiesList() {
          if (propertiesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(properties_);
          } else {
            return propertiesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
         *
         * <pre>
         * The properties that are associated with this node
         * </pre>
         */
        public int getPropertiesCount() {
          if (propertiesBuilder_ == null) {
            return properties_.size();
          } else {
            return propertiesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
         *
         * <pre>
         * The properties that are associated with this node
         * </pre>
         */
        public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty getProperties(int index) {
          if (propertiesBuilder_ == null) {
            return properties_.get(index);
          } else {
            return propertiesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
         *
         * <pre>
         * The properties that are associated with this node
         * </pre>
         */
        public Builder setProperties(
            int index, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty value) {
          if (propertiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePropertiesIsMutable();
            properties_.set(index, value);
            onChanged();
          } else {
            propertiesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
         *
         * <pre>
         * The properties that are associated with this node
         * </pre>
         */
        public Builder setProperties(
            int index, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Builder builderForValue) {
          if (propertiesBuilder_ == null) {
            ensurePropertiesIsMutable();
            properties_.set(index, builderForValue.build());
            onChanged();
          } else {
            propertiesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
         *
         * <pre>
         * The properties that are associated with this node
         * </pre>
         */
        public Builder addProperties(com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty value) {
          if (propertiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePropertiesIsMutable();
            properties_.add(value);
            onChanged();
          } else {
            propertiesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
         *
         * <pre>
         * The properties that are associated with this node
         * </pre>
         */
        public Builder addProperties(
            int index, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty value) {
          if (propertiesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePropertiesIsMutable();
            properties_.add(index, value);
            onChanged();
          } else {
            propertiesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
         *
         * <pre>
         * The properties that are associated with this node
         * </pre>
         */
        public Builder addProperties(
            com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Builder builderForValue) {
          if (propertiesBuilder_ == null) {
            ensurePropertiesIsMutable();
            properties_.add(builderForValue.build());
            onChanged();
          } else {
            propertiesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
         *
         * <pre>
         * The properties that are associated with this node
         * </pre>
         */
        public Builder addProperties(
            int index, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Builder builderForValue) {
          if (propertiesBuilder_ == null) {
            ensurePropertiesIsMutable();
            properties_.add(index, builderForValue.build());
            onChanged();
          } else {
            propertiesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
         *
         * <pre>
         * The properties that are associated with this node
         * </pre>
         */
        public Builder addAllProperties(
            java.lang.Iterable<? extends com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty> values) {
          if (propertiesBuilder_ == null) {
            ensurePropertiesIsMutable();
            super.addAll(values, properties_);
            onChanged();
          } else {
            propertiesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
         *
         * <pre>
         * The properties that are associated with this node
         * </pre>
         */
        public Builder clearProperties() {
          if (propertiesBuilder_ == null) {
            properties_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000010);
            onChanged();
          } else {
            propertiesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
         *
         * <pre>
         * The properties that are associated with this node
         * </pre>
         */
        public Builder removeProperties(int index) {
          if (propertiesBuilder_ == null) {
            ensurePropertiesIsMutable();
            properties_.remove(index);
            onChanged();
          } else {
            propertiesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
         *
         * <pre>
         * The properties that are associated with this node
         * </pre>
         */
        public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Builder getPropertiesBuilder(
            int index) {
          return getPropertiesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
         *
         * <pre>
         * The properties that are associated with this node
         * </pre>
         */
        public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitPropertyOrBuilder getPropertiesOrBuilder(
            int index) {
          if (propertiesBuilder_ == null) {
            return properties_.get(index);  } else {
            return propertiesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
         *
         * <pre>
         * The properties that are associated with this node
         * </pre>
         */
        public java.util.List<? extends com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitPropertyOrBuilder> 
             getPropertiesOrBuilderList() {
          if (propertiesBuilder_ != null) {
            return propertiesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(properties_);
          }
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
         *
         * <pre>
         * The properties that are associated with this node
         * </pre>
         */
        public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Builder addPropertiesBuilder() {
          return getPropertiesFieldBuilder().addBuilder(
              com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.getDefaultInstance());
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
         *
         * <pre>
         * The properties that are associated with this node
         * </pre>
         */
        public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Builder addPropertiesBuilder(
            int index) {
          return getPropertiesFieldBuilder().addBuilder(
              index, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.getDefaultInstance());
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitProperty properties = 5;</code>
         *
         * <pre>
         * The properties that are associated with this node
         * </pre>
         */
        public java.util.List<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Builder> 
             getPropertiesBuilderList() {
          return getPropertiesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Builder, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitPropertyOrBuilder> 
            getPropertiesFieldBuilder() {
          if (propertiesBuilder_ == null) {
            propertiesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitProperty.Builder, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitPropertyOrBuilder>(
                    properties_,
                    ((bitField0_ & 0x00000010) == 0x00000010),
                    getParentForChildren(),
                    isClean());
            properties_ = null;
          }
          return propertiesBuilder_;
        }

        // repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;
        private java.util.List<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode> nodes_ =
          java.util.Collections.emptyList();
        private void ensureNodesIsMutable() {
          if (!((bitField0_ & 0x00000020) == 0x00000020)) {
            nodes_ = new java.util.ArrayList<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode>(nodes_);
            bitField0_ |= 0x00000020;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNodeOrBuilder> nodesBuilder_;

        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
         *
         * <pre>
         * The nodes that fall under this node within the BIT Tree structure
         * </pre>
         */
        public java.util.List<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode> getNodesList() {
          if (nodesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(nodes_);
          } else {
            return nodesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
         *
         * <pre>
         * The nodes that fall under this node within the BIT Tree structure
         * </pre>
         */
        public int getNodesCount() {
          if (nodesBuilder_ == null) {
            return nodes_.size();
          } else {
            return nodesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
         *
         * <pre>
         * The nodes that fall under this node within the BIT Tree structure
         * </pre>
         */
        public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode getNodes(int index) {
          if (nodesBuilder_ == null) {
            return nodes_.get(index);
          } else {
            return nodesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
         *
         * <pre>
         * The nodes that fall under this node within the BIT Tree structure
         * </pre>
         */
        public Builder setNodes(
            int index, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode value) {
          if (nodesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureNodesIsMutable();
            nodes_.set(index, value);
            onChanged();
          } else {
            nodesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
         *
         * <pre>
         * The nodes that fall under this node within the BIT Tree structure
         * </pre>
         */
        public Builder setNodes(
            int index, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder builderForValue) {
          if (nodesBuilder_ == null) {
            ensureNodesIsMutable();
            nodes_.set(index, builderForValue.build());
            onChanged();
          } else {
            nodesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
         *
         * <pre>
         * The nodes that fall under this node within the BIT Tree structure
         * </pre>
         */
        public Builder addNodes(com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode value) {
          if (nodesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureNodesIsMutable();
            nodes_.add(value);
            onChanged();
          } else {
            nodesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
         *
         * <pre>
         * The nodes that fall under this node within the BIT Tree structure
         * </pre>
         */
        public Builder addNodes(
            int index, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode value) {
          if (nodesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureNodesIsMutable();
            nodes_.add(index, value);
            onChanged();
          } else {
            nodesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
         *
         * <pre>
         * The nodes that fall under this node within the BIT Tree structure
         * </pre>
         */
        public Builder addNodes(
            com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder builderForValue) {
          if (nodesBuilder_ == null) {
            ensureNodesIsMutable();
            nodes_.add(builderForValue.build());
            onChanged();
          } else {
            nodesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
         *
         * <pre>
         * The nodes that fall under this node within the BIT Tree structure
         * </pre>
         */
        public Builder addNodes(
            int index, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder builderForValue) {
          if (nodesBuilder_ == null) {
            ensureNodesIsMutable();
            nodes_.add(index, builderForValue.build());
            onChanged();
          } else {
            nodesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
         *
         * <pre>
         * The nodes that fall under this node within the BIT Tree structure
         * </pre>
         */
        public Builder addAllNodes(
            java.lang.Iterable<? extends com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode> values) {
          if (nodesBuilder_ == null) {
            ensureNodesIsMutable();
            super.addAll(values, nodes_);
            onChanged();
          } else {
            nodesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
         *
         * <pre>
         * The nodes that fall under this node within the BIT Tree structure
         * </pre>
         */
        public Builder clearNodes() {
          if (nodesBuilder_ == null) {
            nodes_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000020);
            onChanged();
          } else {
            nodesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
         *
         * <pre>
         * The nodes that fall under this node within the BIT Tree structure
         * </pre>
         */
        public Builder removeNodes(int index) {
          if (nodesBuilder_ == null) {
            ensureNodesIsMutable();
            nodes_.remove(index);
            onChanged();
          } else {
            nodesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
         *
         * <pre>
         * The nodes that fall under this node within the BIT Tree structure
         * </pre>
         */
        public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder getNodesBuilder(
            int index) {
          return getNodesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
         *
         * <pre>
         * The nodes that fall under this node within the BIT Tree structure
         * </pre>
         */
        public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNodeOrBuilder getNodesOrBuilder(
            int index) {
          if (nodesBuilder_ == null) {
            return nodes_.get(index);  } else {
            return nodesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
         *
         * <pre>
         * The nodes that fall under this node within the BIT Tree structure
         * </pre>
         */
        public java.util.List<? extends com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNodeOrBuilder> 
             getNodesOrBuilderList() {
          if (nodesBuilder_ != null) {
            return nodesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(nodes_);
          }
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
         *
         * <pre>
         * The nodes that fall under this node within the BIT Tree structure
         * </pre>
         */
        public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder addNodesBuilder() {
          return getNodesFieldBuilder().addBuilder(
              com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.getDefaultInstance());
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
         *
         * <pre>
         * The nodes that fall under this node within the BIT Tree structure
         * </pre>
         */
        public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder addNodesBuilder(
            int index) {
          return getNodesFieldBuilder().addBuilder(
              index, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.getDefaultInstance());
        }
        /**
         * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode nodes = 6;</code>
         *
         * <pre>
         * The nodes that fall under this node within the BIT Tree structure
         * </pre>
         */
        public java.util.List<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder> 
             getNodesBuilderList() {
          return getNodesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNodeOrBuilder> 
            getNodesFieldBuilder() {
          if (nodesBuilder_ == null) {
            nodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNodeOrBuilder>(
                    nodes_,
                    ((bitField0_ & 0x00000020) == 0x00000020),
                    getParentForChildren(),
                    isClean());
            nodes_ = null;
          }
          return nodesBuilder_;
        }

        // optional bool is_top_level_status = 7;
        private boolean isTopLevelStatus_ ;
        /**
         * <code>optional bool is_top_level_status = 7;</code>
         *
         * <pre>
         * This is true if this node should be considered the top level status for
         * the entire BIT tree. There may be multiple nodes with top level status.
         * </pre>
         */
        public boolean hasIsTopLevelStatus() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional bool is_top_level_status = 7;</code>
         *
         * <pre>
         * This is true if this node should be considered the top level status for
         * the entire BIT tree. There may be multiple nodes with top level status.
         * </pre>
         */
        public boolean getIsTopLevelStatus() {
          return isTopLevelStatus_;
        }
        /**
         * <code>optional bool is_top_level_status = 7;</code>
         *
         * <pre>
         * This is true if this node should be considered the top level status for
         * the entire BIT tree. There may be multiple nodes with top level status.
         * </pre>
         */
        public Builder setIsTopLevelStatus(boolean value) {
          bitField0_ |= 0x00000040;
          isTopLevelStatus_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool is_top_level_status = 7;</code>
         *
         * <pre>
         * This is true if this node should be considered the top level status for
         * the entire BIT tree. There may be multiple nodes with top level status.
         * </pre>
         */
        public Builder clearIsTopLevelStatus() {
          bitField0_ = (bitField0_ & ~0x00000040);
          isTopLevelStatus_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.srcinc.ngi.data.BitManifest.BitNode)
      }

      static {
        defaultInstance = new BitNode(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.srcinc.ngi.data.BitManifest.BitNode)
    }

    // repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;
    public static final int ROOT_NODE_FIELD_NUMBER = 1;
    private java.util.List<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode> rootNode_;
    /**
     * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
     *
     * <pre>
     * The top level nodes for the tree. All sub-nodes are contained within these nodes.
     * </pre>
     */
    public java.util.List<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode> getRootNodeList() {
      return rootNode_;
    }
    /**
     * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
     *
     * <pre>
     * The top level nodes for the tree. All sub-nodes are contained within these nodes.
     * </pre>
     */
    public java.util.List<? extends com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNodeOrBuilder> 
        getRootNodeOrBuilderList() {
      return rootNode_;
    }
    /**
     * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
     *
     * <pre>
     * The top level nodes for the tree. All sub-nodes are contained within these nodes.
     * </pre>
     */
    public int getRootNodeCount() {
      return rootNode_.size();
    }
    /**
     * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
     *
     * <pre>
     * The top level nodes for the tree. All sub-nodes are contained within these nodes.
     * </pre>
     */
    public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode getRootNode(int index) {
      return rootNode_.get(index);
    }
    /**
     * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
     *
     * <pre>
     * The top level nodes for the tree. All sub-nodes are contained within these nodes.
     * </pre>
     */
    public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNodeOrBuilder getRootNodeOrBuilder(
        int index) {
      return rootNode_.get(index);
    }

    private void initFields() {
      rootNode_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getRootNodeCount(); i++) {
        if (!getRootNode(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < rootNode_.size(); i++) {
        output.writeMessage(1, rootNode_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < rootNode_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, rootNode_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.srcinc.ngi.data.BitManifestMessage.BitManifest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.srcinc.ngi.data.BitManifestMessage.BitManifest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.srcinc.ngi.data.BitManifestMessage.BitManifest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.srcinc.ngi.data.BitManifestMessage.BitManifest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.srcinc.ngi.data.BitManifestMessage.BitManifest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.srcinc.ngi.data.BitManifestMessage.BitManifest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.srcinc.ngi.data.BitManifestMessage.BitManifest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.srcinc.ngi.data.BitManifestMessage.BitManifest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.srcinc.ngi.data.BitManifestMessage.BitManifest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.srcinc.ngi.data.BitManifestMessage.BitManifest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.srcinc.ngi.data.BitManifestMessage.BitManifest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.srcinc.ngi.data.BitManifest}
     *
     * <pre>
     * Description:
     * -   The BIT Manifest message provides a tree structure that contains the
     * identifying information for every BIT field that will be sent by the sensor.
     * ................
     * Direction:
     * -   From Sensor
     * ................
     * Send Conditions:
     * -   On Connect
     * -   On Change
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.srcinc.ngi.data.BitManifestMessage.BitManifestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.srcinc.ngi.data.BitManifestMessage.BitManifest.class, com.srcinc.ngi.data.BitManifestMessage.BitManifest.Builder.class);
      }

      // Construct using com.srcinc.ngi.data.BitManifestMessage.BitManifest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRootNodeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (rootNodeBuilder_ == null) {
          rootNode_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          rootNodeBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifest_descriptor;
      }

      public com.srcinc.ngi.data.BitManifestMessage.BitManifest getDefaultInstanceForType() {
        return com.srcinc.ngi.data.BitManifestMessage.BitManifest.getDefaultInstance();
      }

      public com.srcinc.ngi.data.BitManifestMessage.BitManifest build() {
        com.srcinc.ngi.data.BitManifestMessage.BitManifest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.srcinc.ngi.data.BitManifestMessage.BitManifest buildPartial() {
        com.srcinc.ngi.data.BitManifestMessage.BitManifest result = new com.srcinc.ngi.data.BitManifestMessage.BitManifest(this);
        int from_bitField0_ = bitField0_;
        if (rootNodeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            rootNode_ = java.util.Collections.unmodifiableList(rootNode_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.rootNode_ = rootNode_;
        } else {
          result.rootNode_ = rootNodeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.srcinc.ngi.data.BitManifestMessage.BitManifest) {
          return mergeFrom((com.srcinc.ngi.data.BitManifestMessage.BitManifest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.srcinc.ngi.data.BitManifestMessage.BitManifest other) {
        if (other == com.srcinc.ngi.data.BitManifestMessage.BitManifest.getDefaultInstance()) return this;
        if (rootNodeBuilder_ == null) {
          if (!other.rootNode_.isEmpty()) {
            if (rootNode_.isEmpty()) {
              rootNode_ = other.rootNode_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureRootNodeIsMutable();
              rootNode_.addAll(other.rootNode_);
            }
            onChanged();
          }
        } else {
          if (!other.rootNode_.isEmpty()) {
            if (rootNodeBuilder_.isEmpty()) {
              rootNodeBuilder_.dispose();
              rootNodeBuilder_ = null;
              rootNode_ = other.rootNode_;
              bitField0_ = (bitField0_ & ~0x00000001);
              rootNodeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRootNodeFieldBuilder() : null;
            } else {
              rootNodeBuilder_.addAllMessages(other.rootNode_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getRootNodeCount(); i++) {
          if (!getRootNode(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.srcinc.ngi.data.BitManifestMessage.BitManifest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.srcinc.ngi.data.BitManifestMessage.BitManifest) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;
      private java.util.List<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode> rootNode_ =
        java.util.Collections.emptyList();
      private void ensureRootNodeIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          rootNode_ = new java.util.ArrayList<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode>(rootNode_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNodeOrBuilder> rootNodeBuilder_;

      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
       *
       * <pre>
       * The top level nodes for the tree. All sub-nodes are contained within these nodes.
       * </pre>
       */
      public java.util.List<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode> getRootNodeList() {
        if (rootNodeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rootNode_);
        } else {
          return rootNodeBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
       *
       * <pre>
       * The top level nodes for the tree. All sub-nodes are contained within these nodes.
       * </pre>
       */
      public int getRootNodeCount() {
        if (rootNodeBuilder_ == null) {
          return rootNode_.size();
        } else {
          return rootNodeBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
       *
       * <pre>
       * The top level nodes for the tree. All sub-nodes are contained within these nodes.
       * </pre>
       */
      public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode getRootNode(int index) {
        if (rootNodeBuilder_ == null) {
          return rootNode_.get(index);
        } else {
          return rootNodeBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
       *
       * <pre>
       * The top level nodes for the tree. All sub-nodes are contained within these nodes.
       * </pre>
       */
      public Builder setRootNode(
          int index, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode value) {
        if (rootNodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRootNodeIsMutable();
          rootNode_.set(index, value);
          onChanged();
        } else {
          rootNodeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
       *
       * <pre>
       * The top level nodes for the tree. All sub-nodes are contained within these nodes.
       * </pre>
       */
      public Builder setRootNode(
          int index, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder builderForValue) {
        if (rootNodeBuilder_ == null) {
          ensureRootNodeIsMutable();
          rootNode_.set(index, builderForValue.build());
          onChanged();
        } else {
          rootNodeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
       *
       * <pre>
       * The top level nodes for the tree. All sub-nodes are contained within these nodes.
       * </pre>
       */
      public Builder addRootNode(com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode value) {
        if (rootNodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRootNodeIsMutable();
          rootNode_.add(value);
          onChanged();
        } else {
          rootNodeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
       *
       * <pre>
       * The top level nodes for the tree. All sub-nodes are contained within these nodes.
       * </pre>
       */
      public Builder addRootNode(
          int index, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode value) {
        if (rootNodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRootNodeIsMutable();
          rootNode_.add(index, value);
          onChanged();
        } else {
          rootNodeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
       *
       * <pre>
       * The top level nodes for the tree. All sub-nodes are contained within these nodes.
       * </pre>
       */
      public Builder addRootNode(
          com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder builderForValue) {
        if (rootNodeBuilder_ == null) {
          ensureRootNodeIsMutable();
          rootNode_.add(builderForValue.build());
          onChanged();
        } else {
          rootNodeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
       *
       * <pre>
       * The top level nodes for the tree. All sub-nodes are contained within these nodes.
       * </pre>
       */
      public Builder addRootNode(
          int index, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder builderForValue) {
        if (rootNodeBuilder_ == null) {
          ensureRootNodeIsMutable();
          rootNode_.add(index, builderForValue.build());
          onChanged();
        } else {
          rootNodeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
       *
       * <pre>
       * The top level nodes for the tree. All sub-nodes are contained within these nodes.
       * </pre>
       */
      public Builder addAllRootNode(
          java.lang.Iterable<? extends com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode> values) {
        if (rootNodeBuilder_ == null) {
          ensureRootNodeIsMutable();
          super.addAll(values, rootNode_);
          onChanged();
        } else {
          rootNodeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
       *
       * <pre>
       * The top level nodes for the tree. All sub-nodes are contained within these nodes.
       * </pre>
       */
      public Builder clearRootNode() {
        if (rootNodeBuilder_ == null) {
          rootNode_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          rootNodeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
       *
       * <pre>
       * The top level nodes for the tree. All sub-nodes are contained within these nodes.
       * </pre>
       */
      public Builder removeRootNode(int index) {
        if (rootNodeBuilder_ == null) {
          ensureRootNodeIsMutable();
          rootNode_.remove(index);
          onChanged();
        } else {
          rootNodeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
       *
       * <pre>
       * The top level nodes for the tree. All sub-nodes are contained within these nodes.
       * </pre>
       */
      public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder getRootNodeBuilder(
          int index) {
        return getRootNodeFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
       *
       * <pre>
       * The top level nodes for the tree. All sub-nodes are contained within these nodes.
       * </pre>
       */
      public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNodeOrBuilder getRootNodeOrBuilder(
          int index) {
        if (rootNodeBuilder_ == null) {
          return rootNode_.get(index);  } else {
          return rootNodeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
       *
       * <pre>
       * The top level nodes for the tree. All sub-nodes are contained within these nodes.
       * </pre>
       */
      public java.util.List<? extends com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNodeOrBuilder> 
           getRootNodeOrBuilderList() {
        if (rootNodeBuilder_ != null) {
          return rootNodeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rootNode_);
        }
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
       *
       * <pre>
       * The top level nodes for the tree. All sub-nodes are contained within these nodes.
       * </pre>
       */
      public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder addRootNodeBuilder() {
        return getRootNodeFieldBuilder().addBuilder(
            com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.getDefaultInstance());
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
       *
       * <pre>
       * The top level nodes for the tree. All sub-nodes are contained within these nodes.
       * </pre>
       */
      public com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder addRootNodeBuilder(
          int index) {
        return getRootNodeFieldBuilder().addBuilder(
            index, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.getDefaultInstance());
      }
      /**
       * <code>repeated .com.srcinc.ngi.data.BitManifest.BitNode root_node = 1;</code>
       *
       * <pre>
       * The top level nodes for the tree. All sub-nodes are contained within these nodes.
       * </pre>
       */
      public java.util.List<com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder> 
           getRootNodeBuilderList() {
        return getRootNodeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNodeOrBuilder> 
          getRootNodeFieldBuilder() {
        if (rootNodeBuilder_ == null) {
          rootNodeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNode.Builder, com.srcinc.ngi.data.BitManifestMessage.BitManifest.BitNodeOrBuilder>(
                  rootNode_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          rootNode_ = null;
        }
        return rootNodeBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.srcinc.ngi.data.BitManifest)
    }

    static {
      defaultInstance = new BitManifest(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.srcinc.ngi.data.BitManifest)
  }

  public interface BitManifestTopicOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .service_infrastructure.Header header = 100;
    /**
     * <code>optional .service_infrastructure.Header header = 100;</code>
     */
    boolean hasHeader();
    /**
     * <code>optional .service_infrastructure.Header header = 100;</code>
     */
    fv.protos.kepsvisor.ServiceInfrastructureCommon.Header getHeader();
    /**
     * <code>optional .service_infrastructure.Header header = 100;</code>
     */
    fv.protos.kepsvisor.ServiceInfrastructureCommon.HeaderOrBuilder getHeaderOrBuilder();

    // optional .com.srcinc.ngi.data.BitManifest bit_manifest = 1;
    /**
     * <code>optional .com.srcinc.ngi.data.BitManifest bit_manifest = 1;</code>
     */
    boolean hasBitManifest();
    /**
     * <code>optional .com.srcinc.ngi.data.BitManifest bit_manifest = 1;</code>
     */
    com.srcinc.ngi.data.BitManifestMessage.BitManifest getBitManifest();
    /**
     * <code>optional .com.srcinc.ngi.data.BitManifest bit_manifest = 1;</code>
     */
    com.srcinc.ngi.data.BitManifestMessage.BitManifestOrBuilder getBitManifestOrBuilder();
  }
  /**
   * Protobuf type {@code com.srcinc.ngi.data.BitManifestTopic}
   */
  public static final class BitManifestTopic extends
      com.google.protobuf.GeneratedMessage
      implements BitManifestTopicOrBuilder {
    // Use BitManifestTopic.newBuilder() to construct.
    private BitManifestTopic(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BitManifestTopic(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BitManifestTopic defaultInstance;
    public static BitManifestTopic getDefaultInstance() {
      return defaultInstance;
    }

    public BitManifestTopic getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BitManifestTopic(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.srcinc.ngi.data.BitManifestMessage.BitManifest.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = bitManifest_.toBuilder();
              }
              bitManifest_ = input.readMessage(com.srcinc.ngi.data.BitManifestMessage.BitManifest.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bitManifest_);
                bitManifest_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 802: {
              fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = header_.toBuilder();
              }
              header_ = input.readMessage(fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(header_);
                header_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifestTopic_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifestTopic_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic.class, com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic.Builder.class);
    }

    public static com.google.protobuf.Parser<BitManifestTopic> PARSER =
        new com.google.protobuf.AbstractParser<BitManifestTopic>() {
      public BitManifestTopic parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BitManifestTopic(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BitManifestTopic> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional .service_infrastructure.Header header = 100;
    public static final int HEADER_FIELD_NUMBER = 100;
    private fv.protos.kepsvisor.ServiceInfrastructureCommon.Header header_;
    /**
     * <code>optional .service_infrastructure.Header header = 100;</code>
     */
    public boolean hasHeader() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .service_infrastructure.Header header = 100;</code>
     */
    public fv.protos.kepsvisor.ServiceInfrastructureCommon.Header getHeader() {
      return header_;
    }
    /**
     * <code>optional .service_infrastructure.Header header = 100;</code>
     */
    public fv.protos.kepsvisor.ServiceInfrastructureCommon.HeaderOrBuilder getHeaderOrBuilder() {
      return header_;
    }

    // optional .com.srcinc.ngi.data.BitManifest bit_manifest = 1;
    public static final int BIT_MANIFEST_FIELD_NUMBER = 1;
    private com.srcinc.ngi.data.BitManifestMessage.BitManifest bitManifest_;
    /**
     * <code>optional .com.srcinc.ngi.data.BitManifest bit_manifest = 1;</code>
     */
    public boolean hasBitManifest() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .com.srcinc.ngi.data.BitManifest bit_manifest = 1;</code>
     */
    public com.srcinc.ngi.data.BitManifestMessage.BitManifest getBitManifest() {
      return bitManifest_;
    }
    /**
     * <code>optional .com.srcinc.ngi.data.BitManifest bit_manifest = 1;</code>
     */
    public com.srcinc.ngi.data.BitManifestMessage.BitManifestOrBuilder getBitManifestOrBuilder() {
      return bitManifest_;
    }

    private void initFields() {
      header_ = fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.getDefaultInstance();
      bitManifest_ = com.srcinc.ngi.data.BitManifestMessage.BitManifest.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasBitManifest()) {
        if (!getBitManifest().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(1, bitManifest_);
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(100, header_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, bitManifest_);
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(100, header_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.srcinc.ngi.data.BitManifestTopic}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.srcinc.ngi.data.BitManifestMessage.BitManifestTopicOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifestTopic_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifestTopic_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic.class, com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic.Builder.class);
      }

      // Construct using com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHeaderFieldBuilder();
          getBitManifestFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (headerBuilder_ == null) {
          header_ = fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.getDefaultInstance();
        } else {
          headerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (bitManifestBuilder_ == null) {
          bitManifest_ = com.srcinc.ngi.data.BitManifestMessage.BitManifest.getDefaultInstance();
        } else {
          bitManifestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.srcinc.ngi.data.BitManifestMessage.internal_static_com_srcinc_ngi_data_BitManifestTopic_descriptor;
      }

      public com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic getDefaultInstanceForType() {
        return com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic.getDefaultInstance();
      }

      public com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic build() {
        com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic buildPartial() {
        com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic result = new com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (headerBuilder_ == null) {
          result.header_ = header_;
        } else {
          result.header_ = headerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (bitManifestBuilder_ == null) {
          result.bitManifest_ = bitManifest_;
        } else {
          result.bitManifest_ = bitManifestBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic) {
          return mergeFrom((com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic other) {
        if (other == com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic.getDefaultInstance()) return this;
        if (other.hasHeader()) {
          mergeHeader(other.getHeader());
        }
        if (other.hasBitManifest()) {
          mergeBitManifest(other.getBitManifest());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasBitManifest()) {
          if (!getBitManifest().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.srcinc.ngi.data.BitManifestMessage.BitManifestTopic) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .service_infrastructure.Header header = 100;
      private fv.protos.kepsvisor.ServiceInfrastructureCommon.Header header_ = fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          fv.protos.kepsvisor.ServiceInfrastructureCommon.Header, fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.Builder, fv.protos.kepsvisor.ServiceInfrastructureCommon.HeaderOrBuilder> headerBuilder_;
      /**
       * <code>optional .service_infrastructure.Header header = 100;</code>
       */
      public boolean hasHeader() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .service_infrastructure.Header header = 100;</code>
       */
      public fv.protos.kepsvisor.ServiceInfrastructureCommon.Header getHeader() {
        if (headerBuilder_ == null) {
          return header_;
        } else {
          return headerBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .service_infrastructure.Header header = 100;</code>
       */
      public Builder setHeader(fv.protos.kepsvisor.ServiceInfrastructureCommon.Header value) {
        if (headerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          header_ = value;
          onChanged();
        } else {
          headerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .service_infrastructure.Header header = 100;</code>
       */
      public Builder setHeader(
          fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.Builder builderForValue) {
        if (headerBuilder_ == null) {
          header_ = builderForValue.build();
          onChanged();
        } else {
          headerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .service_infrastructure.Header header = 100;</code>
       */
      public Builder mergeHeader(fv.protos.kepsvisor.ServiceInfrastructureCommon.Header value) {
        if (headerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              header_ != fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.getDefaultInstance()) {
            header_ =
              fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.newBuilder(header_).mergeFrom(value).buildPartial();
          } else {
            header_ = value;
          }
          onChanged();
        } else {
          headerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .service_infrastructure.Header header = 100;</code>
       */
      public Builder clearHeader() {
        if (headerBuilder_ == null) {
          header_ = fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.getDefaultInstance();
          onChanged();
        } else {
          headerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .service_infrastructure.Header header = 100;</code>
       */
      public fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.Builder getHeaderBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getHeaderFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .service_infrastructure.Header header = 100;</code>
       */
      public fv.protos.kepsvisor.ServiceInfrastructureCommon.HeaderOrBuilder getHeaderOrBuilder() {
        if (headerBuilder_ != null) {
          return headerBuilder_.getMessageOrBuilder();
        } else {
          return header_;
        }
      }
      /**
       * <code>optional .service_infrastructure.Header header = 100;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          fv.protos.kepsvisor.ServiceInfrastructureCommon.Header, fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.Builder, fv.protos.kepsvisor.ServiceInfrastructureCommon.HeaderOrBuilder> 
          getHeaderFieldBuilder() {
        if (headerBuilder_ == null) {
          headerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              fv.protos.kepsvisor.ServiceInfrastructureCommon.Header, fv.protos.kepsvisor.ServiceInfrastructureCommon.Header.Builder, fv.protos.kepsvisor.ServiceInfrastructureCommon.HeaderOrBuilder>(
                  header_,
                  getParentForChildren(),
                  isClean());
          header_ = null;
        }
        return headerBuilder_;
      }

      // optional .com.srcinc.ngi.data.BitManifest bit_manifest = 1;
      private com.srcinc.ngi.data.BitManifestMessage.BitManifest bitManifest_ = com.srcinc.ngi.data.BitManifestMessage.BitManifest.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.srcinc.ngi.data.BitManifestMessage.BitManifest, com.srcinc.ngi.data.BitManifestMessage.BitManifest.Builder, com.srcinc.ngi.data.BitManifestMessage.BitManifestOrBuilder> bitManifestBuilder_;
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest bit_manifest = 1;</code>
       */
      public boolean hasBitManifest() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest bit_manifest = 1;</code>
       */
      public com.srcinc.ngi.data.BitManifestMessage.BitManifest getBitManifest() {
        if (bitManifestBuilder_ == null) {
          return bitManifest_;
        } else {
          return bitManifestBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest bit_manifest = 1;</code>
       */
      public Builder setBitManifest(com.srcinc.ngi.data.BitManifestMessage.BitManifest value) {
        if (bitManifestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitManifest_ = value;
          onChanged();
        } else {
          bitManifestBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest bit_manifest = 1;</code>
       */
      public Builder setBitManifest(
          com.srcinc.ngi.data.BitManifestMessage.BitManifest.Builder builderForValue) {
        if (bitManifestBuilder_ == null) {
          bitManifest_ = builderForValue.build();
          onChanged();
        } else {
          bitManifestBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest bit_manifest = 1;</code>
       */
      public Builder mergeBitManifest(com.srcinc.ngi.data.BitManifestMessage.BitManifest value) {
        if (bitManifestBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              bitManifest_ != com.srcinc.ngi.data.BitManifestMessage.BitManifest.getDefaultInstance()) {
            bitManifest_ =
              com.srcinc.ngi.data.BitManifestMessage.BitManifest.newBuilder(bitManifest_).mergeFrom(value).buildPartial();
          } else {
            bitManifest_ = value;
          }
          onChanged();
        } else {
          bitManifestBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest bit_manifest = 1;</code>
       */
      public Builder clearBitManifest() {
        if (bitManifestBuilder_ == null) {
          bitManifest_ = com.srcinc.ngi.data.BitManifestMessage.BitManifest.getDefaultInstance();
          onChanged();
        } else {
          bitManifestBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest bit_manifest = 1;</code>
       */
      public com.srcinc.ngi.data.BitManifestMessage.BitManifest.Builder getBitManifestBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getBitManifestFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest bit_manifest = 1;</code>
       */
      public com.srcinc.ngi.data.BitManifestMessage.BitManifestOrBuilder getBitManifestOrBuilder() {
        if (bitManifestBuilder_ != null) {
          return bitManifestBuilder_.getMessageOrBuilder();
        } else {
          return bitManifest_;
        }
      }
      /**
       * <code>optional .com.srcinc.ngi.data.BitManifest bit_manifest = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.srcinc.ngi.data.BitManifestMessage.BitManifest, com.srcinc.ngi.data.BitManifestMessage.BitManifest.Builder, com.srcinc.ngi.data.BitManifestMessage.BitManifestOrBuilder> 
          getBitManifestFieldBuilder() {
        if (bitManifestBuilder_ == null) {
          bitManifestBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.srcinc.ngi.data.BitManifestMessage.BitManifest, com.srcinc.ngi.data.BitManifestMessage.BitManifest.Builder, com.srcinc.ngi.data.BitManifestMessage.BitManifestOrBuilder>(
                  bitManifest_,
                  getParentForChildren(),
                  isClean());
          bitManifest_ = null;
        }
        return bitManifestBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.srcinc.ngi.data.BitManifestTopic)
    }

    static {
      defaultInstance = new BitManifestTopic(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.srcinc.ngi.data.BitManifestTopic)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_srcinc_ngi_data_BitManifest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_srcinc_ngi_data_BitManifest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_srcinc_ngi_data_BitManifest_BitProperty_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_srcinc_ngi_data_BitManifest_BitProperty_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_srcinc_ngi_data_BitManifest_BitProperty_Thresholds_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_srcinc_ngi_data_BitManifest_BitProperty_Thresholds_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_srcinc_ngi_data_BitManifest_BitNode_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_srcinc_ngi_data_BitManifest_BitNode_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_srcinc_ngi_data_BitManifestTopic_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_srcinc_ngi_data_BitManifestTopic_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030BitManifestMessage.proto\022\023com.srcinc.n" +
      "gi.data\032\013Users.proto\032!ServiceInfrastruct" +
      "ureCommon.proto\"\215\t\n\013BitManifest\022;\n\troot_" +
      "node\030\001 \003(\0132(.com.srcinc.ngi.data.BitMani" +
      "fest.BitNode\032\257\006\n\013BitProperty\022\n\n\002id\030\001 \002(\005" +
      "\022\024\n\014display_name\030\002 \002(\t\022\023\n\013description\030\003 " +
      "\001(\t\022A\n\005units\030\004 \001(\01622.com.srcinc.ngi.data" +
      ".BitManifest.BitProperty.Units\022@\n\004type\030\005" +
      " \001(\01622.com.srcinc.ngi.data.BitManifest.B" +
      "itProperty.Types\0228\n\016min_user_level\030\006 \001(\016",
      "2 .com.srcinc.ngi.common.UserLevel\022K\n\nth" +
      "resholds\030\007 \001(\01327.com.srcinc.ngi.data.Bit" +
      "Manifest.BitProperty.Thresholds\022\022\n\ngroup" +
      "_name\030\010 \001(\t\022\026\n\016history_length\030\t \001(\005\032b\n\nT" +
      "hresholds\022\023\n\013max_faulted\030\001 \001(\001\022\024\n\014max_de" +
      "graded\030\002 \001(\001\022\024\n\014min_degraded\030\003 \001(\001\022\023\n\013mi" +
      "n_faulted\030\004 \001(\001\"\330\001\n\005Units\022\021\n\rUNITS_UNKNO" +
      "WN\020\000\022\017\n\013UNITS_VOLTS\020\001\022\016\n\nUNITS_AMPS\020\002\022\014\n" +
      "\010UNITS_DB\020\003\022\021\n\rUNITS_CELSIUS\020\004\022\014\n\010UNITS_" +
      "HZ\020\005\022\022\n\016UNITS_TIMESPAN\020\006\022\022\n\016UNITS_TIMESP",
      "EC\020\007\022\021\n\rUNITS_RADIANS\020\010\022\016\n\nUNITS_KBPS\020\t\022" +
      "\021\n\rUNITS_PERCENT\020\n\022\016\n\nUNITS_ECEF\020\013\"r\n\005Ty" +
      "pes\022\020\n\014TYPE_UNKNOWN\020\000\022\r\n\tTYPE_BOOL\020\001\022\014\n\010" +
      "TYPE_INT\020\002\022\017\n\013TYPE_DOUBLE\020\003\022\017\n\013TYPE_STRI" +
      "NG\020\004\022\030\n\024TYPE_DOUBLE_REPEATED\020\005\032\216\002\n\007BitNo" +
      "de\022\n\n\002id\030\001 \002(\005\022\024\n\014display_name\030\002 \002(\t\022\023\n\013" +
      "description\030\003 \001(\t\0224\n\nuser_level\030\004 \001(\0162 ." +
      "com.srcinc.ngi.common.UserLevel\022@\n\nprope" +
      "rties\030\005 \003(\0132,.com.srcinc.ngi.data.BitMan" +
      "ifest.BitProperty\0227\n\005nodes\030\006 \003(\0132(.com.s",
      "rcinc.ngi.data.BitManifest.BitNode\022\033\n\023is" +
      "_top_level_status\030\007 \001(\010\"z\n\020BitManifestTo" +
      "pic\022.\n\006header\030d \001(\0132\036.service_infrastruc" +
      "ture.Header\0226\n\014bit_manifest\030\001 \001(\0132 .com." +
      "srcinc.ngi.data.BitManifest"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_srcinc_ngi_data_BitManifest_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_srcinc_ngi_data_BitManifest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_srcinc_ngi_data_BitManifest_descriptor,
              new java.lang.String[] { "RootNode", });
          internal_static_com_srcinc_ngi_data_BitManifest_BitProperty_descriptor =
            internal_static_com_srcinc_ngi_data_BitManifest_descriptor.getNestedTypes().get(0);
          internal_static_com_srcinc_ngi_data_BitManifest_BitProperty_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_srcinc_ngi_data_BitManifest_BitProperty_descriptor,
              new java.lang.String[] { "Id", "DisplayName", "Description", "Units", "Type", "MinUserLevel", "Thresholds", "GroupName", "HistoryLength", });
          internal_static_com_srcinc_ngi_data_BitManifest_BitProperty_Thresholds_descriptor =
            internal_static_com_srcinc_ngi_data_BitManifest_BitProperty_descriptor.getNestedTypes().get(0);
          internal_static_com_srcinc_ngi_data_BitManifest_BitProperty_Thresholds_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_srcinc_ngi_data_BitManifest_BitProperty_Thresholds_descriptor,
              new java.lang.String[] { "MaxFaulted", "MaxDegraded", "MinDegraded", "MinFaulted", });
          internal_static_com_srcinc_ngi_data_BitManifest_BitNode_descriptor =
            internal_static_com_srcinc_ngi_data_BitManifest_descriptor.getNestedTypes().get(1);
          internal_static_com_srcinc_ngi_data_BitManifest_BitNode_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_srcinc_ngi_data_BitManifest_BitNode_descriptor,
              new java.lang.String[] { "Id", "DisplayName", "Description", "UserLevel", "Properties", "Nodes", "IsTopLevelStatus", });
          internal_static_com_srcinc_ngi_data_BitManifestTopic_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_srcinc_ngi_data_BitManifestTopic_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_srcinc_ngi_data_BitManifestTopic_descriptor,
              new java.lang.String[] { "Header", "BitManifest", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.srcinc.ngi.common.Users.getDescriptor(),
          fv.protos.kepsvisor.ServiceInfrastructureCommon.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
